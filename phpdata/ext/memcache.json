[
    {
        "stmtType": "Class",
        "name": "MemcachePool",
        "fqn": "\\MemcachePool",
        "type": 0,
        "extendsClass": "",
        "methods": [
            {
                "name": "connect",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "addserver",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setserverparams",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setfailurecallback",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getserverstatus",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "findserver",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getversion",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "add",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "set",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "replace",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "cas",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "append",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "prepend",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "get",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "delete",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getstats",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getextendedstats",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setcompressthreshold",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "increment",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "decrement",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "close",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "flush",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "Memcache",
        "fqn": "\\Memcache",
        "type": 0,
        "extendsClass": "MemcachePool",
        "methods": [
            {
                "name": "connect",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "host",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "port",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "timeout",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * (PECL memcache &gt;= 0.2.0)<br\/>\n * Open memcached server connection\n * @link http:\/\/php.net\/manual\/en\/memcache.connect.php\n * @param string $host <p>\n * Point to the host where memcached is listening for connections. This parameter\n * may also specify other transports like unix:\/\/\/path\/to\/memcached.sock\n * to use UNIX domain sockets, in this case <i>port<\/i> must also\n * be set to 0.\n * <\/p>\n * @param int $port [optional] <p>\n * Point to the port where memcached is listening for connections. Set this\n * parameter to 0 when using UNIX domain sockets.\n * <\/p>\n * <p>\n * Please note: <i>port<\/i> defaults to\n * memcache.default_port\n * if not specified. For this reason it is wise to specify the port\n * explicitly in this method call.\n * <\/p>\n * @param int $timeout [optional] <p>\n * Value in seconds which will be used for connecting to the daemon. Think\n * twice before changing the default value of 1 second - you can lose all\n * the advantages of caching if your connection is too slow.\n * <\/p>\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\n *\/"
            },
            {
                "name": "pconnect",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "host",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "port",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "timeout",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * (PECL memcache &gt;= 0.4.0)<br\/>\n * Open memcached server persistent connection\n * @link http:\/\/php.net\/manual\/en\/memcache.pconnect.php\n * @param string $host <p>\n * Point to the host where memcached is listening for connections. This parameter\n * may also specify other transports like unix:\/\/\/path\/to\/memcached.sock\n * to use UNIX domain sockets, in this case <i>port<\/i> must also\n * be set to 0.\n * <\/p>\n * @param int $port [optional] <p>\n * Point to the port where memcached is listening for connections. Set this\n * parameter to 0 when using UNIX domain sockets.\n * <\/p>\n * @param int $timeout [optional] <p>\n * Value in seconds which will be used for connecting to the daemon. Think\n * twice before changing the default value of 1 second - you can lose all\n * the advantages of caching if your connection is too slow.\n * <\/p>\n * @return mixed a Memcache object or <b>FALSE<\/b> on failure.\n *\/"
            },
            {
                "name": "addserver",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "host",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "port",
                        "type": null,
                        "byRef": false,
                        "default": 11211
                    },
                    {
                        "name": "persistent",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "weight",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "timeout",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "retry_interval",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "status",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "failure_callback",
                        "type": "callable",
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "timeoutms",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * (PECL memcache &gt;= 2.0.0)<br\/>\n * Add a memcached server to connection pool\n * @link http:\/\/php.net\/manual\/en\/memcache.addserver.php\n * @param string $host <p>\n * Point to the host where memcached is listening for connections. This parameter\n * may also specify other transports like unix:\/\/\/path\/to\/memcached.sock\n * to use UNIX domain sockets, in this case <i>port<\/i> must also\n * be set to 0.\n * <\/p>\n * @param int $port [optional] <p>\n * Point to the port where memcached is listening for connections.\n * Set this\n * parameter to 0 when using UNIX domain sockets.\n * <\/p>\n * <p>\n * Please note: <i>port<\/i> defaults to\n * memcache.default_port\n * if not specified. For this reason it is wise to specify the port\n * explicitly in this method call.\n * <\/p>\n * @param bool $persistent [optional] <p>\n * Controls the use of a persistent connection. Default to <b>TRUE<\/b>.\n * <\/p>\n * @param int $weight [optional] <p>\n * Number of buckets to create for this server which in turn control its\n * probability of it being selected. The probability is relative to the\n * total weight of all servers.\n * <\/p>\n * @param int $timeout [optional] <p>\n * Value in seconds which will be used for connecting to the daemon. Think\n * twice before changing the default value of 1 second - you can lose all\n * the advantages of caching if your connection is too slow.\n * <\/p>\n * @param int $retry_interval [optional] <p>\n * Controls how often a failed server will be retried, the default value\n * is 15 seconds. Setting this parameter to -1 disables automatic retry.\n * Neither this nor the <i>persistent<\/i> parameter has any\n * effect when the extension is loaded dynamically via <b>dl<\/b>.\n * <\/p>\n * <p>\n * Each failed connection struct has its own timeout and before it has expired\n * the struct will be skipped when selecting backends to serve a request. Once\n * expired the connection will be successfully reconnected or marked as failed\n * for another <i>retry_interval<\/i> seconds. The typical\n * effect is that each web server child will retry the connection about every\n * <i>retry_interval<\/i> seconds when serving a page.\n * <\/p>\n * @param bool $status [optional] <p>\n * Controls if the server should be flagged as online. Setting this parameter\n * to <b>FALSE<\/b> and <i>retry_interval<\/i> to -1 allows a failed\n * server to be kept in the pool so as not to affect the key distribution\n * algorithm. Requests for this server will then failover or fail immediately\n * depending on the <i>memcache.allow_failover<\/i> setting.\n * Default to <b>TRUE<\/b>, meaning the server should be considered online.\n * <\/p>\n * @param callable $failure_callback [optional] <p>\n * Allows the user to specify a callback function to run upon encountering an\n * error. The callback is run before failover is attempted. The function takes\n * two parameters, the hostname and port of the failed server.\n * <\/p>\n * @param int $timeoutms [optional] <p>\n * <\/p>\n * @return bool <b>TRUE<\/b> on success or <b>FALSE<\/b> on failure.\n *\/"
            },
            {
                "name": "setserverparams",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setfailurecallback",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getserverstatus",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "findserver",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getversion",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "add",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "set",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "replace",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "cas",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "append",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "prepend",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "get",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "delete",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getstats",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getextendedstats",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setcompressthreshold",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "increment",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "decrement",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "close",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "flush",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_connect",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_pconnect",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_add_server",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_set_server_params",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_set_failure_callback",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_get_server_status",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_get_version",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_add",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_set",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_replace",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_cas",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_append",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_prepend",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_get",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_delete",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_debug",
        "params": [
            {
                "name": "on_off",
                "type": null,
                "byRef": false,
                "default": ""
            }
        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_get_stats",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_get_extended_stats",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_set_compress_threshold",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_increment",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_decrement",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_close",
        "params": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "memcache_flush",
        "params": [

        ]
    },
    {
        "stmtType": "Constant",
        "name": "MEMCACHE_COMPRESSED",
        "value": 2
    },
    {
        "stmtType": "Constant",
        "name": "MEMCACHE_USER1",
        "value": 65536
    },
    {
        "stmtType": "Constant",
        "name": "MEMCACHE_USER2",
        "value": 131072
    },
    {
        "stmtType": "Constant",
        "name": "MEMCACHE_USER3",
        "value": 262144
    },
    {
        "stmtType": "Constant",
        "name": "MEMCACHE_USER4",
        "value": 524288
    },
    {
        "stmtType": "Constant",
        "name": "MEMCACHE_HAVE_SESSION",
        "value": 1
    }
]
