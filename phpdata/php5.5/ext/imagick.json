[
    {
        "stmtType": "Class",
        "name": "ImagickException",
        "fqn": "\\ImagickException",
        "type": 0,
        "extends": "Exception",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param message[optional]\n * @param code[optional]\n * @param previous[optional]\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickDrawException",
        "fqn": "\\ImagickDrawException",
        "type": 0,
        "extends": "Exception",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param message[optional]\n * @param code[optional]\n * @param previous[optional]\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickPixelIteratorException",
        "fqn": "\\ImagickPixelIteratorException",
        "type": 0,
        "extends": "Exception",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param message[optional]\n * @param code[optional]\n * @param previous[optional]\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickPixelException",
        "fqn": "\\ImagickPixelException",
        "type": 0,
        "extends": "Exception",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param message[optional]\n * @param code[optional]\n * @param previous[optional]\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "Imagick",
        "fqn": "\\Imagick",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "optimizeimagelayers",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Removes repeated portions of images to optimize\n * @link http:\/\/www.php.net\/manual\/en\/imagick.optimizeimagelayers.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "compareimagelayers",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns the maximum bounding region between images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.compareimagelayers.php\n * @param method int <p>\n * One of the layer method constants.\n * <\/p>\n * @return Imagick Returns true on success.\n *\/"
            },
            {
                "name": "pingimageblob",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "image",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Quickly fetch attributes\n * @link http:\/\/www.php.net\/manual\/en\/imagick.pingimageblob.php\n * @param image string <p>\n * A string containing the image.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "pingimagefile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filehandle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fileName",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Get basic image attributes in a lightweight manner\n * @link http:\/\/www.php.net\/manual\/en\/imagick.pingimagefile.php\n * @param filehandle resource <p>\n * An open filehandle to the image.\n * <\/p>\n * @param fileName string[optional] <p>\n * Optional filename for this image.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "transposeimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Creates a vertical mirror image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.transposeimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "transverseimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Creates a horizontal mirror image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.transverseimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "trimimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Remove edges from the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.trimimage.php\n * @param fuzz float <p>\n * By default target must match a particular pixel color exactly.\n * However, in many cases two colors may differ by a small amount.\n * The fuzz member of image defines how much tolerance is acceptable\n * to consider two colors as the same. This parameter represents the variation\n * on the quantum range.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "waveimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "amplitude",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "length",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Applies wave filter to the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.waveimage.php\n * @param amplitude float <p>\n * The amplitude of the wave.\n * <\/p>\n * @param length float <p>\n * The length of the wave.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "vignetteimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "blackPoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "whitePoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds vignette filter to the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.vignetteimage.php\n * @param blackPoint float <p>\n * The black point.\n * <\/p>\n * @param whitePoint float <p>\n * The white point\n * <\/p>\n * @param x int <p>\n * X offset of the ellipse\n * <\/p>\n * @param y int <p>\n * Y offset of the ellipse\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "uniqueimagecolors",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Discards all but one of any pixel color\n * @link http:\/\/www.php.net\/manual\/en\/imagick.uniqueimagecolors.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimagematte",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Return if the image has a matte channel\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagematte.php\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "setimagematte",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "matte",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image matte channel\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagematte.php\n * @param matte bool <p>\n * True activates the matte channel and false disables it.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "adaptiveresizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bestfit",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adaptively resize image with data dependent triangulation\n * @link http:\/\/www.php.net\/manual\/en\/imagick.adaptiveresizeimage.php\n * @param columns int <p>\n * The number of columns in the scaled image.\n * <\/p>\n * @param rows int <p>\n * The number of rows in the scaled image.\n * <\/p>\n * @param bestfit bool[optional] <p>\n * Whether to fit the image inside a bounding box.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "sketchimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "angle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Simulates a pencil sketch\n * @link http:\/\/www.php.net\/manual\/en\/imagick.sketchimage.php\n * @param radius float <p>\n * The radius of the Gaussian, in pixels, not counting the center pixel\n * <\/p>\n * @param sigma float <p>\n * The standard deviation of the Gaussian, in pixels.\n * <\/p>\n * @param angle float <p>\n * Apply the effect along this angle.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "shadeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gray",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "azimuth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "elevation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Creates a 3D effect\n * @link http:\/\/www.php.net\/manual\/en\/imagick.shadeimage.php\n * @param gray bool <p>\n * A value other than zero shades the intensity of each pixel.\n * <\/p>\n * @param azimuth float <p>\n * Defines the light source direction.\n * <\/p>\n * @param elevation float <p>\n * Defines the light source direction.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getsizeoffset",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the size offset\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getsizeoffset.php\n * @return int the size offset associated with the Imagick object.\n *\/"
            },
            {
                "name": "setsizeoffset",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the size and offset of the Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setsizeoffset.php\n * @param columns int <p>\n * The width in pixels.\n * <\/p>\n * @param rows int <p>\n * The height in pixels.\n * <\/p>\n * @param offset int <p>\n * The image offset.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "adaptiveblurimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adds adaptive blur filter to image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.adaptiveblurimage.php\n * @param radius float <p>\n * The radius of the Gaussian, in pixels, not counting the center pixel.\n * Provide a value of 0 and the radius will be chosen automagically.\n * <\/p>\n * @param sigma float <p>\n * The standard deviation of the Gaussian, in pixels.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "contraststretchimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "black_point",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "white_point",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Enhances the contrast of a color image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.contraststretchimage.php\n * @param black_point float <p>\n * The black point.\n * <\/p>\n * @param white_point float <p>\n * The white point.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Imagick::CHANNEL_ALL. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "adaptivesharpenimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adaptively sharpen the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.adaptivesharpenimage.php\n * @param radius float <p>\n * The radius of the Gaussian, in pixels, not counting the center pixel. Use 0 for auto-select.\n * <\/p>\n * @param sigma float <p>\n * The standard deviation of the Gaussian, in pixels.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "randomthresholdimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "low",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "high",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Creates a high-contrast, two-color image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.randomthresholdimage.php\n * @param low float <p>\n * The low point\n * <\/p>\n * @param high float <p>\n * The high point\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "roundcornersimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "xRounding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "yRounding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "strokeWidth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "displace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sizeCorrection",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param xRounding\n * @param yRounding\n * @param strokeWidth[optional]\n * @param displace[optional]\n * @param sizeCorrection[optional]\n *\/"
            },
            {
                "name": "roundcorners",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_rounding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_rounding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "stroke_width",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "displace",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "size_correction",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Rounds image corners\n * @link http:\/\/www.php.net\/manual\/en\/imagick.roundcorners.php\n * @param x_rounding float <p>\n * x rounding\n * <\/p>\n * @param y_rounding float <p>\n * y rounding\n * <\/p>\n * @param stroke_width float[optional] <p>\n * stroke width\n * <\/p>\n * @param displace float[optional] <p>\n * image displace\n * <\/p>\n * @param size_correction float[optional] <p>\n * size correction\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setiteratorindex",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "index",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Set the iterator position\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setiteratorindex.php\n * @param index int <p>\n * The position to set the iterator to\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getiteratorindex",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the index of the current active image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getiteratorindex.php\n * @return int an integer containing the index of the image in the stack.\n *\/"
            },
            {
                "name": "transformimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "crop",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "geometry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Convenience method for setting crop size and the image geometry\n * @link http:\/\/www.php.net\/manual\/en\/imagick.transformimage.php\n * @param crop string <p>\n * A crop geometry string. This geometry defines a subregion of the image to crop.\n * <\/p>\n * @param geometry string <p>\n * An image geometry string. This geometry defines the final size of the image.\n * <\/p>\n * @return Imagick Returns true on success.\n *\/"
            },
            {
                "name": "setimageopacity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image opacity level\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageopacity.php\n * @param opacity float <p>\n * The level of transparency: 1.0 is fully opaque and 0.0 is fully\n * transparent.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "orderedposterizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold_map",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Performs an ordered dither\n * @link http:\/\/www.php.net\/manual\/en\/imagick.orderedposterizeimage.php\n * @param threshold_map string <p>\n * A string containing the name of the threshold dither map to use\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "polaroidimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "properties",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "angle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Simulates a Polaroid picture\n * @link http:\/\/www.php.net\/manual\/en\/imagick.polaroidimage.php\n * @param properties ImagickDraw <p>\n * The polaroid properties\n * <\/p>\n * @param angle float <p>\n * The polaroid angle\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimageproperty",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns the named image property\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageproperty.php\n * @param name string <p>\n * name of the property (for example Exif:DateTime)\n * <\/p>\n * @return string a string containing the image property, false if a\n * property with the given name does not exist.\n *\/"
            },
            {
                "name": "setimageproperty",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets an image property\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageproperty.php\n * @param name string <p>\n * <\/p>\n * @param value string <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageinterpolatemethod",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image interpolate pixel method\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageinterpolatemethod.php\n * @param method int <p>\n * The method is one of the Imagick::INTERPOLATE_* constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimageinterpolatemethod",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the interpolation method\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageinterpolatemethod.php\n * @return int the interpolate method on success.\n *\/"
            },
            {
                "name": "linearstretchimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "blackPoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "whitePoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Stretches with saturation the image intensity\n * @link http:\/\/www.php.net\/manual\/en\/imagick.linearstretchimage.php\n * @param blackPoint float <p>\n * The image black point\n * <\/p>\n * @param whitePoint float <p>\n * The image white point\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimagelength",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the image length in bytes\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagelength.php\n * @return int an int containing the current image size.\n *\/"
            },
            {
                "name": "extentimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Set image size\n * @link http:\/\/www.php.net\/manual\/en\/imagick.extentimage.php\n * @param width int <p>\n * The new width\n * <\/p>\n * @param height int <p>\n * The new height\n * <\/p>\n * @param x int <p>\n * X position for the new size\n * <\/p>\n * @param y int <p>\n * Y position for the new size\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimageorientation",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image orientation\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageorientation.php\n * @return int an int on success.\n *\/"
            },
            {
                "name": "setimageorientation",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "orientation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image orientation\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageorientation.php\n * @param orientation int <p>\n * One of the orientation constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "paintfloodfillimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bordercolor",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Changes the color value of any pixel that matches target\n * @link http:\/\/www.php.net\/manual\/en\/imagick.paintfloodfillimage.php\n * @param fill mixed <p>\n * ImagickPixel object or a string containing the fill color\n * <\/p>\n * @param fuzz float <p>\n * The amount of fuzz. For example, set fuzz to 10 and the color red at\n * intensities of 100 and 102 respectively are now interpreted as the\n * same color for the purposes of the floodfill.\n * <\/p>\n * @param bordercolor mixed <p>\n * ImagickPixel object or a string containing the border color\n * <\/p>\n * @param x int <p>\n * X start position of the floodfill\n * <\/p>\n * @param y int <p>\n * Y start position of the floodfill\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "clutimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "lookup_table",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Replaces colors in the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.clutimage.php\n * @param lookup_table Imagick <p>\n * Imagick object containing the color lookup table\n * <\/p>\n * @param channel float[optional] <p>\n * The Channeltype\n * constant. When not supplied, default channels are replaced.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimageproperties",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pattern",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "only_names",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the image properties\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageproperties.php\n * @param pattern string[optional] <p>\n * The pattern for property names.\n * <\/p>\n * @param only_names bool[optional] <p>\n * Whether to return only property names. If false then also the values are returned\n * <\/p>\n * @return array an array containing the image properties or property names.\n *\/"
            },
            {
                "name": "getimageprofiles",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pattern",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "only_names",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the image profiles\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageprofiles.php\n * @param pattern string[optional] <p>\n * The pattern for profile names.\n * <\/p>\n * @param only_names bool[optional] <p>\n * Whether to return only profile names. If false then values are returned as well\n * <\/p>\n * @return array an array containing the image profiles or profile names.\n *\/"
            },
            {
                "name": "distortimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "arguments",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bestfit",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Distorts an image using various distortion methods\n * @link http:\/\/www.php.net\/manual\/en\/imagick.distortimage.php\n * @param method int <p>\n * The method of image distortion. See distortion constants\n * <\/p>\n * @param arguments array <p>\n * The arguments for this distortion method\n * <\/p>\n * @param bestfit bool <p>\n * Attempt to resize destination to fit distorted source\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "writeimagefile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filehandle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Writes an image to a filehandle\n * @link http:\/\/www.php.net\/manual\/en\/imagick.writeimagefile.php\n * @param filehandle resource <p>\n * Filehandle where to write the image\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "writeimagesfile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filehandle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Writes frames to a filehandle\n * @link http:\/\/www.php.net\/manual\/en\/imagick.writeimagesfile.php\n * @param filehandle resource <p>\n * Filehandle where to write the images\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "resetimagepage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "page",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Reset image page\n * @link http:\/\/www.php.net\/manual\/en\/imagick.resetimagepage.php\n * @param page string <p>\n * The page definition. For example 7168x5147+0+0\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageclipmask",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clip_mask",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets image clip mask\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageclipmask.php\n * @param clip_mask Imagick <p>\n * The Imagick object containing the clip mask\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimageclipmask",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets image clip mask\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageclipmask.php\n * @return Imagick an Imagick object containing the clip mask.\n *\/"
            },
            {
                "name": "animateimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_server",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Animates an image or images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.animateimages.php\n * @param x_server string <p>\n * X server address\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "recolorimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "matrix",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Recolors image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.recolorimage.php\n * @param matrix array <p>\n * The matrix containing the color values\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setfont",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "font",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets font\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setfont.php\n * @param font string <p>\n * Font name or a filename\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getfont",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets font\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getfont.php\n * @return string the string containing the font name or false if not font is set.\n *\/"
            },
            {
                "name": "setpointsize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "point_size",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets point size\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setpointsize.php\n * @param point_size float <p>\n * Point size\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getpointsize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets point size\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getpointsize.php\n * @return float a &float; containing the point size.\n *\/"
            },
            {
                "name": "mergeimagelayers",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "layer_method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Merges image layers\n * @link http:\/\/www.php.net\/manual\/en\/imagick.mergeimagelayers.php\n * @param layer_method int <p>\n * One of the Imagick::LAYERMETHOD_* constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagealphachannel",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "mode",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets image alpha channel\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagealphachannel.php\n * @param mode int <p>\n * One of the Imagick::ALPHACHANNEL_* constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "floodfillpaintimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "target",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "invert",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Changes the color value of any pixel that matches target\n * @link http:\/\/www.php.net\/manual\/en\/imagick.floodfillpaintimage.php\n * @param fill mixed <p>\n * ImagickPixel object or a string containing the fill color\n * <\/p>\n * @param fuzz float <p>\n * The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color.\n * <\/p>\n * @param target mixed <p>\n * ImagickPixel object or a string containing the target color to paint\n * <\/p>\n * @param x int <p>\n * X start position of the floodfill\n * <\/p>\n * @param y int <p>\n * Y start position of the floodfill\n * <\/p>\n * @param invert bool <p>\n * If true paints any pixel that does not match the target color.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "opaquepaintimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "target",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "invert",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Changes the color value of any pixel that matches target\n * @link http:\/\/www.php.net\/manual\/en\/imagick.opaquepaintimage.php\n * @param target mixed <p>\n * ImagickPixel object or a string containing the color to change\n * <\/p>\n * @param fill mixed <p>\n * The replacement color\n * <\/p>\n * @param fuzz float <p>\n * The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color.\n * <\/p>\n * @param invert bool <p>\n * If true paints any pixel that does not match the target color.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "transparentpaintimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "target",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "alpha",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "invert",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Paints pixels transparent\n * @link http:\/\/www.php.net\/manual\/en\/imagick.transparentpaintimage.php\n * @param target mixed <p>\n * The target color to paint\n * <\/p>\n * @param alpha float <p>\n * The level of transparency: 1.0 is fully opaque and 0.0 is fully transparent.\n * <\/p>\n * @param fuzz float <p>\n * The amount of fuzz. For example, set fuzz to 10 and the color red at intensities of 100 and 102 respectively are now interpreted as the same color.\n * <\/p>\n * @param invert bool <p>\n * If true paints any pixel that does not match the target color.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "liquidrescaleimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "delta_x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rigidity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Animates an image or images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.liquidrescaleimage.php\n * @param width int <p>\n * The width of the target size\n * <\/p>\n * @param height int <p>\n * The height of the target size\n * <\/p>\n * @param delta_x float <p>\n * How much the seam can traverse on x-axis.\n * Passing 0 causes the seams to be straight.\n * <\/p>\n * @param rigidity float <p>\n * Introduces a bias for non-straight seams. This parameter is\n * typically 0.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "encipherimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "passphrase",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Enciphers an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.encipherimage.php\n * @param passphrase string <p>\n * The passphrase\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "decipherimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "passphrase",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Deciphers an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.decipherimage.php\n * @param passphrase string <p>\n * The passphrase\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setgravity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gravity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the gravity\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setgravity.php\n * @param gravity int <p>\n * The gravity property. Refer to the list of\n * gravity constants.\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "getgravity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the gravity\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getgravity.php\n * @return int the gravity property. Refer to the list of\n * gravity constants.\n *\/"
            },
            {
                "name": "getimagechannelrange",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Gets channel range\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagechannelrange.php\n * @param channel int <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return array an array containing minima and maxima values of the channel(s).\n *\/"
            },
            {
                "name": "getimagealphachannel",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image alpha channel\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagealphachannel.php\n * @return int a constant defining the current alpha channel value. Refer to this\n * list of alpha channel constants.\n *\/"
            },
            {
                "name": "getimagechanneldistortions",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "reference",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "metric",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Gets channel distortions\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagechanneldistortions.php\n * @param reference Imagick <p>\n * Imagick object containing the reference image\n * <\/p>\n * @param metric int <p>\n * Refer to this list of metric type constants.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return float a double describing the channel distortion.\n *\/"
            },
            {
                "name": "setimagegravity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gravity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image gravity\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagegravity.php\n * @param gravity int <p>\n * The gravity property. Refer to the list of\n * gravity constants.\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "getimagegravity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image gravity\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagegravity.php\n * @return int the images gravity property. Refer to the list of\n * gravity constants.\n *\/"
            },
            {
                "name": "importimagepixels",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "map",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "storage",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "pixels",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Imports image pixels\n * @link http:\/\/www.php.net\/manual\/en\/imagick.importimagepixels.php\n * @param x int <p>\n * The image x position\n * <\/p>\n * @param y int <p>\n * The image y position\n * <\/p>\n * @param width int <p>\n * The image width\n * <\/p>\n * @param height int <p>\n * The image height\n * <\/p>\n * @param map string <p>\n * Map of pixel ordering as a string. This can be for example RGB.\n * The value can be any combination or order of R = red, G = green, B = blue, A = alpha (0 is transparent),\n * O = opacity (0 is opaque), C = cyan, Y = yellow, M = magenta, K = black, I = intensity (for grayscale), P = pad.\n * <\/p>\n * @param storage int <p>\n * The pixel storage method.\n * Refer to this list of pixel constants.\n * <\/p>\n * @param pixels array <p>\n * The array of pixels\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "deskewimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes skew from the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.deskewimage.php\n * @param threshold float <p>\n * Deskew threshold\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "segmentimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "COLORSPACE",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "cluster_threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "smooth_threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "verbose",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Segments an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.segmentimage.php\n * @param COLORSPACE int <p>\n * One of the COLORSPACE constants.\n * <\/p>\n * @param cluster_threshold float <p>\n * A percentage describing minimum number of pixels\n * contained in hexedra before it is considered valid.\n * <\/p>\n * @param smooth_threshold float <p>\n * Eliminates noise from the histogram.\n * <\/p>\n * @param verbose bool[optional] <p>\n * Whether to output detailed information about recognised classes.\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "sparsecolorimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "SPARSE_METHOD",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "arguments",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Interpolates colors\n * @link http:\/\/www.php.net\/manual\/en\/imagick.sparsecolorimage.php\n * @param SPARSE_METHOD int <p>\n * Refer to this list of sparse method constants\n * <\/p>\n * @param arguments array <p>\n * An array containing the coordinates.\n * The array is in format array(1,1, 2,45)\n * <\/p>\n * @param channel int[optional]\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "remapimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "replacement",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "DITHER",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Remaps image colors\n * @link http:\/\/www.php.net\/manual\/en\/imagick.remapimage.php\n * @param replacement Imagick <p>\n * An Imagick object containing the replacement colors\n * <\/p>\n * @param DITHER int <p>\n * Refer to this list of dither method constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "exportimagepixels",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "map",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "STORAGE",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Exports raw image pixels\n * @link http:\/\/www.php.net\/manual\/en\/imagick.exportimagepixels.php\n * @param x int <p>\n * X-coordinate of the exported area\n * <\/p>\n * @param y int <p>\n * Y-coordinate of the exported area\n * <\/p>\n * @param width int <p>\n * Width of the exported aread\n * <\/p>\n * @param height int <p>\n * Height of the exported area\n * <\/p>\n * @param map string <p>\n * Ordering of the exported pixels. For example \"RGB\".\n * Valid characters for the map are R, G, B, A, O, C, Y, M, K, I and P.\n * <\/p>\n * @param STORAGE int <p>\n * Refer to this list of pixel type constants\n * <\/p>\n * @return array an array containing the pixels values.\n *\/"
            },
            {
                "name": "getimagechannelkurtosis",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * The getImageChannelKurtosis purpose\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagechannelkurtosis.php\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return array an array with kurtosis and skewness\n * members.\n *\/"
            },
            {
                "name": "functionimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "function",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "arguments",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Applies a function on the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.functionimage.php\n * @param function int <p>\n * Refer to this list of function constants\n * <\/p>\n * @param arguments array <p>\n * Array of arguments to pass to this function.\n * <\/p>\n * @param channel int[optional]\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "transformimagecolorspace",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "COLORSPACE",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param COLORSPACE\n *\/"
            },
            {
                "name": "haldclutimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clut",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Replaces colors in the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.haldclutimage.php\n * @param clut Imagick <p>\n * Imagick object containing the Hald lookup image.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimageartifact",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "artifact",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Get image artifact\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageartifact.php\n * @param artifact string <p>\n * The name of the artifact\n * <\/p>\n * @return string the artifact value on success.\n *\/"
            },
            {
                "name": "setimageartifact",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "artifact",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Set image artifact\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageartifact.php\n * @param artifact string <p>\n * The name of the artifact\n * <\/p>\n * @param value string <p>\n * The value of the artifact\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "deleteimageartifact",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "artifact",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Delete image artifact\n * @link http:\/\/www.php.net\/manual\/en\/imagick.deleteimageartifact.php\n * @param artifact string <p>\n * The name of the artifact to delete\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getcolorspace",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the colorspace\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getcolorspace.php\n * @return int an integer which can be compared against COLORSPACE constants.\n *\/"
            },
            {
                "name": "setcolorspace",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "COLORSPACE",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Set colorspace\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setcolorspace.php\n * @param COLORSPACE int <p>\n * One of the COLORSPACE constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "files",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * The Imagick constructor\n * @link http:\/\/www.php.net\/manual\/en\/imagick.construct.php\n * @param files[optional]\n *\/"
            },
            {
                "name": "__tostring",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getpixeliterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns a MagickPixelIterator\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getpixeliterator.php\n * @return ImagickPixelIterator an ImagickPixelIterator on success.\n *\/"
            },
            {
                "name": "getpixelregioniterator",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Get an ImagickPixelIterator for an image section\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getpixelregioniterator.php\n * @param x int <p>\n * The x-coordinate of the region.\n * <\/p>\n * @param y int <p>\n * The y-coordinate of the region.\n * <\/p>\n * @param columns int <p>\n * The width of the region.\n * <\/p>\n * @param rows int <p>\n * The height of the region.\n * <\/p>\n * @return ImagickPixelIterator an ImagickPixelIterator for an image section.\n *\/"
            },
            {
                "name": "readimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Reads image from filename\n * @link http:\/\/www.php.net\/manual\/en\/imagick.readimage.php\n * @param filename string <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "readimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filenames",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param filenames\n *\/"
            },
            {
                "name": "readimageblob",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "image",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Reads image from a binary string\n * @link http:\/\/www.php.net\/manual\/en\/imagick.readimageblob.php\n * @param image string <p>\n * <\/p>\n * @param filename string[optional]\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageformat",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "format",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the format of a particular image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageformat.php\n * @param format string <p>\n * String presentation of the image format. Format support\n * depends on the ImageMagick installation.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "scaleimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "cols",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bestfit",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Scales the size of an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.scaleimage.php\n * @param cols int <p>\n * <\/p>\n * @param rows int <p>\n * <\/p>\n * @param bestfit bool[optional] <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "writeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Writes an image to the specified filename\n * @link http:\/\/www.php.net\/manual\/en\/imagick.writeimage.php\n * @param filename string[optional] <p>\n * Filename where to write the image. The extension of the filename\n * defines the type of the file.\n * Format can be forced regardless of file extension using format: prefix,\n * for example \"jpg:test.png\".\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "writeimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "adjoin",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Writes an image or image sequence\n * @link http:\/\/www.php.net\/manual\/en\/imagick.writeimages.php\n * @param filename string <p>\n * <\/p>\n * @param adjoin bool <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "blurimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adds blur filter to image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.blurimage.php\n * @param radius float <p>\n * Blur radius\n * <\/p>\n * @param sigma float <p>\n * Standard deviation\n * <\/p>\n * @param channel int[optional] <p>\n * The Channeltype\n * constant. When not supplied, all channels are blurred.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "thumbnailimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bestfit",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Changes the size of an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.thumbnailimage.php\n * @param columns int <p>\n * Image width\n * <\/p>\n * @param rows int <p>\n * Image height\n * <\/p>\n * @param bestfit bool[optional] <p>\n * Whether to force maximum values\n * <\/p>\n * @param fill bool[optional]\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "cropthumbnailimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Creates a crop thumbnail\n * @link http:\/\/www.php.net\/manual\/en\/imagick.cropthumbnailimage.php\n * @param width int <p>\n * The width of the thumbnail\n * <\/p>\n * @param height int <p>\n * The Height of the thumbnail\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimagefilename",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the filename of a particular image in a sequence\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagefilename.php\n * @return string a string with the filename of the image.\n *\/"
            },
            {
                "name": "setimagefilename",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the filename of a particular image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagefilename.php\n * @param filename string <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimageformat",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the format of a particular image in a sequence\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageformat.php\n * @return string a string containing the image format on success.\n *\/"
            },
            {
                "name": "getimagemimetype",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "removeimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Removes an image from the image list\n * @link http:\/\/www.php.net\/manual\/en\/imagick.removeimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "destroy",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destroys the Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.destroy.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "clear",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Clears all resources associated to Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.clear.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimagesize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the image length in bytes\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagesize.php\n * @return int an int containing the current image size.\n *\/"
            },
            {
                "name": "getimageblob",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the image sequence as a blob\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageblob.php\n * @return string a string containing the image.\n *\/"
            },
            {
                "name": "getimagesblob",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns all image sequences as a blob\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagesblob.php\n * @return string a string containing the images. On failure, throws\n * ImagickException.\n *\/"
            },
            {
                "name": "setfirstiterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Sets the Imagick iterator to the first image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setfirstiterator.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setlastiterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Sets the Imagick iterator to the last image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setlastiterator.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "resetiterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "previousimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Move to the previous image in the object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.previousimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "nextimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Moves to the next image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.nextimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "haspreviousimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Checks if the object has a previous image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.haspreviousimage.php\n * @return bool true if the object has more images when traversing the list in the\n * reverse direction, returns false if there are none.\n *\/"
            },
            {
                "name": "hasnextimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Checks if the object has more images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.hasnextimage.php\n * @return bool true if the object has more images when traversing the list in the\n * forward direction, returns false if there are none.\n *\/"
            },
            {
                "name": "setimageindex",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "index",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Set the iterator position\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageindex.php\n * @param index int <p>\n * The position to set the iterator to\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimageindex",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the index of the current active image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageindex.php\n * @return int an integer containing the index of the image in the stack.\n *\/"
            },
            {
                "name": "commentimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "comment",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a comment to your image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.commentimage.php\n * @param comment string <p>\n * The comment to add\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "cropimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Extracts a region of the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.cropimage.php\n * @param width int <p>\n * The width of the crop\n * <\/p>\n * @param height int <p>\n * The height of the crop\n * <\/p>\n * @param x int <p>\n * The X coordinate of the cropped region's top left corner\n * <\/p>\n * @param y int <p>\n * The Y coordinate of the cropped region's top left corner\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "labelimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "label",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a label to an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.labelimage.php\n * @param label string <p>\n * The label to add\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimagegeometry",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the width and height as an associative array\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagegeometry.php\n * @return array an array with the width\/height of the image.\n *\/"
            },
            {
                "name": "drawimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "draw",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Renders the ImagickDraw object on the current image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.drawimage.php\n * @param draw ImagickDraw <p>\n * The drawing operations to render on the image.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagecompressionquality",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "quality",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image compression quality\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagecompressionquality.php\n * @param quality int <p>\n * The image compression quality as an integer\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimagecompressionquality",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the current image's compression quality\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagecompressionquality.php\n * @return int integer describing the images compression quality\n *\/"
            },
            {
                "name": "annotateimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "draw_settings",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "angle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "text",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Annotates an image with text\n * @link http:\/\/www.php.net\/manual\/en\/imagick.annotateimage.php\n * @param draw_settings ImagickDraw <p>\n * The ImagickDraw object that contains settings for drawing the text\n * <\/p>\n * @param x float <p>\n * Horizontal offset in pixels to the left of text\n * <\/p>\n * @param y float <p>\n * Vertical offset in pixels to the baseline of text\n * <\/p>\n * @param angle float <p>\n * The angle at which to write the text\n * <\/p>\n * @param text string <p>\n * The string to draw\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "compositeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "composite_object",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "composite",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Composite one image onto another\n * @link http:\/\/www.php.net\/manual\/en\/imagick.compositeimage.php\n * @param composite_object Imagick <p>\n * Imagick object which holds the composite image\n * <\/p>\n * @param composite int\n * @param x int <p>\n * The column offset of the composited image\n * <\/p>\n * @param y int <p>\n * The row offset of the composited image\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "modulateimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "brightness",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "saturation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "hue",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Control the brightness, saturation, and hue\n * @link http:\/\/www.php.net\/manual\/en\/imagick.modulateimage.php\n * @param brightness float <p>\n * <\/p>\n * @param saturation float <p>\n * <\/p>\n * @param hue float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimagecolors",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the number of unique colors in the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagecolors.php\n * @return int Returns true on success.\n *\/"
            },
            {
                "name": "montageimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "draw",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "tile_geometry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "thumbnail_geometry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "mode",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "frame",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Creates a composite image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.montageimage.php\n * @param draw ImagickDraw <p>\n * The font name, size, and color are obtained from this object.\n * <\/p>\n * @param tile_geometry string <p>\n * The number of tiles per row and page (e.g. 6x4+0+0).\n * <\/p>\n * @param thumbnail_geometry string <p>\n * Preferred image size and border size of each thumbnail\n * (e.g. 120x120+4+3>).\n * <\/p>\n * @param mode int <p>\n * Thumbnail framing mode, see Montage Mode constants.\n * <\/p>\n * @param frame string <p>\n * Surround the image with an ornamental border (e.g. 15x15+3+3). The\n * frame color is that of the thumbnail's matte color.\n * <\/p>\n * @return Imagick Returns true on success.\n *\/"
            },
            {
                "name": "identifyimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "appendRawOutput",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Identifies an image and fetches attributes\n * @link http:\/\/www.php.net\/manual\/en\/imagick.identifyimage.php\n * @param appendRawOutput bool[optional] <p>\n * <\/p>\n * @return array Identifies an image and returns the attributes. Attributes include\n * the image width, height, size, and others.\n *\/"
            },
            {
                "name": "thresholdimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Changes the value of individual pixels based on a threshold\n * @link http:\/\/www.php.net\/manual\/en\/imagick.thresholdimage.php\n * @param threshold float <p>\n * <\/p>\n * @param channel int[optional] <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "adaptivethresholdimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Selects a threshold for each pixel based on a range of intensity\n * @link http:\/\/www.php.net\/manual\/en\/imagick.adaptivethresholdimage.php\n * @param width int <p>\n * Width of the local neighborhood.\n * <\/p>\n * @param height int <p>\n * Height of the local neighborhood.\n * <\/p>\n * @param offset int <p>\n * The mean offset\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "blackthresholdimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Forces all pixels below the threshold into black\n * @link http:\/\/www.php.net\/manual\/en\/imagick.blackthresholdimage.php\n * @param threshold mixed <p>\n * The threshold below which everything turns black\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "whitethresholdimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Force all pixels above the threshold into white\n * @link http:\/\/www.php.net\/manual\/en\/imagick.whitethresholdimage.php\n * @param threshold mixed <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "appendimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stack",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Append a set of images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.appendimages.php\n * @param stack bool <p>\n * Whether to stack the images vertically.\n * By default (or if false is specified) images are stacked left-to-right.\n * If stack is true, images are stacked top-to-bottom.\n * <\/p>\n * @return Imagick Imagick instance on success.\n *\/"
            },
            {
                "name": "charcoalimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Simulates a charcoal drawing\n * @link http:\/\/www.php.net\/manual\/en\/imagick.charcoalimage.php\n * @param radius float <p>\n * The radius of the Gaussian, in pixels, not counting the center pixel\n * <\/p>\n * @param sigma float <p>\n * The standard deviation of the Gaussian, in pixels\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "normalizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Enhances the contrast of a color image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.normalizeimage.php\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "oilpaintimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Simulates an oil painting\n * @link http:\/\/www.php.net\/manual\/en\/imagick.oilpaintimage.php\n * @param radius float <p>\n * The radius of the circular neighborhood.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "posterizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "levels",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "dither",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Reduces the image to a limited number of color level\n * @link http:\/\/www.php.net\/manual\/en\/imagick.posterizeimage.php\n * @param levels int <p>\n * <\/p>\n * @param dither bool <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "radialblurimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "angle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Radial blurs an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.radialblurimage.php\n * @param angle float <p>\n * <\/p>\n * @param channel int[optional] <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "raiseimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "raise",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Creates a simulated 3d button-like effect\n * @link http:\/\/www.php.net\/manual\/en\/imagick.raiseimage.php\n * @param width int <p>\n * <\/p>\n * @param height int <p>\n * <\/p>\n * @param x int <p>\n * <\/p>\n * @param y int <p>\n * <\/p>\n * @param raise bool <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "resampleimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "filter",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "blur",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Resample image to desired resolution\n * @link http:\/\/www.php.net\/manual\/en\/imagick.resampleimage.php\n * @param x_resolution float <p>\n * <\/p>\n * @param y_resolution float <p>\n * <\/p>\n * @param filter int <p>\n * <\/p>\n * @param blur float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "resizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "filter",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "blur",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bestfit",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Scales an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.resizeimage.php\n * @param columns int <p>\n * Width of the image\n * <\/p>\n * @param rows int <p>\n * Height of the image\n * <\/p>\n * @param filter int <p>\n * Refer to the list of filter constants.\n * <\/p>\n * @param blur float <p>\n * The blur factor where &gt; 1 is blurry, &lt; 1 is sharp.\n * <\/p>\n * @param bestfit bool[optional] <p>\n * Optional fit parameter.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "rollimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Offsets an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.rollimage.php\n * @param x int <p>\n * The X offset.\n * <\/p>\n * @param y int <p>\n * The Y offset.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "rotateimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "background",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "degrees",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Rotates an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.rotateimage.php\n * @param background mixed <p>\n * The background color\n * <\/p>\n * @param degrees float <p>\n * The number of degrees to rotate the image\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "sampleimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Scales an image with pixel sampling\n * @link http:\/\/www.php.net\/manual\/en\/imagick.sampleimage.php\n * @param columns int <p>\n * <\/p>\n * @param rows int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "solarizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Applies a solarizing effect to the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.solarizeimage.php\n * @param threshold int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "shadowimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Simulates an image shadow\n * @link http:\/\/www.php.net\/manual\/en\/imagick.shadowimage.php\n * @param opacity float <p>\n * <\/p>\n * @param sigma float <p>\n * <\/p>\n * @param x int <p>\n * <\/p>\n * @param y int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageattribute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "key",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param key\n * @param value\n *\/"
            },
            {
                "name": "setimagebackgroundcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "background",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image background color\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagebackgroundcolor.php\n * @param background mixed <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagecompose",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "compose",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image composite operator\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagecompose.php\n * @param compose int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagecompression",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "compression",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image compression\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagecompression.php\n * @param compression int <p>\n * One of the COMPRESSION constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagedelay",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "delay",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image delay\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagedelay.php\n * @param delay int <p>\n * The amount of time expressed in 'ticks' that the image should be\n * displayed for. For animated GIFs there are 100 ticks per second, so a\n * value of 20 would be 20\/100 of a second aka 1\/5th of a second.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagedepth",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "depth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image depth\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagedepth.php\n * @param depth int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagegamma",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gamma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image gamma\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagegamma.php\n * @param gamma float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageiterations",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "iterations",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image iterations\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageiterations.php\n * @param iterations int <p>\n * The number of iterations the image should loop over. Set to '0' to loop\n * continuously.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagemattecolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "matte",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image matte color\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagemattecolor.php\n * @param matte mixed <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagepage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the page geometry of the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagepage.php\n * @param width int <p>\n * <\/p>\n * @param height int <p>\n * <\/p>\n * @param x int <p>\n * <\/p>\n * @param y int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageprogressmonitor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param filename\n *\/"
            },
            {
                "name": "setimageresolution",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image resolution\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageresolution.php\n * @param x_resolution float <p>\n * <\/p>\n * @param y_resolution float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagescene",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "scene",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image scene\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagescene.php\n * @param scene int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagetickspersecond",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "ticks_per_second",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image ticks-per-second\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagetickspersecond.php\n * @param ticks_per_second int <p>\n * The duration for which an image should be displayed expressed in ticks\n * per second.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagetype",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "image_type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image type\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagetype.php\n * @param image_type int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageunits",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "units",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image units of resolution\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageunits.php\n * @param units int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "sharpenimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sharpens an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.sharpenimage.php\n * @param radius float <p>\n * <\/p>\n * @param sigma float <p>\n * <\/p>\n * @param channel int[optional] <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "shaveimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Shaves pixels from the image edges\n * @link http:\/\/www.php.net\/manual\/en\/imagick.shaveimage.php\n * @param columns int <p>\n * <\/p>\n * @param rows int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "shearimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "background",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x_shear",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_shear",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Creating a parallelogram\n * @link http:\/\/www.php.net\/manual\/en\/imagick.shearimage.php\n * @param background mixed <p>\n * The background color\n * <\/p>\n * @param x_shear float <p>\n * The number of degrees to shear on the x axis\n * <\/p>\n * @param y_shear float <p>\n * The number of degrees to shear on the y axis\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "spliceimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Splices a solid color into the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.spliceimage.php\n * @param width int <p>\n * <\/p>\n * @param height int <p>\n * <\/p>\n * @param x int <p>\n * <\/p>\n * @param y int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "pingimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Fetch basic attributes about the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.pingimage.php\n * @param filename string <p>\n * The filename to read the information from.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "readimagefile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filehandle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fileName",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Reads image from open filehandle\n * @link http:\/\/www.php.net\/manual\/en\/imagick.readimagefile.php\n * @param filehandle resource <p>\n * <\/p>\n * @param fileName string[optional] <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "displayimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "servername",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Displays an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.displayimage.php\n * @param servername string <p>\n * The X server name\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "displayimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "servername",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Displays an image or image sequence\n * @link http:\/\/www.php.net\/manual\/en\/imagick.displayimages.php\n * @param servername string <p>\n * The X server name\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "spreadimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Randomly displaces each pixel in a block\n * @link http:\/\/www.php.net\/manual\/en\/imagick.spreadimage.php\n * @param radius float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "swirlimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "degrees",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Swirls the pixels about the center of the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.swirlimage.php\n * @param degrees float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "stripimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Strips an image of all profiles and comments\n * @link http:\/\/www.php.net\/manual\/en\/imagick.stripimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "queryformats",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pattern",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns formats supported by Imagick\n * @link http:\/\/www.php.net\/manual\/en\/imagick.queryformats.php\n * @param pattern string[optional] <p>\n * <\/p>\n * @return array an array containing the formats supported by Imagick.\n *\/"
            },
            {
                "name": "queryfonts",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pattern",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the configured fonts\n * @link http:\/\/www.php.net\/manual\/en\/imagick.queryfonts.php\n * @param pattern string[optional] <p>\n * The query pattern\n * <\/p>\n * @return array an array containing the configured fonts.\n *\/"
            },
            {
                "name": "queryfontmetrics",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "properties",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "text",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "multiline",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns an array representing the font metrics\n * @link http:\/\/www.php.net\/manual\/en\/imagick.queryfontmetrics.php\n * @param properties ImagickDraw <p>\n * ImagickDraw object containing font properties\n * <\/p>\n * @param text string <p>\n * The text\n * <\/p>\n * @param multiline bool[optional] <p>\n * Multiline parameter. If left empty it is autodetected\n * <\/p>\n * @return array a multi-dimensional array representing the font metrics.\n *\/"
            },
            {
                "name": "steganoimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "watermark_wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "offset",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Hides a digital watermark within the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.steganoimage.php\n * @param watermark_wand Imagick <p>\n * <\/p>\n * @param offset int <p>\n * <\/p>\n * @return Imagick Returns true on success.\n *\/"
            },
            {
                "name": "addnoiseimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "noise_type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adds random noise to the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.addnoiseimage.php\n * @param noise_type int <p>\n * The type of the noise. Refer to this list of\n * noise constants.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "motionblurimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "angle",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Simulates motion blur\n * @link http:\/\/www.php.net\/manual\/en\/imagick.motionblurimage.php\n * @param radius float <p>\n * The radius of the Gaussian, in pixels, not counting the center pixel.\n * <\/p>\n * @param sigma float <p>\n * The standard deviation of the Gaussian, in pixels.\n * <\/p>\n * @param angle float <p>\n * Apply the effect along this angle.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * The channel argument affects only if Imagick is compiled against ImageMagick version\n * 6.4.4 or greater.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "mosaicimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Forms a mosaic from images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.mosaicimages.php\n * @return Imagick Returns true on success.\n *\/"
            },
            {
                "name": "morphimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "number_frames",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Method morphs a set of images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.morphimages.php\n * @param number_frames int <p>\n * The number of in-between images to generate.\n * <\/p>\n * @return Imagick This method returns a new Imagick object on success.\n * &imagick.imagickexception.throw;\n *\/"
            },
            {
                "name": "minifyimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Scales an image proportionally to half its size\n * @link http:\/\/www.php.net\/manual\/en\/imagick.minifyimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "affinetransformimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "matrix",
                        "type": "ImagickDraw",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Transforms an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.affinetransformimage.php\n * @param matrix ImagickDraw <p>\n * The affine matrix\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "averageimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Average a set of images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.averageimages.php\n * @return Imagick a new Imagick object on success.\n *\/"
            },
            {
                "name": "borderimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "bordercolor",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Surrounds the image with a border\n * @link http:\/\/www.php.net\/manual\/en\/imagick.borderimage.php\n * @param bordercolor mixed <p>\n * ImagickPixel object or a string containing the border color\n * <\/p>\n * @param width int <p>\n * Border width\n * <\/p>\n * @param height int <p>\n * Border height\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "chopimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes a region of an image and trims\n * @link http:\/\/www.php.net\/manual\/en\/imagick.chopimage.php\n * @param width int <p>\n * Width of the chopped area\n * <\/p>\n * @param height int <p>\n * Height of the chopped area\n * <\/p>\n * @param x int <p>\n * X origo of the chopped area\n * <\/p>\n * @param y int <p>\n * Y origo of the chopped area\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "clipimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Clips along the first path from the 8BIM profile\n * @link http:\/\/www.php.net\/manual\/en\/imagick.clipimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "clippathimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pathname",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "inside",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Clips along the named paths from the 8BIM profile\n * @link http:\/\/www.php.net\/manual\/en\/imagick.clippathimage.php\n * @param pathname string <p>\n * The name of the path\n * <\/p>\n * @param inside bool <p>\n * If true later operations take effect inside clipping path.\n * Otherwise later operations take effect outside clipping path.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "clipimagepath",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pathname",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "inside",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param pathname\n * @param inside\n *\/"
            },
            {
                "name": "coalesceimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Composites a set of images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.coalesceimages.php\n * @return Imagick a new Imagick object on success.\n *\/"
            },
            {
                "name": "colorfloodfillimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bordercolor",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Changes the color value of any pixel that matches target\n * @link http:\/\/www.php.net\/manual\/en\/imagick.colorfloodfillimage.php\n * @param fill mixed <p>\n * ImagickPixel object containing the fill color\n * <\/p>\n * @param fuzz float <p>\n * The amount of fuzz. For example, set fuzz to 10 and the color red at\n * intensities of 100 and 102 respectively are now interpreted as the\n * same color for the purposes of the floodfill.\n * <\/p>\n * @param bordercolor mixed <p>\n * ImagickPixel object containing the border color\n * <\/p>\n * @param x int <p>\n * X start position of the floodfill\n * <\/p>\n * @param y int <p>\n * Y start position of the floodfill\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "colorizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "colorize",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Blends the fill color with the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.colorizeimage.php\n * @param colorize mixed <p>\n * ImagickPixel object or a string containing the colorize color\n * <\/p>\n * @param opacity mixed <p>\n * ImagickPixel object or an float containing the opacity value.\n * 1.0 is fully opaque and 0.0 is fully transparent.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "compareimagechannels",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "image",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channelType",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "metricType",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns the difference in one or more images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.compareimagechannels.php\n * @param image Imagick <p>\n * Imagick object containing the image to compare.\n * <\/p>\n * @param channelType int <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @param metricType int <p>\n * One of the metric type constants.\n * <\/p>\n * @return array Array consisting of new_wand and\n * distortion.\n *\/"
            },
            {
                "name": "compareimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "compare",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "metric",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Compares an image to a reconstructed image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.compareimages.php\n * @param compare Imagick <p>\n * An image to compare to.\n * <\/p>\n * @param metric int <p>\n * Provide a valid metric type constant. Refer to this\n * list of metric constants.\n * <\/p>\n * @return array Returns true on success.\n *\/"
            },
            {
                "name": "contrastimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sharpen",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Change the contrast of the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.contrastimage.php\n * @param sharpen bool <p>\n * The sharpen value\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "combineimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channelType",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Combines one or more images into a single image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.combineimages.php\n * @param channelType int <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return Imagick Returns true on success.\n *\/"
            },
            {
                "name": "convolveimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "kernel",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Applies a custom convolution kernel to the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.convolveimage.php\n * @param kernel array <p>\n * The convolution kernel\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "cyclecolormapimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "displace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Displaces an image's colormap\n * @link http:\/\/www.php.net\/manual\/en\/imagick.cyclecolormapimage.php\n * @param displace int <p>\n * The amount to displace the colormap.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "deconstructimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns certain pixel differences between images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.deconstructimages.php\n * @return Imagick a new Imagick object on success.\n *\/"
            },
            {
                "name": "despeckleimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Reduces the speckle noise in an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.despeckleimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "edgeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Enhance edges within the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.edgeimage.php\n * @param radius float <p>\n * The radius of the operation.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "embossimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns a grayscale image with a three-dimensional effect\n * @link http:\/\/www.php.net\/manual\/en\/imagick.embossimage.php\n * @param radius float <p>\n * The radius of the effect\n * <\/p>\n * @param sigma float <p>\n * The sigma of the effect\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "enhanceimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Improves the quality of a noisy image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.enhanceimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "equalizeimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Equalizes the image histogram\n * @link http:\/\/www.php.net\/manual\/en\/imagick.equalizeimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "evaluateimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "op",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "constant",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Applies an expression to an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.evaluateimage.php\n * @param op int <p>\n * The evaluation operator\n * <\/p>\n * @param constant float <p>\n * The value of the operator\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "flattenimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Merges a sequence of images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.flattenimages.php\n * @return Imagick Returns true on success.\n *\/"
            },
            {
                "name": "flipimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Creates a vertical mirror image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.flipimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "flopimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Creates a horizontal mirror image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.flopimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "frameimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "matte_color",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "inner_bevel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "outer_bevel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a simulated three-dimensional border\n * @link http:\/\/www.php.net\/manual\/en\/imagick.frameimage.php\n * @param matte_color mixed <p>\n * ImagickPixel object or a string representing the matte color\n * <\/p>\n * @param width int <p>\n * The width of the border\n * <\/p>\n * @param height int <p>\n * The height of the border\n * <\/p>\n * @param inner_bevel int <p>\n * The inner bevel width\n * <\/p>\n * @param outer_bevel int <p>\n * The outer bevel width\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "fximage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "expression",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Evaluate expression for each pixel in the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.fximage.php\n * @param expression string <p>\n * The expression.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return Imagick Returns true on success.\n *\/"
            },
            {
                "name": "gammaimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gamma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Gamma-corrects an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.gammaimage.php\n * @param gamma float <p>\n * The amount of gamma-correction.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "gaussianblurimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Blurs an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.gaussianblurimage.php\n * @param radius float <p>\n * The radius of the Gaussian, in pixels, not counting the center pixel.\n * <\/p>\n * @param sigma float <p>\n * The standard deviation of the Gaussian, in pixels.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimageattribute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "key",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param key\n *\/"
            },
            {
                "name": "getimagebackgroundcolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the image background color\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagebackgroundcolor.php\n * @return ImagickPixel an ImagickPixel set to the background color of the image.\n *\/"
            },
            {
                "name": "getimageblueprimary",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the chromaticy blue primary point\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageblueprimary.php\n * @return array Array consisting of \"x\" and \"y\" coordinates of point.\n *\/"
            },
            {
                "name": "getimagebordercolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the image border color\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagebordercolor.php\n * @return ImagickPixel Returns true on success.\n *\/"
            },
            {
                "name": "getimagechanneldepth",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Gets the depth for a particular image channel\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagechanneldepth.php\n * @param channel int <p>\n * Provide any channel constant that is valid for your channel mode. To apply to more than one channel, combine channel constants using bitwise operators. Defaults to Imagick::CHANNEL_DEFAULT. Refer to this list of channel constants\n * <\/p>\n * @return int Returns true on success.\n *\/"
            },
            {
                "name": "getimagechanneldistortion",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "reference",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "metric",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Compares image channels of an image to a reconstructed image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagechanneldistortion.php\n * @param reference Imagick <p>\n * Imagick object to compare to.\n * <\/p>\n * @param channel int <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @param metric int <p>\n * One of the metric type constants.\n * <\/p>\n * @return float Returns true on success.\n *\/"
            },
            {
                "name": "getimagechannelextrema",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Gets the extrema for one or more image channels\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagechannelextrema.php\n * @param channel int <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return array Returns true on success.\n *\/"
            },
            {
                "name": "getimagechannelmean",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Gets the mean and standard deviation\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagechannelmean.php\n * @param channel int <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return array Returns true on success.\n *\/"
            },
            {
                "name": "getimagechannelstatistics",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns statistics for each channel in the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagechannelstatistics.php\n * @return array Returns true on success.\n *\/"
            },
            {
                "name": "getimagecolormapcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "index",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns the color of the specified colormap index\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagecolormapcolor.php\n * @param index int <p>\n * The offset into the image colormap.\n * <\/p>\n * @return ImagickPixel Returns true on success.\n *\/"
            },
            {
                "name": "getimagecolorspace",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image colorspace\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagecolorspace.php\n * @return int Returns true on success.\n *\/"
            },
            {
                "name": "getimagecompose",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the composite operator associated with the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagecompose.php\n * @return int Returns true on success.\n *\/"
            },
            {
                "name": "getimagedelay",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image delay\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagedelay.php\n * @return int the image delay.\n *\/"
            },
            {
                "name": "getimagedepth",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image depth\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagedepth.php\n * @return int The image depth.\n *\/"
            },
            {
                "name": "getimagedistortion",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "reference",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "metric",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Compares an image to a reconstructed image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagedistortion.php\n * @param reference MagickWand <p>\n * Imagick object to compare to.\n * <\/p>\n * @param metric int <p>\n * One of the metric type constants.\n * <\/p>\n * @return float the distortion metric used on the image (or the best guess\n * thereof).\n *\/"
            },
            {
                "name": "getimageextrema",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the extrema for the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageextrema.php\n * @return array an associative array with the keys \"min\" and \"max\".\n *\/"
            },
            {
                "name": "getimagedispose",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image disposal method\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagedispose.php\n * @return int the dispose method on success.\n *\/"
            },
            {
                "name": "getimagegamma",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image gamma\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagegamma.php\n * @return float the image gamma on success.\n *\/"
            },
            {
                "name": "getimagegreenprimary",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the chromaticy green primary point\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagegreenprimary.php\n * @return array an array with the keys \"x\" and \"y\" on success, throws an\n * ImagickException on failure.\n *\/"
            },
            {
                "name": "getimageheight",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the image height\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageheight.php\n * @return int the image height in pixels.\n *\/"
            },
            {
                "name": "getimagehistogram",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image histogram\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagehistogram.php\n * @return array the image histogram as an array of ImagickPixel objects.\n *\/"
            },
            {
                "name": "getimageinterlacescheme",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image interlace scheme\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageinterlacescheme.php\n * @return int the interlace scheme as an integer on success.\n * &imagick.imagickexception.throw;\n *\/"
            },
            {
                "name": "getimageiterations",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image iterations\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageiterations.php\n * @return int the image iterations as an integer.\n *\/"
            },
            {
                "name": "getimagemattecolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the image matte color\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagemattecolor.php\n * @return ImagickPixel ImagickPixel object on success.\n *\/"
            },
            {
                "name": "getimagepage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the page geometry\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagepage.php\n * @return array the page geometry associated with the image in an array with the\n * keys \"width\", \"height\", \"x\", and \"y\".\n *\/"
            },
            {
                "name": "getimagepixelcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns the color of the specified pixel\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagepixelcolor.php\n * @param x int <p>\n * The x-coordinate of the pixel\n * <\/p>\n * @param y int <p>\n * The y-coordinate of the pixel\n * <\/p>\n * @return ImagickPixel an ImagickPixel instance for the color at the coordinates given.\n *\/"
            },
            {
                "name": "getimageprofile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns the named image profile\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageprofile.php\n * @param name string <p>\n * The name of the profile to return.\n * <\/p>\n * @return string a string containing the image profile.\n *\/"
            },
            {
                "name": "getimageredprimary",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the chromaticity red primary point\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageredprimary.php\n * @return array the chromaticity red primary point as an array with the keys \"x\"\n * and \"y\".\n * &imagick.imagickexception.throw;\n *\/"
            },
            {
                "name": "getimagerenderingintent",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image rendering intent\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagerenderingintent.php\n * @return int the image rendering intent.\n *\/"
            },
            {
                "name": "getimageresolution",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image X and Y resolution\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageresolution.php\n * @return array the resolution as an array.\n *\/"
            },
            {
                "name": "getimagescene",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image scene\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagescene.php\n * @return int the image scene.\n *\/"
            },
            {
                "name": "getimagesignature",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Generates an SHA-256 message digest\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagesignature.php\n * @return string a string containing the SHA-256 hash of the file.\n *\/"
            },
            {
                "name": "getimagetickspersecond",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image ticks-per-second\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagetickspersecond.php\n * @return int the image ticks-per-second.\n *\/"
            },
            {
                "name": "getimagetype",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the potential image type\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagetype.php\n * @return int the potential image type.\n * imagick::IMGTYPE_UNDEFINED\n * imagick::IMGTYPE_BILEVEL\n * imagick::IMGTYPE_GRAYSCALE\n * imagick::IMGTYPE_GRAYSCALEMATTE\n * imagick::IMGTYPE_PALETTE\n * imagick::IMGTYPE_PALETTEMATTE\n * imagick::IMGTYPE_TRUECOLOR\n * imagick::IMGTYPE_TRUECOLORMATTE\n * imagick::IMGTYPE_COLORSEPARATION\n * imagick::IMGTYPE_COLORSEPARATIONMATTE\n * imagick::IMGTYPE_OPTIMIZE\n *\/"
            },
            {
                "name": "getimageunits",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image units of resolution\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageunits.php\n * @return int the image units of resolution.\n *\/"
            },
            {
                "name": "getimagevirtualpixelmethod",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the virtual pixel method\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagevirtualpixelmethod.php\n * @return int the virtual pixel method on success.\n *\/"
            },
            {
                "name": "getimagewhitepoint",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the chromaticity white point\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagewhitepoint.php\n * @return array the chromaticity white point as an associative array with the keys\n * \"x\" and \"y\".\n *\/"
            },
            {
                "name": "getimagewidth",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the image width\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagewidth.php\n * @return int the image width.\n *\/"
            },
            {
                "name": "getnumberimages",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the number of images in the object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getnumberimages.php\n * @return int the number of images associated with Imagick object.\n *\/"
            },
            {
                "name": "getimagetotalinkdensity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the image total ink density\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimagetotalinkdensity.php\n * @return float the image total ink density of the image.\n * &imagick.imagickexception.throw;\n *\/"
            },
            {
                "name": "getimageregion",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Extracts a region of the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimageregion.php\n * @param width int <p>\n * The width of the extracted region.\n * <\/p>\n * @param height int <p>\n * The height of the extracted region.\n * <\/p>\n * @param x int <p>\n * X-coordinate of the top-left corner of the extracted region.\n * <\/p>\n * @param y int <p>\n * Y-coordinate of the top-left corner of the extracted region.\n * <\/p>\n * @return Imagick Extracts a region of the image and returns it as a new wand.\n *\/"
            },
            {
                "name": "implodeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Creates a new image as a copy\n * @link http:\/\/www.php.net\/manual\/en\/imagick.implodeimage.php\n * @param radius float <p>\n * The radius of the implode\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "levelimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "blackPoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "gamma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "whitePoint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adjusts the levels of an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.levelimage.php\n * @param blackPoint float <p>\n * The image black point\n * <\/p>\n * @param gamma float <p>\n * The gamma value\n * <\/p>\n * @param whitePoint float <p>\n * The image white point\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "magnifyimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Scales an image proportionally 2x\n * @link http:\/\/www.php.net\/manual\/en\/imagick.magnifyimage.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "mapimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "map",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "dither",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Replaces the colors of an image with the closest color from a reference image.\n * @link http:\/\/www.php.net\/manual\/en\/imagick.mapimage.php\n * @param map Imagick <p>\n * <\/p>\n * @param dither bool <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "mattefloodfillimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "alpha",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "bordercolor",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Changes the transparency value of a color\n * @link http:\/\/www.php.net\/manual\/en\/imagick.mattefloodfillimage.php\n * @param alpha float <p>\n * The level of transparency: 1.0 is fully opaque and 0.0 is fully\n * transparent.\n * <\/p>\n * @param fuzz float <p>\n * The fuzz member of image defines how much tolerance is acceptable to\n * consider two colors as the same.\n * <\/p>\n * @param bordercolor mixed <p>\n * An ImagickPixel object or string representing the border color.\n * <\/p>\n * @param x int <p>\n * The starting x coordinate of the operation.\n * <\/p>\n * @param y int <p>\n * The starting y coordinate of the operation.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "medianfilterimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Applies a digital filter\n * @link http:\/\/www.php.net\/manual\/en\/imagick.medianfilterimage.php\n * @param radius float <p>\n * The radius of the pixel neighborhood.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "negateimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gray",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Negates the colors in the reference image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.negateimage.php\n * @param gray bool <p>\n * Whether to only negate grayscale pixels within the image.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "paintopaqueimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "target",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fill",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Change any pixel that matches color\n * @link http:\/\/www.php.net\/manual\/en\/imagick.paintopaqueimage.php\n * @param target mixed <p>\n * Change this target color to the fill color within the image. An\n * ImagickPixel object or a string representing the target color.\n * <\/p>\n * @param fill mixed <p>\n * An ImagickPixel object or a string representing the fill color.\n * <\/p>\n * @param fuzz float <p>\n * The fuzz member of image defines how much tolerance is acceptable to\n * consider two colors as the same.\n * <\/p>\n * @param channel int[optional] <p>\n * Provide any channel constant that is valid for your channel mode. To\n * apply to more than one channel, combine channeltype constants using\n * bitwise operators. Refer to this\n * list of channel constants.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "painttransparentimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "target",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "alpha",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Changes any pixel that matches color with the color defined by fill\n * @link http:\/\/www.php.net\/manual\/en\/imagick.painttransparentimage.php\n * @param target mixed <p>\n * Change this target color to specified opacity value within the image.\n * <\/p>\n * @param alpha float <p>\n * The level of transparency: 1.0 is fully opaque and 0.0 is fully\n * transparent.\n * <\/p>\n * @param fuzz float <p>\n * The fuzz member of image defines how much tolerance is acceptable to\n * consider two colors as the same.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "previewimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "preview",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Quickly pin-point appropriate parameters for image processing\n * @link http:\/\/www.php.net\/manual\/en\/imagick.previewimages.php\n * @param preview int <p>\n * Preview type. See Preview type constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "profileimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "profile",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds or removes a profile from an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.profileimage.php\n * @param name string <p>\n * <\/p>\n * @param profile string <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "quantizeimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "numberColors",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "colorspace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "treedepth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "dither",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "measureError",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Analyzes the colors within a reference image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.quantizeimage.php\n * @param numberColors int <p>\n * <\/p>\n * @param colorspace int <p>\n * <\/p>\n * @param treedepth int <p>\n * <\/p>\n * @param dither bool <p>\n * <\/p>\n * @param measureError bool <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "quantizeimages",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "numberColors",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "colorspace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "treedepth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "dither",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "measureError",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Analyzes the colors within a sequence of images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.quantizeimages.php\n * @param numberColors int <p>\n * <\/p>\n * @param colorspace int <p>\n * <\/p>\n * @param treedepth int <p>\n * <\/p>\n * @param dither bool <p>\n * <\/p>\n * @param measureError bool <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "reducenoiseimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Smooths the contours of an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.reducenoiseimage.php\n * @param radius float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "removeimageprofile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes the named image profile and returns it\n * @link http:\/\/www.php.net\/manual\/en\/imagick.removeimageprofile.php\n * @param name string <p>\n * <\/p>\n * @return string a string containing the profile of the image.\n *\/"
            },
            {
                "name": "separateimagechannel",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Separates a channel from the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.separateimagechannel.php\n * @param channel int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "sepiatoneimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sepia tones an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.sepiatoneimage.php\n * @param threshold float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagebias",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "bias",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image bias for any method that convolves an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagebias.php\n * @param bias float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageblueprimary",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image chromaticity blue primary point\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageblueprimary.php\n * @param x float <p>\n * <\/p>\n * @param y float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagebordercolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "border",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image border color\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagebordercolor.php\n * @param border mixed <p>\n * The border color\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagechanneldepth",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "depth",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the depth of a particular image channel\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagechanneldepth.php\n * @param channel int <p>\n * <\/p>\n * @param depth int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagecolormapcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "index",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "color",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the color of the specified colormap index\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagecolormapcolor.php\n * @param index int <p>\n * <\/p>\n * @param color ImagickPixel <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagecolorspace",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "colorspace",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image colorspace\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagecolorspace.php\n * @param colorspace int <p>\n * One of the COLORSPACE constants\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagedispose",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "dispose",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image disposal method\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagedispose.php\n * @param dispose int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageextent",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image size\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageextent.php\n * @param columns int <p>\n * <\/p>\n * @param rows int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagegreenprimary",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image chromaticity green primary point\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagegreenprimary.php\n * @param x float <p>\n * <\/p>\n * @param y float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageinterlacescheme",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "interlace_scheme",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image compression\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageinterlacescheme.php\n * @param interlace_scheme int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageprofile",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "profile",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a named profile to the Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageprofile.php\n * @param name string <p>\n * <\/p>\n * @param profile string <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimageredprimary",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image chromaticity red primary point\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimageredprimary.php\n * @param x float <p>\n * <\/p>\n * @param y float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagerenderingintent",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "rendering_intent",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image rendering intent\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagerenderingintent.php\n * @param rendering_intent int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagevirtualpixelmethod",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image virtual pixel method\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagevirtualpixelmethod.php\n * @param method int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimagewhitepoint",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image chromaticity white point\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimagewhitepoint.php\n * @param x float <p>\n * <\/p>\n * @param y float <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "sigmoidalcontrastimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sharpen",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "alpha",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "beta",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adjusts the contrast of an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.sigmoidalcontrastimage.php\n * @param sharpen bool <p>\n * <\/p>\n * @param alpha float <p>\n * <\/p>\n * @param beta float <p>\n * <\/p>\n * @param channel int[optional] <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "stereoimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "offset_wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Composites two images\n * @link http:\/\/www.php.net\/manual\/en\/imagick.stereoimage.php\n * @param offset_wand Imagick <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "textureimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "texture_wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Repeatedly tiles the texture image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.textureimage.php\n * @param texture_wand Imagick <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "tintimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "tint",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Applies a color vector to each pixel in the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.tintimage.php\n * @param tint mixed <p>\n * <\/p>\n * @param opacity mixed <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "unsharpmaskimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "radius",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sigma",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "amount",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "threshold",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "channel",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sharpens an image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.unsharpmaskimage.php\n * @param radius float <p>\n * <\/p>\n * @param sigma float <p>\n * <\/p>\n * @param amount float <p>\n * <\/p>\n * @param threshold float <p>\n * <\/p>\n * @param channel int[optional] <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getimage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns a new Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getimage.php\n * @return Imagick a new Imagick object with the current image sequence.\n *\/"
            },
            {
                "name": "addimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "source",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds new image to Imagick object image list\n * @link http:\/\/www.php.net\/manual\/en\/imagick.addimage.php\n * @param source Imagick <p>\n * The source Imagick object\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "replace",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Replaces image in the object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setimage.php\n * @param replace Imagick <p>\n * The replace Imagick object\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "newimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "cols",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "background",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "format",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Creates a new image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.newimage.php\n * @param cols int <p>\n * Columns in the new image\n * <\/p>\n * @param rows int <p>\n * Rows in the new image\n * <\/p>\n * @param background mixed <p>\n * The background color used for this image\n * <\/p>\n * @param format string[optional] <p>\n * Image format. This parameter was added in Imagick version 2.0.1.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "newpseudoimage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "pseudoString",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Creates a new image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.newpseudoimage.php\n * @param columns int <p>\n * columns in the new image\n * <\/p>\n * @param rows int <p>\n * rows in the new image\n * <\/p>\n * @param pseudoString string <p>\n * string containing pseudo image definition.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getcompression",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the object compression type\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getcompression.php\n * @return int the compression constant\n *\/"
            },
            {
                "name": "getcompressionquality",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the object compression quality\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getcompressionquality.php\n * @return int integer describing the compression quality\n *\/"
            },
            {
                "name": "getcopyright",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the ImageMagick API copyright as a string\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getcopyright.php\n * @return string a string containing the copyright notice of Imagemagick and\n * Magickwand C API.\n *\/"
            },
            {
                "name": "getfilename",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * The filename associated with an image sequence\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getfilename.php\n * @return string a string on success.\n *\/"
            },
            {
                "name": "getformat",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the format of the Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getformat.php\n * @return string the format of the image.\n *\/"
            },
            {
                "name": "gethomeurl",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the ImageMagick home URL\n * @link http:\/\/www.php.net\/manual\/en\/imagick.gethomeurl.php\n * @return string a link to the imagemagick homepage.\n *\/"
            },
            {
                "name": "getinterlacescheme",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the object interlace scheme\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getinterlacescheme.php\n * @return int Gets the wand interlace\n * scheme.\n *\/"
            },
            {
                "name": "getoption",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "key",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns a value associated with the specified key\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getoption.php\n * @param key string <p>\n * The name of the option\n * <\/p>\n * @return string a value associated with a wand and the specified key.\n *\/"
            },
            {
                "name": "getpackagename",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the ImageMagick package name\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getpackagename.php\n * @return string the ImageMagick package name as a string.\n *\/"
            },
            {
                "name": "getpage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the page geometry\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getpage.php\n * @return array the page geometry associated with the Imagick object in\n * an associative array with the keys \"width\", \"height\", \"x\", and \"y\",\n * throwing ImagickException on error.\n *\/"
            },
            {
                "name": "getquantumdepth",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the quantum depth\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getquantumdepth.php\n * @return array the Imagick quantum depth as a string.\n *\/"
            },
            {
                "name": "getquantumrange",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the Imagick quantum range\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getquantumrange.php\n * @return array the Imagick quantum range as a string.\n *\/"
            },
            {
                "name": "getreleasedate",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the ImageMagick release date\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getreleasedate.php\n * @return string the ImageMagick release date as a string.\n *\/"
            },
            {
                "name": "getresource",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns the specified resource's memory usage\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getresource.php\n * @param type int <p>\n * Refer to the list of resourcetype constants.\n * <\/p>\n * @return int the specified resource's memory usage in megabytes.\n *\/"
            },
            {
                "name": "getresourcelimit",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns the specified resource limit\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getresourcelimit.php\n * @param type int <p>\n * Refer to the list of resourcetype constants.\n * <\/p>\n * @return int the specified resource limit in megabytes.\n *\/"
            },
            {
                "name": "getsamplingfactors",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Gets the horizontal and vertical sampling factor\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getsamplingfactors.php\n * @return array an associative array with the horizontal and vertical sampling\n * factors of the image.\n *\/"
            },
            {
                "name": "getsize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the size associated with the Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getsize.php\n * @return array the size associated with the Imagick object as an array with the\n * keys \"columns\" and \"rows\".\n *\/"
            },
            {
                "name": "getversion",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the ImageMagick API version\n * @link http:\/\/www.php.net\/manual\/en\/imagick.getversion.php\n * @return array the ImageMagick API version as a string and as a number.\n *\/"
            },
            {
                "name": "setbackgroundcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "background",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the object's default background color\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setbackgroundcolor.php\n * @param background mixed <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setcompression",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "compression",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the object's default compression type\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setcompression.php\n * @param compression int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setcompressionquality",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "quality",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the object's default compression quality\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setcompressionquality.php\n * @param quality int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setfilename",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "filename",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the filename before you read or write the image\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setfilename.php\n * @param filename string <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setformat",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "format",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the format of the Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setformat.php\n * @param format string <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setinterlacescheme",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "interlace_scheme",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image compression\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setinterlacescheme.php\n * @param interlace_scheme int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setoption",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "key",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Set an option\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setoption.php\n * @param key string <p>\n * <\/p>\n * @param value string <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setpage",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the page geometry of the Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setpage.php\n * @param width int <p>\n * <\/p>\n * @param height int <p>\n * <\/p>\n * @param x int <p>\n * <\/p>\n * @param y int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setresourcelimit",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "limit",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the limit for a particular resource in megabytes\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setresourcelimit.php\n * @param type int <p>\n * Refer to the list of resourcetype constants.\n * <\/p>\n * @param limit int <p>\n * The resource limit. The unit depends on the type of the resource being limited.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setresolution",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image resolution\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setresolution.php\n * @param x_resolution float <p>\n * The horizontal resolution.\n * <\/p>\n * @param y_resolution float <p>\n * The vertical resolution.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setsamplingfactors",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "factors",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image sampling factors\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setsamplingfactors.php\n * @param factors array <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setsize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the size of the Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.setsize.php\n * @param columns int <p>\n * <\/p>\n * @param rows int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "settype",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "image_type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the image type attribute\n * @link http:\/\/www.php.net\/manual\/en\/imagick.settype.php\n * @param image_type int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "key",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "next",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "rewind",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "valid",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Checks if the current item is valid\n * @link http:\/\/www.php.net\/manual\/en\/imagick.valid.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "current",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns a reference to the current Imagick object\n * @link http:\/\/www.php.net\/manual\/en\/imagick.current.php\n * @return Imagick self on success.\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "COLOR_BLACK",
                "value": 11,
                "doc": null
            },
            {
                "name": "COLOR_BLUE",
                "value": 12,
                "doc": null
            },
            {
                "name": "COLOR_CYAN",
                "value": 13,
                "doc": null
            },
            {
                "name": "COLOR_GREEN",
                "value": 14,
                "doc": null
            },
            {
                "name": "COLOR_RED",
                "value": 15,
                "doc": null
            },
            {
                "name": "COLOR_YELLOW",
                "value": 16,
                "doc": null
            },
            {
                "name": "COLOR_MAGENTA",
                "value": 17,
                "doc": null
            },
            {
                "name": "COLOR_OPACITY",
                "value": 18,
                "doc": null
            },
            {
                "name": "COLOR_ALPHA",
                "value": 19,
                "doc": null
            },
            {
                "name": "COLOR_FUZZ",
                "value": 20,
                "doc": null
            },
            {
                "name": "IMAGICK_EXTNUM",
                "value": 30102,
                "doc": null
            },
            {
                "name": "IMAGICK_EXTVER",
                "value": "3.1.2",
                "doc": null
            },
            {
                "name": "COMPOSITE_DEFAULT",
                "value": 40,
                "doc": null
            },
            {
                "name": "COMPOSITE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "COMPOSITE_NO",
                "value": 1,
                "doc": null
            },
            {
                "name": "COMPOSITE_ADD",
                "value": 2,
                "doc": null
            },
            {
                "name": "COMPOSITE_ATOP",
                "value": 3,
                "doc": null
            },
            {
                "name": "COMPOSITE_BLEND",
                "value": 4,
                "doc": null
            },
            {
                "name": "COMPOSITE_BUMPMAP",
                "value": 5,
                "doc": null
            },
            {
                "name": "COMPOSITE_CLEAR",
                "value": 7,
                "doc": null
            },
            {
                "name": "COMPOSITE_COLORBURN",
                "value": 8,
                "doc": null
            },
            {
                "name": "COMPOSITE_COLORDODGE",
                "value": 9,
                "doc": null
            },
            {
                "name": "COMPOSITE_COLORIZE",
                "value": 10,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYBLACK",
                "value": 11,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYBLUE",
                "value": 12,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPY",
                "value": 13,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYCYAN",
                "value": 14,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYGREEN",
                "value": 15,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYMAGENTA",
                "value": 16,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYOPACITY",
                "value": 17,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYRED",
                "value": 18,
                "doc": null
            },
            {
                "name": "COMPOSITE_COPYYELLOW",
                "value": 19,
                "doc": null
            },
            {
                "name": "COMPOSITE_DARKEN",
                "value": 20,
                "doc": null
            },
            {
                "name": "COMPOSITE_DSTATOP",
                "value": 21,
                "doc": null
            },
            {
                "name": "COMPOSITE_DST",
                "value": 22,
                "doc": null
            },
            {
                "name": "COMPOSITE_DSTIN",
                "value": 23,
                "doc": null
            },
            {
                "name": "COMPOSITE_DSTOUT",
                "value": 24,
                "doc": null
            },
            {
                "name": "COMPOSITE_DSTOVER",
                "value": 25,
                "doc": null
            },
            {
                "name": "COMPOSITE_DIFFERENCE",
                "value": 26,
                "doc": null
            },
            {
                "name": "COMPOSITE_DISPLACE",
                "value": 27,
                "doc": null
            },
            {
                "name": "COMPOSITE_DISSOLVE",
                "value": 28,
                "doc": null
            },
            {
                "name": "COMPOSITE_EXCLUSION",
                "value": 29,
                "doc": null
            },
            {
                "name": "COMPOSITE_HARDLIGHT",
                "value": 30,
                "doc": null
            },
            {
                "name": "COMPOSITE_HUE",
                "value": 31,
                "doc": null
            },
            {
                "name": "COMPOSITE_IN",
                "value": 32,
                "doc": null
            },
            {
                "name": "COMPOSITE_LIGHTEN",
                "value": 33,
                "doc": null
            },
            {
                "name": "COMPOSITE_LUMINIZE",
                "value": 35,
                "doc": null
            },
            {
                "name": "COMPOSITE_MINUS",
                "value": 36,
                "doc": null
            },
            {
                "name": "COMPOSITE_MODULATE",
                "value": 37,
                "doc": null
            },
            {
                "name": "COMPOSITE_MULTIPLY",
                "value": 38,
                "doc": null
            },
            {
                "name": "COMPOSITE_OUT",
                "value": 39,
                "doc": null
            },
            {
                "name": "COMPOSITE_OVER",
                "value": 40,
                "doc": null
            },
            {
                "name": "COMPOSITE_OVERLAY",
                "value": 41,
                "doc": null
            },
            {
                "name": "COMPOSITE_PLUS",
                "value": 42,
                "doc": null
            },
            {
                "name": "COMPOSITE_REPLACE",
                "value": 43,
                "doc": null
            },
            {
                "name": "COMPOSITE_SATURATE",
                "value": 44,
                "doc": null
            },
            {
                "name": "COMPOSITE_SCREEN",
                "value": 45,
                "doc": null
            },
            {
                "name": "COMPOSITE_SOFTLIGHT",
                "value": 46,
                "doc": null
            },
            {
                "name": "COMPOSITE_SRCATOP",
                "value": 47,
                "doc": null
            },
            {
                "name": "COMPOSITE_SRC",
                "value": 48,
                "doc": null
            },
            {
                "name": "COMPOSITE_SRCIN",
                "value": 49,
                "doc": null
            },
            {
                "name": "COMPOSITE_SRCOUT",
                "value": 50,
                "doc": null
            },
            {
                "name": "COMPOSITE_SRCOVER",
                "value": 51,
                "doc": null
            },
            {
                "name": "COMPOSITE_SUBTRACT",
                "value": 52,
                "doc": null
            },
            {
                "name": "COMPOSITE_THRESHOLD",
                "value": 53,
                "doc": null
            },
            {
                "name": "COMPOSITE_XOR",
                "value": 54,
                "doc": null
            },
            {
                "name": "MONTAGEMODE_FRAME",
                "value": 1,
                "doc": null
            },
            {
                "name": "MONTAGEMODE_UNFRAME",
                "value": 2,
                "doc": null
            },
            {
                "name": "MONTAGEMODE_CONCATENATE",
                "value": 3,
                "doc": null
            },
            {
                "name": "STYLE_NORMAL",
                "value": 1,
                "doc": null
            },
            {
                "name": "STYLE_ITALIC",
                "value": 2,
                "doc": null
            },
            {
                "name": "STYLE_OBLIQUE",
                "value": 3,
                "doc": null
            },
            {
                "name": "STYLE_ANY",
                "value": 4,
                "doc": null
            },
            {
                "name": "FILTER_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "FILTER_POINT",
                "value": 1,
                "doc": null
            },
            {
                "name": "FILTER_BOX",
                "value": 2,
                "doc": null
            },
            {
                "name": "FILTER_TRIANGLE",
                "value": 3,
                "doc": null
            },
            {
                "name": "FILTER_HERMITE",
                "value": 4,
                "doc": null
            },
            {
                "name": "FILTER_HANNING",
                "value": 5,
                "doc": null
            },
            {
                "name": "FILTER_HAMMING",
                "value": 6,
                "doc": null
            },
            {
                "name": "FILTER_BLACKMAN",
                "value": 7,
                "doc": null
            },
            {
                "name": "FILTER_GAUSSIAN",
                "value": 8,
                "doc": null
            },
            {
                "name": "FILTER_QUADRATIC",
                "value": 9,
                "doc": null
            },
            {
                "name": "FILTER_CUBIC",
                "value": 10,
                "doc": null
            },
            {
                "name": "FILTER_CATROM",
                "value": 11,
                "doc": null
            },
            {
                "name": "FILTER_MITCHELL",
                "value": 12,
                "doc": null
            },
            {
                "name": "FILTER_LANCZOS",
                "value": 22,
                "doc": null
            },
            {
                "name": "FILTER_BESSEL",
                "value": 13,
                "doc": null
            },
            {
                "name": "FILTER_SINC",
                "value": 14,
                "doc": null
            },
            {
                "name": "IMGTYPE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "IMGTYPE_BILEVEL",
                "value": 1,
                "doc": null
            },
            {
                "name": "IMGTYPE_GRAYSCALE",
                "value": 2,
                "doc": null
            },
            {
                "name": "IMGTYPE_GRAYSCALEMATTE",
                "value": 3,
                "doc": null
            },
            {
                "name": "IMGTYPE_PALETTE",
                "value": 4,
                "doc": null
            },
            {
                "name": "IMGTYPE_PALETTEMATTE",
                "value": 5,
                "doc": null
            },
            {
                "name": "IMGTYPE_TRUECOLOR",
                "value": 6,
                "doc": null
            },
            {
                "name": "IMGTYPE_TRUECOLORMATTE",
                "value": 7,
                "doc": null
            },
            {
                "name": "IMGTYPE_COLORSEPARATION",
                "value": 8,
                "doc": null
            },
            {
                "name": "IMGTYPE_COLORSEPARATIONMATTE",
                "value": 9,
                "doc": null
            },
            {
                "name": "IMGTYPE_OPTIMIZE",
                "value": 10,
                "doc": null
            },
            {
                "name": "RESOLUTION_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "RESOLUTION_PIXELSPERINCH",
                "value": 1,
                "doc": null
            },
            {
                "name": "RESOLUTION_PIXELSPERCENTIMETER",
                "value": 2,
                "doc": null
            },
            {
                "name": "COMPRESSION_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "COMPRESSION_NO",
                "value": 1,
                "doc": null
            },
            {
                "name": "COMPRESSION_BZIP",
                "value": 2,
                "doc": null
            },
            {
                "name": "COMPRESSION_FAX",
                "value": 6,
                "doc": null
            },
            {
                "name": "COMPRESSION_GROUP4",
                "value": 7,
                "doc": null
            },
            {
                "name": "COMPRESSION_JPEG",
                "value": 8,
                "doc": null
            },
            {
                "name": "COMPRESSION_JPEG2000",
                "value": 9,
                "doc": null
            },
            {
                "name": "COMPRESSION_LOSSLESSJPEG",
                "value": 10,
                "doc": null
            },
            {
                "name": "COMPRESSION_LZW",
                "value": 11,
                "doc": null
            },
            {
                "name": "COMPRESSION_RLE",
                "value": 12,
                "doc": null
            },
            {
                "name": "COMPRESSION_ZIP",
                "value": 13,
                "doc": null
            },
            {
                "name": "COMPRESSION_DXT1",
                "value": 3,
                "doc": null
            },
            {
                "name": "COMPRESSION_DXT3",
                "value": 4,
                "doc": null
            },
            {
                "name": "COMPRESSION_DXT5",
                "value": 5,
                "doc": null
            },
            {
                "name": "PAINT_POINT",
                "value": 1,
                "doc": null
            },
            {
                "name": "PAINT_REPLACE",
                "value": 2,
                "doc": null
            },
            {
                "name": "PAINT_FLOODFILL",
                "value": 3,
                "doc": null
            },
            {
                "name": "PAINT_FILLTOBORDER",
                "value": 4,
                "doc": null
            },
            {
                "name": "PAINT_RESET",
                "value": 5,
                "doc": null
            },
            {
                "name": "GRAVITY_NORTHWEST",
                "value": 1,
                "doc": null
            },
            {
                "name": "GRAVITY_NORTH",
                "value": 2,
                "doc": null
            },
            {
                "name": "GRAVITY_NORTHEAST",
                "value": 3,
                "doc": null
            },
            {
                "name": "GRAVITY_WEST",
                "value": 4,
                "doc": null
            },
            {
                "name": "GRAVITY_CENTER",
                "value": 5,
                "doc": null
            },
            {
                "name": "GRAVITY_EAST",
                "value": 6,
                "doc": null
            },
            {
                "name": "GRAVITY_SOUTHWEST",
                "value": 7,
                "doc": null
            },
            {
                "name": "GRAVITY_SOUTH",
                "value": 8,
                "doc": null
            },
            {
                "name": "GRAVITY_SOUTHEAST",
                "value": 9,
                "doc": null
            },
            {
                "name": "STRETCH_NORMAL",
                "value": 1,
                "doc": null
            },
            {
                "name": "STRETCH_ULTRACONDENSED",
                "value": 2,
                "doc": null
            },
            {
                "name": "STRETCH_CONDENSED",
                "value": 4,
                "doc": null
            },
            {
                "name": "STRETCH_SEMICONDENSED",
                "value": 5,
                "doc": null
            },
            {
                "name": "STRETCH_SEMIEXPANDED",
                "value": 6,
                "doc": null
            },
            {
                "name": "STRETCH_EXPANDED",
                "value": 7,
                "doc": null
            },
            {
                "name": "STRETCH_EXTRAEXPANDED",
                "value": 8,
                "doc": null
            },
            {
                "name": "STRETCH_ULTRAEXPANDED",
                "value": 9,
                "doc": null
            },
            {
                "name": "STRETCH_ANY",
                "value": 10,
                "doc": null
            },
            {
                "name": "ALIGN_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "ALIGN_LEFT",
                "value": 1,
                "doc": null
            },
            {
                "name": "ALIGN_CENTER",
                "value": 2,
                "doc": null
            },
            {
                "name": "ALIGN_RIGHT",
                "value": 3,
                "doc": null
            },
            {
                "name": "DECORATION_NO",
                "value": 1,
                "doc": null
            },
            {
                "name": "DECORATION_UNDERLINE",
                "value": 2,
                "doc": null
            },
            {
                "name": "DECORATION_OVERLINE",
                "value": 3,
                "doc": null
            },
            {
                "name": "DECORATION_LINETROUGH",
                "value": 4,
                "doc": null
            },
            {
                "name": "NOISE_UNIFORM",
                "value": 1,
                "doc": null
            },
            {
                "name": "NOISE_GAUSSIAN",
                "value": 2,
                "doc": null
            },
            {
                "name": "NOISE_MULTIPLICATIVEGAUSSIAN",
                "value": 3,
                "doc": null
            },
            {
                "name": "NOISE_IMPULSE",
                "value": 4,
                "doc": null
            },
            {
                "name": "NOISE_LAPLACIAN",
                "value": 5,
                "doc": null
            },
            {
                "name": "NOISE_POISSON",
                "value": 6,
                "doc": null
            },
            {
                "name": "NOISE_RANDOM",
                "value": 7,
                "doc": null
            },
            {
                "name": "CHANNEL_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "CHANNEL_RED",
                "value": 1,
                "doc": null
            },
            {
                "name": "CHANNEL_GRAY",
                "value": 1,
                "doc": null
            },
            {
                "name": "CHANNEL_CYAN",
                "value": 1,
                "doc": null
            },
            {
                "name": "CHANNEL_GREEN",
                "value": 2,
                "doc": null
            },
            {
                "name": "CHANNEL_MAGENTA",
                "value": 2,
                "doc": null
            },
            {
                "name": "CHANNEL_BLUE",
                "value": 4,
                "doc": null
            },
            {
                "name": "CHANNEL_YELLOW",
                "value": 4,
                "doc": null
            },
            {
                "name": "CHANNEL_ALPHA",
                "value": 8,
                "doc": null
            },
            {
                "name": "CHANNEL_OPACITY",
                "value": 8,
                "doc": null
            },
            {
                "name": "CHANNEL_MATTE",
                "value": 8,
                "doc": null
            },
            {
                "name": "CHANNEL_BLACK",
                "value": 32,
                "doc": null
            },
            {
                "name": "CHANNEL_INDEX",
                "value": 32,
                "doc": null
            },
            {
                "name": "CHANNEL_ALL",
                "value": 134217727,
                "doc": null
            },
            {
                "name": "CHANNEL_DEFAULT",
                "value": 134217719,
                "doc": null
            },
            {
                "name": "METRIC_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "METRIC_MEANABSOLUTEERROR",
                "value": 2,
                "doc": null
            },
            {
                "name": "METRIC_MEANSQUAREERROR",
                "value": 4,
                "doc": null
            },
            {
                "name": "METRIC_PEAKABSOLUTEERROR",
                "value": 5,
                "doc": null
            },
            {
                "name": "METRIC_PEAKSIGNALTONOISERATIO",
                "value": 6,
                "doc": null
            },
            {
                "name": "METRIC_ROOTMEANSQUAREDERROR",
                "value": 7,
                "doc": null
            },
            {
                "name": "PIXEL_CHAR",
                "value": 1,
                "doc": null
            },
            {
                "name": "PIXEL_DOUBLE",
                "value": 2,
                "doc": null
            },
            {
                "name": "PIXEL_FLOAT",
                "value": 3,
                "doc": null
            },
            {
                "name": "PIXEL_INTEGER",
                "value": 4,
                "doc": null
            },
            {
                "name": "PIXEL_LONG",
                "value": 5,
                "doc": null
            },
            {
                "name": "PIXEL_QUANTUM",
                "value": 6,
                "doc": null
            },
            {
                "name": "PIXEL_SHORT",
                "value": 7,
                "doc": null
            },
            {
                "name": "EVALUATE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "EVALUATE_ADD",
                "value": 1,
                "doc": null
            },
            {
                "name": "EVALUATE_AND",
                "value": 2,
                "doc": null
            },
            {
                "name": "EVALUATE_DIVIDE",
                "value": 3,
                "doc": null
            },
            {
                "name": "EVALUATE_LEFTSHIFT",
                "value": 4,
                "doc": null
            },
            {
                "name": "EVALUATE_MAX",
                "value": 5,
                "doc": null
            },
            {
                "name": "EVALUATE_MIN",
                "value": 6,
                "doc": null
            },
            {
                "name": "EVALUATE_MULTIPLY",
                "value": 7,
                "doc": null
            },
            {
                "name": "EVALUATE_OR",
                "value": 8,
                "doc": null
            },
            {
                "name": "EVALUATE_RIGHTSHIFT",
                "value": 9,
                "doc": null
            },
            {
                "name": "EVALUATE_SET",
                "value": 10,
                "doc": null
            },
            {
                "name": "EVALUATE_SUBTRACT",
                "value": 11,
                "doc": null
            },
            {
                "name": "EVALUATE_XOR",
                "value": 12,
                "doc": null
            },
            {
                "name": "EVALUATE_POW",
                "value": 13,
                "doc": null
            },
            {
                "name": "EVALUATE_LOG",
                "value": 14,
                "doc": null
            },
            {
                "name": "EVALUATE_THRESHOLD",
                "value": 15,
                "doc": null
            },
            {
                "name": "EVALUATE_THRESHOLDBLACK",
                "value": 16,
                "doc": null
            },
            {
                "name": "EVALUATE_THRESHOLDWHITE",
                "value": 17,
                "doc": null
            },
            {
                "name": "EVALUATE_GAUSSIANNOISE",
                "value": 18,
                "doc": null
            },
            {
                "name": "EVALUATE_IMPULSENOISE",
                "value": 19,
                "doc": null
            },
            {
                "name": "EVALUATE_LAPLACIANNOISE",
                "value": 20,
                "doc": null
            },
            {
                "name": "EVALUATE_MULTIPLICATIVENOISE",
                "value": 21,
                "doc": null
            },
            {
                "name": "EVALUATE_POISSONNOISE",
                "value": 22,
                "doc": null
            },
            {
                "name": "EVALUATE_UNIFORMNOISE",
                "value": 23,
                "doc": null
            },
            {
                "name": "EVALUATE_COSINE",
                "value": 24,
                "doc": null
            },
            {
                "name": "EVALUATE_SINE",
                "value": 25,
                "doc": null
            },
            {
                "name": "EVALUATE_ADDMODULUS",
                "value": 26,
                "doc": null
            },
            {
                "name": "COLORSPACE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "COLORSPACE_RGB",
                "value": 1,
                "doc": null
            },
            {
                "name": "COLORSPACE_GRAY",
                "value": 2,
                "doc": null
            },
            {
                "name": "COLORSPACE_TRANSPARENT",
                "value": 3,
                "doc": null
            },
            {
                "name": "COLORSPACE_OHTA",
                "value": 4,
                "doc": null
            },
            {
                "name": "COLORSPACE_LAB",
                "value": 5,
                "doc": null
            },
            {
                "name": "COLORSPACE_XYZ",
                "value": 6,
                "doc": null
            },
            {
                "name": "COLORSPACE_YCBCR",
                "value": 7,
                "doc": null
            },
            {
                "name": "COLORSPACE_YCC",
                "value": 8,
                "doc": null
            },
            {
                "name": "COLORSPACE_YIQ",
                "value": 9,
                "doc": null
            },
            {
                "name": "COLORSPACE_YPBPR",
                "value": 10,
                "doc": null
            },
            {
                "name": "COLORSPACE_YUV",
                "value": 11,
                "doc": null
            },
            {
                "name": "COLORSPACE_CMYK",
                "value": 12,
                "doc": null
            },
            {
                "name": "COLORSPACE_SRGB",
                "value": 13,
                "doc": null
            },
            {
                "name": "COLORSPACE_HSB",
                "value": 14,
                "doc": null
            },
            {
                "name": "COLORSPACE_HSL",
                "value": 15,
                "doc": null
            },
            {
                "name": "COLORSPACE_HWB",
                "value": 16,
                "doc": null
            },
            {
                "name": "COLORSPACE_REC601LUMA",
                "value": 17,
                "doc": null
            },
            {
                "name": "COLORSPACE_REC709LUMA",
                "value": 19,
                "doc": null
            },
            {
                "name": "COLORSPACE_LOG",
                "value": 21,
                "doc": null
            },
            {
                "name": "COLORSPACE_CMY",
                "value": 22,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_BACKGROUND",
                "value": 1,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_CONSTANT",
                "value": 2,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_EDGE",
                "value": 4,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_MIRROR",
                "value": 5,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_TILE",
                "value": 7,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_TRANSPARENT",
                "value": 8,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_MASK",
                "value": 9,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_BLACK",
                "value": 10,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_GRAY",
                "value": 11,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_WHITE",
                "value": 12,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_HORIZONTALTILE",
                "value": 13,
                "doc": null
            },
            {
                "name": "VIRTUALPIXELMETHOD_VERTICALTILE",
                "value": 14,
                "doc": null
            },
            {
                "name": "PREVIEW_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "PREVIEW_ROTATE",
                "value": 1,
                "doc": null
            },
            {
                "name": "PREVIEW_SHEAR",
                "value": 2,
                "doc": null
            },
            {
                "name": "PREVIEW_ROLL",
                "value": 3,
                "doc": null
            },
            {
                "name": "PREVIEW_HUE",
                "value": 4,
                "doc": null
            },
            {
                "name": "PREVIEW_SATURATION",
                "value": 5,
                "doc": null
            },
            {
                "name": "PREVIEW_BRIGHTNESS",
                "value": 6,
                "doc": null
            },
            {
                "name": "PREVIEW_GAMMA",
                "value": 7,
                "doc": null
            },
            {
                "name": "PREVIEW_SPIFF",
                "value": 8,
                "doc": null
            },
            {
                "name": "PREVIEW_DULL",
                "value": 9,
                "doc": null
            },
            {
                "name": "PREVIEW_GRAYSCALE",
                "value": 10,
                "doc": null
            },
            {
                "name": "PREVIEW_QUANTIZE",
                "value": 11,
                "doc": null
            },
            {
                "name": "PREVIEW_DESPECKLE",
                "value": 12,
                "doc": null
            },
            {
                "name": "PREVIEW_REDUCENOISE",
                "value": 13,
                "doc": null
            },
            {
                "name": "PREVIEW_ADDNOISE",
                "value": 14,
                "doc": null
            },
            {
                "name": "PREVIEW_SHARPEN",
                "value": 15,
                "doc": null
            },
            {
                "name": "PREVIEW_BLUR",
                "value": 16,
                "doc": null
            },
            {
                "name": "PREVIEW_THRESHOLD",
                "value": 17,
                "doc": null
            },
            {
                "name": "PREVIEW_EDGEDETECT",
                "value": 18,
                "doc": null
            },
            {
                "name": "PREVIEW_SPREAD",
                "value": 19,
                "doc": null
            },
            {
                "name": "PREVIEW_SOLARIZE",
                "value": 20,
                "doc": null
            },
            {
                "name": "PREVIEW_SHADE",
                "value": 21,
                "doc": null
            },
            {
                "name": "PREVIEW_RAISE",
                "value": 22,
                "doc": null
            },
            {
                "name": "PREVIEW_SEGMENT",
                "value": 23,
                "doc": null
            },
            {
                "name": "PREVIEW_SWIRL",
                "value": 24,
                "doc": null
            },
            {
                "name": "PREVIEW_IMPLODE",
                "value": 25,
                "doc": null
            },
            {
                "name": "PREVIEW_WAVE",
                "value": 26,
                "doc": null
            },
            {
                "name": "PREVIEW_OILPAINT",
                "value": 27,
                "doc": null
            },
            {
                "name": "PREVIEW_CHARCOALDRAWING",
                "value": 28,
                "doc": null
            },
            {
                "name": "PREVIEW_JPEG",
                "value": 29,
                "doc": null
            },
            {
                "name": "RENDERINGINTENT_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "RENDERINGINTENT_SATURATION",
                "value": 1,
                "doc": null
            },
            {
                "name": "RENDERINGINTENT_PERCEPTUAL",
                "value": 2,
                "doc": null
            },
            {
                "name": "RENDERINGINTENT_ABSOLUTE",
                "value": 3,
                "doc": null
            },
            {
                "name": "RENDERINGINTENT_RELATIVE",
                "value": 4,
                "doc": null
            },
            {
                "name": "INTERLACE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "INTERLACE_NO",
                "value": 1,
                "doc": null
            },
            {
                "name": "INTERLACE_LINE",
                "value": 2,
                "doc": null
            },
            {
                "name": "INTERLACE_PLANE",
                "value": 3,
                "doc": null
            },
            {
                "name": "INTERLACE_PARTITION",
                "value": 4,
                "doc": null
            },
            {
                "name": "INTERLACE_GIF",
                "value": 5,
                "doc": null
            },
            {
                "name": "INTERLACE_JPEG",
                "value": 6,
                "doc": null
            },
            {
                "name": "INTERLACE_PNG",
                "value": 7,
                "doc": null
            },
            {
                "name": "FILLRULE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "FILLRULE_EVENODD",
                "value": 1,
                "doc": null
            },
            {
                "name": "FILLRULE_NONZERO",
                "value": 2,
                "doc": null
            },
            {
                "name": "PATHUNITS_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "PATHUNITS_USERSPACE",
                "value": 1,
                "doc": null
            },
            {
                "name": "PATHUNITS_USERSPACEONUSE",
                "value": 2,
                "doc": null
            },
            {
                "name": "PATHUNITS_OBJECTBOUNDINGBOX",
                "value": 3,
                "doc": null
            },
            {
                "name": "LINECAP_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "LINECAP_BUTT",
                "value": 1,
                "doc": null
            },
            {
                "name": "LINECAP_ROUND",
                "value": 2,
                "doc": null
            },
            {
                "name": "LINECAP_SQUARE",
                "value": 3,
                "doc": null
            },
            {
                "name": "LINEJOIN_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "LINEJOIN_MITER",
                "value": 1,
                "doc": null
            },
            {
                "name": "LINEJOIN_ROUND",
                "value": 2,
                "doc": null
            },
            {
                "name": "LINEJOIN_BEVEL",
                "value": 3,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_AREA",
                "value": 1,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_DISK",
                "value": 2,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_FILE",
                "value": 3,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_MAP",
                "value": 4,
                "doc": null
            },
            {
                "name": "RESOURCETYPE_MEMORY",
                "value": 5,
                "doc": null
            },
            {
                "name": "DISPOSE_UNRECOGNIZED",
                "value": 0,
                "doc": null
            },
            {
                "name": "DISPOSE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "DISPOSE_NONE",
                "value": 1,
                "doc": null
            },
            {
                "name": "DISPOSE_BACKGROUND",
                "value": 2,
                "doc": null
            },
            {
                "name": "DISPOSE_PREVIOUS",
                "value": 3,
                "doc": null
            },
            {
                "name": "INTERPOLATE_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "INTERPOLATE_AVERAGE",
                "value": 1,
                "doc": null
            },
            {
                "name": "INTERPOLATE_BICUBIC",
                "value": 2,
                "doc": null
            },
            {
                "name": "INTERPOLATE_BILINEAR",
                "value": 3,
                "doc": null
            },
            {
                "name": "INTERPOLATE_FILTER",
                "value": 4,
                "doc": null
            },
            {
                "name": "INTERPOLATE_INTEGER",
                "value": 5,
                "doc": null
            },
            {
                "name": "INTERPOLATE_MESH",
                "value": 6,
                "doc": null
            },
            {
                "name": "INTERPOLATE_NEARESTNEIGHBOR",
                "value": 7,
                "doc": null
            },
            {
                "name": "INTERPOLATE_SPLINE",
                "value": 8,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_COALESCE",
                "value": 1,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_COMPAREANY",
                "value": 2,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_COMPARECLEAR",
                "value": 3,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_COMPAREOVERLAY",
                "value": 4,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_DISPOSE",
                "value": 5,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_OPTIMIZE",
                "value": 6,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_OPTIMIZEPLUS",
                "value": 8,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_OPTIMIZETRANS",
                "value": 9,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_COMPOSITE",
                "value": 12,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_OPTIMIZEIMAGE",
                "value": 7,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_REMOVEDUPS",
                "value": 10,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_REMOVEZERO",
                "value": 11,
                "doc": null
            },
            {
                "name": "ORIENTATION_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "ORIENTATION_TOPLEFT",
                "value": 1,
                "doc": null
            },
            {
                "name": "ORIENTATION_TOPRIGHT",
                "value": 2,
                "doc": null
            },
            {
                "name": "ORIENTATION_BOTTOMRIGHT",
                "value": 3,
                "doc": null
            },
            {
                "name": "ORIENTATION_BOTTOMLEFT",
                "value": 4,
                "doc": null
            },
            {
                "name": "ORIENTATION_LEFTTOP",
                "value": 5,
                "doc": null
            },
            {
                "name": "ORIENTATION_RIGHTTOP",
                "value": 6,
                "doc": null
            },
            {
                "name": "ORIENTATION_RIGHTBOTTOM",
                "value": 7,
                "doc": null
            },
            {
                "name": "ORIENTATION_LEFTBOTTOM",
                "value": 8,
                "doc": null
            },
            {
                "name": "DISTORTION_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "DISTORTION_AFFINE",
                "value": 1,
                "doc": null
            },
            {
                "name": "DISTORTION_AFFINEPROJECTION",
                "value": 2,
                "doc": null
            },
            {
                "name": "DISTORTION_ARC",
                "value": 9,
                "doc": null
            },
            {
                "name": "DISTORTION_BILINEAR",
                "value": 6,
                "doc": null
            },
            {
                "name": "DISTORTION_PERSPECTIVE",
                "value": 4,
                "doc": null
            },
            {
                "name": "DISTORTION_PERSPECTIVEPROJECTION",
                "value": 5,
                "doc": null
            },
            {
                "name": "DISTORTION_SCALEROTATETRANSLATE",
                "value": 3,
                "doc": null
            },
            {
                "name": "DISTORTION_POLYNOMIAL",
                "value": 8,
                "doc": null
            },
            {
                "name": "DISTORTION_POLAR",
                "value": 10,
                "doc": null
            },
            {
                "name": "DISTORTION_DEPOLAR",
                "value": 11,
                "doc": null
            },
            {
                "name": "DISTORTION_BARREL",
                "value": 14,
                "doc": null
            },
            {
                "name": "DISTORTION_BARRELINVERSE",
                "value": 15,
                "doc": null
            },
            {
                "name": "DISTORTION_SHEPARDS",
                "value": 16,
                "doc": null
            },
            {
                "name": "DISTORTION_SENTINEL",
                "value": 18,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_MERGE",
                "value": 13,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_FLATTEN",
                "value": 14,
                "doc": null
            },
            {
                "name": "LAYERMETHOD_MOSAIC",
                "value": 15,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_ACTIVATE",
                "value": 1,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_DEACTIVATE",
                "value": 4,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_RESET",
                "value": 7,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_SET",
                "value": 8,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_COPY",
                "value": 3,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_EXTRACT",
                "value": 5,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_OPAQUE",
                "value": 6,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_SHAPE",
                "value": 9,
                "doc": null
            },
            {
                "name": "ALPHACHANNEL_TRANSPARENT",
                "value": 10,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_BARYCENTRIC",
                "value": 1,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_BILINEAR",
                "value": 7,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_POLYNOMIAL",
                "value": 8,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_SPEPARDS",
                "value": 16,
                "doc": null
            },
            {
                "name": "SPARSECOLORMETHOD_VORONOI",
                "value": 18,
                "doc": null
            },
            {
                "name": "DITHERMETHOD_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "DITHERMETHOD_NO",
                "value": 1,
                "doc": null
            },
            {
                "name": "DITHERMETHOD_RIEMERSMA",
                "value": 2,
                "doc": null
            },
            {
                "name": "DITHERMETHOD_FLOYDSTEINBERG",
                "value": 3,
                "doc": null
            },
            {
                "name": "FUNCTION_UNDEFINED",
                "value": 0,
                "doc": null
            },
            {
                "name": "FUNCTION_POLYNOMIAL",
                "value": 1,
                "doc": null
            },
            {
                "name": "FUNCTION_SINUSOID",
                "value": 2,
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickDraw",
        "fqn": "\\ImagickDraw",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "resetvectorgraphics",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "gettextkerning",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "settextkerning",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "kerning",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param kerning\n *\/"
            },
            {
                "name": "gettextinterwordspacing",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "settextinterwordspacing",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "spacing",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param spacing\n *\/"
            },
            {
                "name": "gettextinterlinespacing",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "settextinterlinespacing",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "spacing",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param spacing\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * The ImagickDraw constructor\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.construct.php\n *\/"
            },
            {
                "name": "setfillcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill_pixel",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the fill color to be used for drawing filled objects\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfillcolor.php\n * @param fill_pixel ImagickPixel <p>\n * ImagickPixel to use to set the color\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setfillalpha",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the opacity to use when drawing using the fill color or fill texture\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfillalpha.php\n * @param opacity float <p>\n * fill alpha\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setresolution",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y_resolution",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param x_resolution\n * @param y_resolution\n *\/"
            },
            {
                "name": "setstrokecolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stroke_pixel",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the color used for stroking object outlines\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokecolor.php\n * @param stroke_pixel ImagickPixel <p>\n * the stroke color\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setstrokealpha",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the opacity of stroked object outlines\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokealpha.php\n * @param opacity float <p>\n * opacity\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setstrokewidth",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stroke_width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the width of the stroke used to draw object outlines\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokewidth.php\n * @param stroke_width float <p>\n * stroke width\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "clear",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Clears the ImagickDraw\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.clear.php\n * @return bool an ImagickDraw object.\n *\/"
            },
            {
                "name": "circle",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "ox",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "oy",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "px",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "py",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a circle\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.circle.php\n * @param ox float <p>\n * origin x coordinate\n * <\/p>\n * @param oy float <p>\n * origin y coordinate\n * <\/p>\n * @param px float <p>\n * perimeter x coordinate\n * <\/p>\n * @param py float <p>\n * perimeter y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "annotation",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "text",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws text on the image\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.annotation.php\n * @param x float <p>\n * The x coordinate where text is drawn\n * <\/p>\n * @param y float <p>\n * The y coordinate where text is drawn\n * <\/p>\n * @param text string <p>\n * The text to draw on the image\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "settextantialias",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "antiAlias",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Controls whether text is antialiased\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.settextantialias.php\n * @param antiAlias bool <p>\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "settextencoding",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "encoding",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies specifies the text code set\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.settextencoding.php\n * @param encoding string <p>\n * the encoding name\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setfont",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "font_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the fully-specified font to use when annotating with text\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfont.php\n * @param font_name string <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setfontfamily",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "font_family",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the font family to use when annotating with text\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfontfamily.php\n * @param font_family string <p>\n * the font family\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setfontsize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pointsize",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the font pointsize to use when annotating with text\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfontsize.php\n * @param pointsize float <p>\n * the point size\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setfontstyle",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "style",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the font style to use when annotating with text\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfontstyle.php\n * @param style int <p>\n * STYLETYPE_ constant\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setfontweight",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "font_weight",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the font weight\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfontweight.php\n * @param font_weight int <p>\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "getfont",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the font\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getfont.php\n * @return string a string on success and false if no font is set.\n *\/"
            },
            {
                "name": "getfontfamily",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the font family\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getfontfamily.php\n * @return string the font family currently selected or false if font family is not set.\n *\/"
            },
            {
                "name": "getfontsize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the font pointsize\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getfontsize.php\n * @return float the font size associated with the current ImagickDraw object.\n *\/"
            },
            {
                "name": "getfontstyle",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the font style\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getfontstyle.php\n * @return int the font style constant (STYLE_) associated with the ImagickDraw object\n * or 0 if no style is set.\n *\/"
            },
            {
                "name": "getfontweight",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the font weight\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getfontweight.php\n * @return int an int on success and 0 if no weight is set.\n *\/"
            },
            {
                "name": "destroy",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Frees all associated resources\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.destroy.php\n * @return bool\n *\/"
            },
            {
                "name": "rectangle",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a rectangle\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.rectangle.php\n * @param x1 float <p>\n * x coordinate of the top left corner\n * <\/p>\n * @param y1 float <p>\n * y coordinate of the top left corner\n * <\/p>\n * @param x2 float <p>\n * x coordinate of the bottom right corner\n * <\/p>\n * @param y2 float <p>\n * y coordinate of the bottom right corner\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "roundrectangle",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a rounded rectangle\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.roundrectangle.php\n * @param x1 float <p>\n * x coordinate of the top left corner\n * <\/p>\n * @param y1 float <p>\n * y coordinate of the top left corner\n * <\/p>\n * @param x2 float <p>\n * x coordinate of the bottom right\n * <\/p>\n * @param y2 float <p>\n * y coordinate of the bottom right\n * <\/p>\n * @param rx float <p>\n * x rounding\n * <\/p>\n * @param ry float <p>\n * y rounding\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "ellipse",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "ox",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "oy",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "start",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "end",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws an ellipse on the image\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.ellipse.php\n * @param ox float <p>\n * <\/p>\n * @param oy float <p>\n * <\/p>\n * @param rx float <p>\n * <\/p>\n * @param ry float <p>\n * <\/p>\n * @param start float <p>\n * <\/p>\n * @param end float <p>\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "skewx",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "degrees",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Skews the current coordinate system in the horizontal direction\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.skewx.php\n * @param degrees float <p>\n * degrees to skew\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "skewy",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "degrees",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Skews the current coordinate system in the vertical direction\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.skewy.php\n * @param degrees float <p>\n * degrees to skew\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "translate",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Applies a translation to the current coordinate system\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.translate.php\n * @param x float <p>\n * horizontal translation\n * <\/p>\n * @param y float <p>\n * vertical translation\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "line",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sy",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ex",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ey",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a line\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.line.php\n * @param sx float <p>\n * starting x coordinate\n * <\/p>\n * @param sy float <p>\n * starting y coordinate\n * <\/p>\n * @param ex float <p>\n * ending x coordinate\n * <\/p>\n * @param ey float <p>\n * ending y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "arc",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sy",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ex",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ey",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sd",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ed",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws an arc\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.arc.php\n * @param sx float <p>\n * Starting x ordinate of bounding rectangle\n * <\/p>\n * @param sy float <p>\n * starting y ordinate of bounding rectangle\n * <\/p>\n * @param ex float <p>\n * ending x ordinate of bounding rectangle\n * <\/p>\n * @param ey float <p>\n * ending y ordinate of bounding rectangle\n * <\/p>\n * @param sd float <p>\n * starting degrees of rotation\n * <\/p>\n * @param ed float <p>\n * ending degrees of rotation\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "matte",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "paintMethod",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Paints on the image's opacity channel\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.matte.php\n * @param x float <p>\n * x coordinate of the matte\n * <\/p>\n * @param y float <p>\n * y coordinate of the matte\n * <\/p>\n * @param paintMethod int <p>\n * PAINT_ constant\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "polygon",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "coordinates",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a polygon\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.polygon.php\n * @param coordinates array <p>\n * multidimensional array like array( array( 'x' => 3, 'y' => 4 ), array( 'x' => 2, 'y' => 6 ) );\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "point",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a point\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.point.php\n * @param x float <p>\n * point's x coordinate\n * <\/p>\n * @param y float <p>\n * point's y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "gettextdecoration",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the text decoration\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.gettextdecoration.php\n * @return int one of the DECORATION_ constants\n * and 0 if no decoration is set.\n *\/"
            },
            {
                "name": "gettextencoding",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the code set used for text annotations\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.gettextencoding.php\n * @return string a string specifying the code set\n * or false if text encoding is not set.\n *\/"
            },
            {
                "name": "getfontstretch",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setfontstretch",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fontStretch",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the font stretch to use when annotating with text\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfontstretch.php\n * @param fontStretch int <p>\n * STRETCH_ constant\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setstrokeantialias",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stroke_antialias",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Controls whether stroked outlines are antialiased\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokeantialias.php\n * @param stroke_antialias bool <p>\n * the antialias setting\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "settextalignment",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "alignment",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies a text alignment\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.settextalignment.php\n * @param alignment int <p>\n * ALIGN_ constant\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "settextdecoration",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "decoration",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies a decoration\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.settextdecoration.php\n * @param decoration int <p>\n * DECORATION_ constant\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "settextundercolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "under_color",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the color of a background rectangle\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.settextundercolor.php\n * @param under_color ImagickPixel <p>\n * the under color\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setviewbox",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the overall canvas size\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setviewbox.php\n * @param x1 int <p>\n * left x coordinate\n * <\/p>\n * @param y1 int <p>\n * left y coordinate\n * <\/p>\n * @param x2 int <p>\n * right x coordinate\n * <\/p>\n * @param y2 int <p>\n * right y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "affine",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "affine",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adjusts the current affine transformation matrix\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.affine.php\n * @param affine array <p>\n * Affine matrix parameters\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "bezier",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "coordinates",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a bezier curve\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.bezier.php\n * @param coordinates array <p>\n * Multidimensional array like array( array( 'x' => 1, 'y' => 2 ),\n * array( 'x' => 3, 'y' => 4 ) )\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "composite",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "compose",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "compositeWand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Composites an image onto the current image\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.composite.php\n * @param compose int <p>\n * composition operator. One of COMPOSITE_ constants\n * <\/p>\n * @param x float <p>\n * x coordinate of the top left corner\n * <\/p>\n * @param y float <p>\n * y coordinate of the top left corner\n * <\/p>\n * @param width float <p>\n * width of the composition image\n * <\/p>\n * @param height float <p>\n * height of the composition image\n * <\/p>\n * @param compositeWand Imagick <p>\n * the Imagick object where composition image is taken from\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "color",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "paintMethod",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws color on image\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.color.php\n * @param x float <p>\n * x coordinate of the paint\n * <\/p>\n * @param y float <p>\n * y coordinate of the paint\n * <\/p>\n * @param paintMethod int <p>\n * one of the PAINT_ constants\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "comment",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "comment",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a comment\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.comment.php\n * @param comment string <p>\n * The comment string to add to vector output stream\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "getclippath",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Obtains the current clipping path ID\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getclippath.php\n * @return string a string containing the clip path ID or false if no clip path exists.\n *\/"
            },
            {
                "name": "getcliprule",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the current polygon fill rule\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getcliprule.php\n * @return int one of the FILLRULE_ constants.\n *\/"
            },
            {
                "name": "getclipunits",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the interpretation of clip path units\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getclipunits.php\n * @return int an int on success.\n *\/"
            },
            {
                "name": "getfillcolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the fill color\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getfillcolor.php\n * @return ImagickPixel an ImagickPixel object.\n *\/"
            },
            {
                "name": "getfillopacity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the opacity used when drawing\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getfillopacity.php\n * @return float The opacity.\n *\/"
            },
            {
                "name": "getfillrule",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the fill rule\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getfillrule.php\n * @return int a FILLRULE_ constant\n *\/"
            },
            {
                "name": "getgravity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the text placement gravity\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getgravity.php\n * @return int a GRAVITY_ constant on success and 0 if no gravity is set.\n *\/"
            },
            {
                "name": "getstrokeantialias",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the current stroke antialias setting\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getstrokeantialias.php\n * @return bool true if antialiasing is on and false if it is off.\n *\/"
            },
            {
                "name": "getstrokecolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the color used for stroking object outlines\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getstrokecolor.php\n * @return ImagickPixel an ImagickPixel object which describes the color.\n *\/"
            },
            {
                "name": "getstrokedasharray",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array representing the pattern of dashes and gaps used to stroke paths\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getstrokedasharray.php\n * @return array an array on success and empty array if not set.\n *\/"
            },
            {
                "name": "getstrokedashoffset",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the offset into the dash pattern to start the dash\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getstrokedashoffset.php\n * @return float a float representing the offset and 0 if it's not set.\n *\/"
            },
            {
                "name": "getstrokelinecap",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the shape to be used at the end of open subpaths when they are stroked\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getstrokelinecap.php\n * @return int one of the LINECAP_ constants or 0 if stroke linecap is not set.\n *\/"
            },
            {
                "name": "getstrokelinejoin",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the shape to be used at the corners of paths when they are stroked\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getstrokelinejoin.php\n * @return int one of the LINEJOIN_ constants or 0 if stroke line join is not set.\n *\/"
            },
            {
                "name": "getstrokemiterlimit",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the stroke miter limit\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getstrokemiterlimit.php\n * @return int an int describing the miter limit\n * and 0 if no miter limit is set.\n *\/"
            },
            {
                "name": "getstrokeopacity",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the opacity of stroked object outlines\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getstrokeopacity.php\n * @return float a double describing the opacity.\n *\/"
            },
            {
                "name": "getstrokewidth",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the width of the stroke used to draw object outlines\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getstrokewidth.php\n * @return float a double describing the stroke width.\n *\/"
            },
            {
                "name": "gettextalignment",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the text alignment\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.gettextalignment.php\n * @return int one of the ALIGN_ constants and 0 if no align is set.\n *\/"
            },
            {
                "name": "gettextantialias",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the current text antialias setting\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.gettextantialias.php\n * @return bool true if text is antialiased and false if not.\n *\/"
            },
            {
                "name": "getvectorgraphics",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns a string containing vector graphics\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.getvectorgraphics.php\n * @return string a string containing the vector graphics.\n *\/"
            },
            {
                "name": "gettextundercolor",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the text under color\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.gettextundercolor.php\n * @return ImagickPixel an ImagickPixel object describing the color.\n *\/"
            },
            {
                "name": "pathclose",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Adds a path element to the current path\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathclose.php\n * @return bool\n *\/"
            },
            {
                "name": "pathcurvetoabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a cubic Bezier curve\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathcurvetoabsolute.php\n * @param x1 float <p>\n * x coordinate of the first control point\n * <\/p>\n * @param y1 float <p>\n * y coordinate of the first control point\n * <\/p>\n * @param x2 float <p>\n * x coordinate of the second control point\n * <\/p>\n * @param y2 float <p>\n * y coordinate of the first control point\n * <\/p>\n * @param x float <p>\n * x coordinate of the curve end\n * <\/p>\n * @param y float <p>\n * y coordinate of the curve end\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathcurvetorelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a cubic Bezier curve\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathcurvetorelative.php\n * @param x1 float <p>\n * x coordinate of starting control point\n * <\/p>\n * @param y1 float <p>\n * y coordinate of starting control point\n * <\/p>\n * @param x2 float <p>\n * x coordinate of ending control point\n * <\/p>\n * @param y2 float <p>\n * y coordinate of ending control point\n * <\/p>\n * @param x float <p>\n * ending x coordinate\n * <\/p>\n * @param y float <p>\n * ending y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathcurvetoquadraticbezierabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a quadratic Bezier curve\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathcurvetoquadraticbezierabsolute.php\n * @param x1 float <p>\n * x coordinate of the control point\n * <\/p>\n * @param y1 float <p>\n * y coordinate of the control point\n * <\/p>\n * @param x float <p>\n * x coordinate of the end point\n * <\/p>\n * @param y float <p>\n * y coordinate of the end point\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathcurvetoquadraticbezierrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y1",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a quadratic Bezier curve\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathcurvetoquadraticbezierrelative.php\n * @param x1 float <p>\n * starting x coordinate\n * <\/p>\n * @param y1 float <p>\n * starting y coordinate\n * <\/p>\n * @param x float <p>\n * ending x coordinate\n * <\/p>\n * @param y float <p>\n * ending y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathcurvetoquadraticbeziersmoothabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a quadratic Bezier curve\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathcurvetoquadraticbeziersmoothabsolute.php\n * @param x float <p>\n * ending x coordinate\n * <\/p>\n * @param y float <p>\n * ending y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathcurvetoquadraticbeziersmoothrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a quadratic Bezier curve\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathcurvetoquadraticbeziersmoothrelative.php\n * @param x float <p>\n * ending x coordinate\n * <\/p>\n * @param y float <p>\n * ending y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathcurvetosmoothabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a cubic Bezier curve\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathcurvetosmoothabsolute.php\n * @param x2 float <p>\n * x coordinate of the second control point\n * <\/p>\n * @param y2 float <p>\n * y coordinate of the second control point\n * <\/p>\n * @param x float <p>\n * x coordinate of the ending point\n * <\/p>\n * @param y float <p>\n * y coordinate of the ending point\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathcurvetosmoothrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y2",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a cubic Bezier curve\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathcurvetosmoothrelative.php\n * @param x2 float <p>\n * x coordinate of the second control point\n * <\/p>\n * @param y2 float <p>\n * y coordinate of the second control point\n * <\/p>\n * @param x float <p>\n * x coordinate of the ending point\n * <\/p>\n * @param y float <p>\n * y coordinate of the ending point\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathellipticarcabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "rx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x_axis_rotation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "large_arc_flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sweep_flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws an elliptical arc\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathellipticarcabsolute.php\n * @param rx float <p>\n * x radius\n * <\/p>\n * @param ry float <p>\n * y radius\n * <\/p>\n * @param x_axis_rotation float <p>\n * x axis rotation\n * <\/p>\n * @param large_arc_flag bool <p>\n * large arc flag\n * <\/p>\n * @param sweep_flag bool <p>\n * sweep flag\n * <\/p>\n * @param x float <p>\n * x coordinate\n * <\/p>\n * @param y float <p>\n * y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathellipticarcrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "rx",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "ry",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x_axis_rotation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "large_arc_flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sweep_flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws an elliptical arc\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathellipticarcrelative.php\n * @param rx float <p>\n * x radius\n * <\/p>\n * @param ry float <p>\n * y radius\n * <\/p>\n * @param x_axis_rotation float <p>\n * x axis rotation\n * <\/p>\n * @param large_arc_flag bool <p>\n * large arc flag\n * <\/p>\n * @param sweep_flag bool <p>\n * sweep flag\n * <\/p>\n * @param x float <p>\n * x coordinate\n * <\/p>\n * @param y float <p>\n * y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathfinish",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Terminates the current path\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathfinish.php\n * @return bool\n *\/"
            },
            {
                "name": "pathlinetoabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a line path\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathlinetoabsolute.php\n * @param x float <p>\n * starting x coordinate\n * <\/p>\n * @param y float <p>\n * ending x coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathlinetorelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a line path\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathlinetorelative.php\n * @param x float <p>\n * starting x coordinate\n * <\/p>\n * @param y float <p>\n * starting y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathlinetohorizontalabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a horizontal line path\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathlinetohorizontalabsolute.php\n * @param x float <p>\n * x coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathlinetohorizontalrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a horizontal line\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathlinetohorizontalrelative.php\n * @param x float <p>\n * x coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathlinetoverticalabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a vertical line\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathlinetoverticalabsolute.php\n * @param y float <p>\n * y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathlinetoverticalrelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a vertical line path\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathlinetoverticalrelative.php\n * @param y float <p>\n * y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathmovetoabsolute",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Starts a new sub-path\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathmovetoabsolute.php\n * @param x float <p>\n * x coordinate of the starting point\n * <\/p>\n * @param y float <p>\n * y coordinate of the starting point\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathmovetorelative",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Starts a new sub-path\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathmovetorelative.php\n * @param x float <p>\n * target x coordinate\n * <\/p>\n * @param y float <p>\n * target y coordinate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pathstart",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Declares the start of a path drawing list\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pathstart.php\n * @return bool\n *\/"
            },
            {
                "name": "polyline",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "coordinates",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Draws a polyline\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.polyline.php\n * @param coordinates array <p>\n * array of x and y coordinates: array( array( 'x' => 4, 'y' => 6 ), array( 'x' => 8, 'y' => 10 ) )\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "popclippath",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Terminates a clip path definition\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.popclippath.php\n * @return bool\n *\/"
            },
            {
                "name": "popdefs",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Terminates a definition list\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.popdefs.php\n * @return bool\n *\/"
            },
            {
                "name": "poppattern",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Terminates a pattern definition\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.poppattern.php\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "pushclippath",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clip_mask_id",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Starts a clip path definition\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pushclippath.php\n * @param clip_mask_id string <p>\n * Clip mask Id\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "pushdefs",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Indicates that following commands create named elements for early processing\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pushdefs.php\n * @return bool\n *\/"
            },
            {
                "name": "pushpattern",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "pattern_id",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "width",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "height",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Indicates that subsequent commands up to a ImagickDraw::opPattern() command comprise the definition of a named pattern\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pushpattern.php\n * @param pattern_id string <p>\n * the pattern Id\n * <\/p>\n * @param x float <p>\n * x coordinate of the top-left corner\n * <\/p>\n * @param y float <p>\n * y coordinate of the top-left corner\n * <\/p>\n * @param width float <p>\n * width of the pattern\n * <\/p>\n * @param height float <p>\n * height of the pattern\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "render",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Renders all preceding drawing commands onto the image\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.render.php\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "rotate",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "degrees",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Applies the specified rotation to the current coordinate space\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.rotate.php\n * @param degrees float <p>\n * degrees to rotate\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "scale",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adjusts the scaling factor\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.scale.php\n * @param x float <p>\n * horizontal factor\n * <\/p>\n * @param y float <p>\n * vertical factor\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setclippath",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clip_mask",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Associates a named clipping path with the image\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setclippath.php\n * @param clip_mask string <p>\n * the clipping path name\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setcliprule",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill_rule",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Set the polygon fill rule to be used by the clipping path\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setcliprule.php\n * @param fill_rule int <p>\n * FILLRULE_ constant\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setclipunits",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clip_units",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the interpretation of clip path units\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setclipunits.php\n * @param clip_units int <p>\n * the number of clip units\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setfillopacity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fillOpacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the opacity to use when drawing using the fill color or fill texture\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfillopacity.php\n * @param fillOpacity float <p>\n * the fill opacity\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setfillpatternurl",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill_url",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the URL to use as a fill pattern for filling objects\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfillpatternurl.php\n * @param fill_url string <p>\n * URL to use to obtain fill pattern.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "setfillrule",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fill_rule",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the fill rule to use while drawing polygons\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setfillrule.php\n * @param fill_rule int <p>\n * FILLRULE_ constant\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setgravity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "gravity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the text placement gravity\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setgravity.php\n * @param gravity int <p>\n * GRAVITY_ constant\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setstrokepatternurl",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stroke_url",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the pattern used for stroking object outlines\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokepatternurl.php\n * @param stroke_url string <p>\n * stroke URL\n * <\/p>\n * @return bool imagick.imagickdraw.return.success;\n *\/"
            },
            {
                "name": "setstrokedashoffset",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "dash_offset",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the offset into the dash pattern to start the dash\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokedashoffset.php\n * @param dash_offset float <p>\n * dash offset\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setstrokelinecap",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "linecap",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the shape to be used at the end of open subpaths when they are stroked\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokelinecap.php\n * @param linecap int <p>\n * LINECAP_ constant\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setstrokelinejoin",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "linejoin",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the shape to be used at the corners of paths when they are stroked\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokelinejoin.php\n * @param linejoin int <p>\n * LINEJOIN_ constant\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setstrokemiterlimit",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "miterlimit",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the miter limit\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokemiterlimit.php\n * @param miterlimit int <p>\n * the miter limit\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setstrokeopacity",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "stroke_opacity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the opacity of stroked object outlines\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokeopacity.php\n * @param stroke_opacity float <p>\n * stroke opacity. 1.0 is fully opaque\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "setvectorgraphics",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "xml",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the vector graphics\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setvectorgraphics.php\n * @param xml string <p>\n * xml containing the vector graphics\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "pop",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destroys the current ImagickDraw in the stack, and returns to the previously pushed ImagickDraw\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.pop.php\n * @return bool true on success and false on failure.\n *\/"
            },
            {
                "name": "push",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Clones the current ImagickDraw and pushes it to the stack\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.push.php\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "setstrokedasharray",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "dashArray",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the pattern of dashes and gaps used to stroke paths\n * @link http:\/\/www.php.net\/manual\/en\/imagickdraw.setstrokedasharray.php\n * @param dashArray array <p>\n * array of floats\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickPixelIterator",
        "fqn": "\\ImagickPixelIterator",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "Imagick",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * The ImagickPixelIterator constructor\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.construct.php\n * @param Imagick Imagick\n *\/"
            },
            {
                "name": "newpixeliterator",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns a new pixel iterator\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.newpixeliterator.php\n * @param wand Imagick\n * @return bool Returns true on success. Throwing ImagickPixelIteratorException.\n *\/"
            },
            {
                "name": "newpixelregioniterator",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "wand",
                        "type": "Imagick",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "x",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "y",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "columns",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Returns a new pixel iterator\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.newpixelregioniterator.php\n * @param wand Imagick <p>\n * <\/p>\n * @param x int <p>\n * <\/p>\n * @param y int <p>\n * <\/p>\n * @param columns int <p>\n * <\/p>\n * @param rows int <p>\n * <\/p>\n * @return bool a new ImagickPixelIterator on success; on failure, throws\n * ImagickPixelIteratorException.\n *\/"
            },
            {
                "name": "getiteratorrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the current pixel iterator row\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.getiteratorrow.php\n * @return int the integer offset of the row, throwing\n * ImagickPixelIteratorException on error.\n *\/"
            },
            {
                "name": "setiteratorrow",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "row",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Set the pixel iterator row\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.setiteratorrow.php\n * @param row int <p>\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setiteratorfirstrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Sets the pixel iterator to the first pixel row\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.setiteratorfirstrow.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "setiteratorlastrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Sets the pixel iterator to the last pixel row\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.setiteratorlastrow.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getpreviousiteratorrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the previous row\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.getpreviousiteratorrow.php\n * @return array the previous row as an array of ImagickPixelWand objects from the\n * ImagickPixelIterator, throwing ImagickPixelIteratorException on error.\n *\/"
            },
            {
                "name": "getcurrentiteratorrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the current row of ImagickPixel objects\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.getcurrentiteratorrow.php\n * @return array a row as an array of ImagickPixel objects that can themselves be iterated.\n *\/"
            },
            {
                "name": "getnextiteratorrow",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the next row of the pixel iterator\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.getnextiteratorrow.php\n * @return array the next row as an array of ImagickPixel objects, throwing\n * ImagickPixelIteratorException on error.\n *\/"
            },
            {
                "name": "resetiterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Resets the pixel iterator\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.resetiterator.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "synciterator",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Syncs the pixel iterator\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.synciterator.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "destroy",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Deallocates resources associated with a PixelIterator\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.destroy.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "clear",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Clear resources associated with a PixelIterator\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixeliterator.clear.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "key",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "next",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "rewind",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "current",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "valid",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "ImagickPixel",
        "fqn": "\\ImagickPixel",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "gethsl",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the normalized HSL color of the ImagickPixel object\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.gethsl.php\n * @return array the HSL value in an array with the keys \"hue\",\n * \"saturation\", and \"luminosity\". Throws ImagickPixelException on failure.\n *\/"
            },
            {
                "name": "sethsl",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "hue",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "saturation",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "luminosity",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the normalized HSL color\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.sethsl.php\n * @param hue float <p>\n * The normalized value for hue, described as a fractional arc\n * (between 0 and 1) of the hue circle, where the zero value is\n * red.\n * <\/p>\n * @param saturation float <p>\n * The normalized value for saturation, with 1 as full saturation.\n * <\/p>\n * @param luminosity float <p>\n * The normalized value for luminosity, on a scale from black at\n * 0 to white at 1, with the full HS value at 0.5 luminosity.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getcolorvaluequantum",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setcolorvaluequantum",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color_value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param color_value\n *\/"
            },
            {
                "name": "getindex",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setindex",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "index",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param index\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * The ImagickPixel constructor\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.construct.php\n * @param color[optional]\n *\/"
            },
            {
                "name": "setcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the color\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.setcolor.php\n * @param color string <p>\n * The color definition to use in order to initialise the\n * ImagickPixel object.\n * <\/p>\n * @return bool true if the specified color was set, false otherwise.\n *\/"
            },
            {
                "name": "setcolorvalue",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the normalized value of one of the channels\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.setcolorvalue.php\n * @param color int <p>\n * One of the Imagick color constants e.g. \\Imagick::COLOR_GREEN or \\Imagick::COLOR_ALPHA.\n * <\/p>\n * @param value float <p>\n * The value to set this channel to, ranging from 0 to 1.\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getcolorvalue",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Gets the normalized value of the provided color channel\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.getcolorvalue.php\n * @param color int <p>\n * The color to get the value of, specified as one of the Imagick color\n * constants. This can be one of the RGB colors, CMYK colors, alpha and\n * opacity e.g (Imagick::COLOR_BLUE, Imagick::COLOR_MAGENTA).\n * <\/p>\n * @return float The value of the channel, as a normalized floating-point number, throwing\n * ImagickPixelException on error.\n *\/"
            },
            {
                "name": "clear",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Clears resources associated with this object\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.clear.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "destroy",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Deallocates resources associated with this object\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.destroy.php\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "issimilar",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "color",
                        "type": "ImagickPixel",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fuzz",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Check the distance between this color and another\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.issimilar.php\n * @param color ImagickPixel <p>\n * The ImagickPixel object to compare this object against.\n * <\/p>\n * @param fuzz float <p>\n * The maximum distance within which to consider these colors as similar.\n * The theoretical maximum for this value is the square root of three\n * (1.732).\n * <\/p>\n * @return bool Returns true on success.\n *\/"
            },
            {
                "name": "getcolor",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "normalized",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the color\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.getcolor.php\n * @param normalized bool[optional] <p>\n * Normalize the color values\n * <\/p>\n * @return array An array of channel values, each normalized if true is given as param. Throws\n * ImagickPixelException on error.\n *\/"
            },
            {
                "name": "getcolorasstring",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the color as a string\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.getcolorasstring.php\n * @return string the color of the ImagickPixel object as a string.\n *\/"
            },
            {
                "name": "getcolorcount",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the color count associated with this color\n * @link http:\/\/www.php.net\/manual\/en\/imagickpixel.getcolorcount.php\n * @return int the color count as an integer on success, throws\n * ImagickPixelException on failure.\n *\/"
            },
            {
                "name": "setcolorcount",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "colorCount",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param colorCount\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    }
]
