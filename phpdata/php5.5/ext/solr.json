[
    {
        "stmtType": "Class",
        "name": "SolrObject",
        "fqn": "\\SolrObject",
        "type": 32,
        "extends": "",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Creates Solr object\n * @link http:\/\/www.php.net\/manual\/en\/solrobject.construct.php\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor\n * @link http:\/\/www.php.net\/manual\/en\/solrobject.destruct.php\n * @return void None.\n *\/"
            },
            {
                "name": "offsetSet",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "property_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "property_value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the value for a property\n * @link http:\/\/www.php.net\/manual\/en\/solrobject.offsetset.php\n * @param property_name string <p>\n * The name of the property.\n * <\/p>\n * @param property_value string <p>\n * The new value.\n * <\/p>\n * @return void None.\n *\/"
            },
            {
                "name": "offsetGet",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "property_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Used to retrieve a property\n * @link http:\/\/www.php.net\/manual\/en\/solrobject.offsetget.php\n * @param property_name string <p>\n * Name of the property.\n * <\/p>\n * @return mixed the property value.\n *\/"
            },
            {
                "name": "offsetExists",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "property_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Checks if the property exists\n * @link http:\/\/www.php.net\/manual\/en\/solrobject.offsetexists.php\n * @param property_name string <p>\n * The name of the property.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "offsetUnset",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "property_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the value for the property\n * @link http:\/\/www.php.net\/manual\/en\/solrobject.offsetunset.php\n * @param property_name string <p>\n * The name of the property.\n * <\/p>\n * @return void Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "getPropertyNames",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array of all the names of the properties\n * @link http:\/\/www.php.net\/manual\/en\/solrobject.getpropertynames.php\n * @return array an array.\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrDocument",
        "fqn": "\\SolrDocument",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Constructor\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.construct.php\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.destruct.php\n * @return void\n *\/"
            },
            {
                "name": "__clone",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Creates a copy of a SolrDocument object\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.clone.php\n * @return void None.\n *\/"
            },
            {
                "name": "__set",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fieldValue",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds another field to the document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.set.php\n * @param fieldName string <p>\n * Name of the field.\n * <\/p>\n * @param fieldValue string <p>\n * Field value.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "__get",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Access the field as a property\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.get.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @return SolrDocumentField a SolrDocumentField instance.\n *\/"
            },
            {
                "name": "__isset",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Checks if a field exists\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.isset.php\n * @param fieldName string <p>\n * Name of the field.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "__unset",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes a field from the document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.unset.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "offsetSet",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fieldValue",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a field to the document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.offsetset.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @param fieldValue string <p>\n * The value for this field.\n * <\/p>\n * @return void Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "offsetGet",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Retrieves a field\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.offsetget.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @return SolrDocumentField a SolrDocumentField object.\n *\/"
            },
            {
                "name": "offsetExists",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Checks if a particular field exists\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.offsetexists.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "offsetUnset",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes a field\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.offsetunset.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @return void No return value.\n *\/"
            },
            {
                "name": "current",
                "type": 1,
                "byRef": true,
                "params": [

                ],
                "doc": "\/**\n * Retrieves the current field\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.current.php\n * @return SolrDocumentField the field\n *\/"
            },
            {
                "name": "key",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Retrieves the current key\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.key.php\n * @return string the current key.\n *\/"
            },
            {
                "name": "next",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Moves the internal pointer to the next field\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.next.php\n * @return void This method has no return value.\n *\/"
            },
            {
                "name": "rewind",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Resets the internal pointer to the beginning\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.rewind.php\n * @return void This method has no return value.\n *\/"
            },
            {
                "name": "valid",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Checks if the current position internally is still valid\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.valid.php\n * @return bool true on success and false if the current position is no longer valid.\n *\/"
            },
            {
                "name": "serialize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Used for custom serialization\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.serialize.php\n * @return string a string representing the serialized Solr document.\n *\/"
            },
            {
                "name": "unserialize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "serialized",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Custom serialization of SolrDocument objects\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.unserialize.php\n * @param serialized string <p>\n * An XML representation of the document.\n * <\/p>\n * @return void None.\n *\/"
            },
            {
                "name": "clear",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Drops all the fields in the document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.clear.php\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "reset",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * This is an alias to SolrDocument::clear()\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.reset.php\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "addField",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fieldValue",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a field to the document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.addfield.php\n * @param fieldName string <p>\n * The name of the field\n * <\/p>\n * @param fieldValue string <p>\n * The value of the field.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "getFieldNames",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array of fields names in the document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.getfieldnames.php\n * @return array an array containing the names of the fields in this document.\n *\/"
            },
            {
                "name": "getFieldCount",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the number of fields in this document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.getfieldcount.php\n * @return int an integer on success and false on failure.\n *\/"
            },
            {
                "name": "getField",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Retrieves a field by name\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.getfield.php\n * @param fieldName string <p>\n * Name of the field.\n * <\/p>\n * @return SolrDocumentField a SolrDocumentField on success and false on failure.\n *\/"
            },
            {
                "name": "toArray",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array representation of the document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.toarray.php\n * @return array an array representation of the document.\n *\/"
            },
            {
                "name": "fieldExists",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Checks if a field exists in the document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.fieldexists.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @return bool true if the field is present and false if it does not.\n *\/"
            },
            {
                "name": "deleteField",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes a field from the document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.deletefield.php\n * @param fieldName string <p>\n * Name of the field\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "sort",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sortOrderBy",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sortDirection",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sorts the fields in the document\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.sort.php\n * @param sortOrderBy int <p>\n * The sort criteria.\n * <\/p>\n * @param sortDirection int[optional] <p>\n * The sort direction.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "merge",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sourceDoc",
                        "type": "SolrDocument",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "overwrite",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Merges source to the current SolrDocument\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.merge.php\n * @param sourceDoc SolrDocument <p>\n * The source document.\n * <\/p>\n * @param overwrite bool[optional] <p>\n * If this is true then fields with the same name in the destination document will be overwritten.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "getInputDocument",
                "type": 1,
                "byRef": true,
                "params": [

                ],
                "doc": "\/**\n * Returns a SolrInputDocument equivalent of the object\n * @link http:\/\/www.php.net\/manual\/en\/solrdocument.getinputdocument.php\n * @return SolrInputDocument a SolrInputDocument on success and &null; on failure.\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "SORT_DEFAULT",
                "value": 1,
                "doc": null
            },
            {
                "name": "SORT_ASC",
                "value": 1,
                "doc": null
            },
            {
                "name": "SORT_DESC",
                "value": 2,
                "doc": null
            },
            {
                "name": "SORT_FIELD_NAME",
                "value": 1,
                "doc": null
            },
            {
                "name": "SORT_FIELD_VALUE_COUNT",
                "value": 2,
                "doc": null
            },
            {
                "name": "SORT_FIELD_BOOST_VALUE",
                "value": 4,
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrDocumentField",
        "fqn": "\\SolrDocumentField",
        "type": 32,
        "extends": "",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Constructor\n * @link http:\/\/www.php.net\/manual\/en\/solrdocumentfield.construct.php\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor\n * @link http:\/\/www.php.net\/manual\/en\/solrdocumentfield.destruct.php\n * @return void None.\n *\/"
            }
        ],
        "properties": [
            {
                "name": "name",
                "doc": null
            },
            {
                "name": "boost",
                "doc": null
            },
            {
                "name": "values",
                "doc": null
            }
        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrInputDocument",
        "fqn": "\\SolrInputDocument",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Constructor\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.construct.php\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.destruct.php\n * @return void None.\n *\/"
            },
            {
                "name": "__clone",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Creates a copy of a SolrDocument\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.clone.php\n * @return void Creates a new SolrInputDocument instance.\n *\/"
            },
            {
                "name": "__sleep",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__wakeup",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "setBoost",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "documentBoostValue",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the boost value for this document\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.setboost.php\n * @param documentBoostValue float <p>\n * The index-time boost value for this document.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "getBoost",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Retrieves the current boost value for the document\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.getboost.php\n * @return float the boost value on success and false on failure.\n *\/"
            },
            {
                "name": "clear",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Resets the input document\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.clear.php\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "reset",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * This is an alias of SolrInputDocument::clear\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.reset.php\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "addField",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fieldValue",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fieldBoostValue",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adds a field to the document\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.addfield.php\n * @param fieldName string <p>\n * The name of the field\n * <\/p>\n * @param fieldValue string <p>\n * The value for the field.\n * <\/p>\n * @param fieldBoostValue float[optional] <p>\n * The index time boost for the field. Though this cannot be negative, you can still pass values less than 1.0 but they must be greater than zero.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "getFieldBoost",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Retrieves the boost value for a particular field\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.getfieldboost.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @return float the boost value for the field or false if there was an error.\n *\/"
            },
            {
                "name": "setFieldBoost",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "fieldBoostValue",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the index-time boost value for a field\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.setfieldboost.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @param fieldBoostValue float <p>\n * The index time boost value.\n * <\/p>\n * @return bool\n *\/"
            },
            {
                "name": "getFieldNames",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array containing all the fields in the document\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.getfieldnames.php\n * @return array an array on success and false on failure.\n *\/"
            },
            {
                "name": "getFieldCount",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the number of fields in the document\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.getfieldcount.php\n * @return int an integer on success or false on failure.\n *\/"
            },
            {
                "name": "getField",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Retrieves a field by name\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.getfield.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @return SolrDocumentField a SolrDocumentField object on success and false on failure.\n *\/"
            },
            {
                "name": "toArray",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array representation of the input document\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.toarray.php\n * @return array an array containing the fields. It returns false on failure.\n *\/"
            },
            {
                "name": "fieldExists",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Checks if a field exists\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.fieldexists.php\n * @param fieldName string <p>\n * Name of the field.\n * <\/p>\n * @return bool true if the field was found and false if it was not found.\n *\/"
            },
            {
                "name": "deleteField",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "fieldName",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes a field from the document\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.deletefield.php\n * @param fieldName string <p>\n * The name of the field.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "sort",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sortOrderBy",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "sortDirection",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sorts the fields within the document\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.sort.php\n * @param sortOrderBy int <p>\n * The sort criteria\n * <\/p>\n * @param sortDirection int[optional] <p>\n * The sort direction\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "merge",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "sourceDoc",
                        "type": "SolrInputDocument",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "overwrite",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Merges one input document into another\n * @link http:\/\/www.php.net\/manual\/en\/solrinputdocument.merge.php\n * @param sourceDoc SolrInputDocument <p>\n * The source document.\n * <\/p>\n * @param overwrite bool[optional] <p>\n * If this is true it will replace matching fields in the destination document.\n * <\/p>\n * @return bool Returns true on success or false on failure. In the future, this will be modified to return the number of fields in the new document.\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "SORT_DEFAULT",
                "value": 1,
                "doc": null
            },
            {
                "name": "SORT_ASC",
                "value": 1,
                "doc": null
            },
            {
                "name": "SORT_DESC",
                "value": 2,
                "doc": null
            },
            {
                "name": "SORT_FIELD_NAME",
                "value": 1,
                "doc": null
            },
            {
                "name": "SORT_FIELD_VALUE_COUNT",
                "value": 2,
                "doc": null
            },
            {
                "name": "SORT_FIELD_BOOST_VALUE",
                "value": 4,
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrClient",
        "fqn": "\\SolrClient",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "clientOptions",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Constructor for the SolrClient object\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.construct.php\n * @param clientOptions\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor for SolrClient\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.destruct.php\n * @return void Destructor for SolrClient\n *\/"
            },
            {
                "name": "__sleep",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__wakeup",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__clone",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getOptions",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the client options set internally\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.getoptions.php\n * @return array an array containing all the options for the SolrClient object set internally.\n *\/"
            },
            {
                "name": "getDebug",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the debug data for the last connection attempt\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.getdebug.php\n * @return string a string on success and null if there is nothing to return.\n *\/"
            },
            {
                "name": "setServlet",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Changes the specified servlet type to a new value\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.setservlet.php\n * @param type int <p>One of the following :<\/p>\n * <p>\n * <\/p>\n * @param value string <p>\n * The new value for the servlet\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "query",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "query",
                        "type": "SolrParams",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sends a query to the server\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.query.php\n * @param query SolrParams <p>\n * A SolrParam object. It is recommended to use SolrQuery for advanced queries.\n * <\/p>\n * @return SolrQueryResponse a SolrQueryResponse object on success and throws a SolrClientException object on failure.\n *\/"
            },
            {
                "name": "addDocument",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "doc",
                        "type": "SolrInputDocument",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "allowDups",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "commitWithin",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adds a document to the index\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.adddocument.php\n * @param doc SolrInputDocument <p>\n * The SolrInputDocument instance.\n * <\/p>\n * @param allowDups bool[optional] <p>\n * If false duplicates will be overwritten.\n * <\/p>\n * @param commitWithin int[optional] <p>\n * Number of milliseconds within which to commit this document. Available since Solr 1.4\n * <\/p>\n * @return SolrUpdateResponse a SolrUpdateResponse object or throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "addDocuments",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "docs",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "allowDups",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "commitWithin",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adds a collection of SolrInputDocument instances to the index\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.adddocuments.php\n * @param docs array <p>\n * An array containing the collection of SolrInputDocument instances. This array must be an actual variable.\n * <\/p>\n * @param allowDups bool[optional] <p>\n * If false duplicates will be overwritten.\n * <\/p>\n * @param commitWithin int[optional] <p>\n * Number of milliseconds within which to commit the documents to the index. This was only available since Solr 1.4\n * <\/p>\n * @return void a SolrUpdateResponse object on success and throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "request",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "raw_request",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sends a raw update request\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.request.php\n * @param raw_request string <p>\n * An XML string with the raw request to the server.\n * <\/p>\n * @return void a SolrUpdateResponse on success. Throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "setResponseWriter",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "responseWriter",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the response writer used to prepare the response from Solr\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.setresponsewriter.php\n * @param responseWriter string <p>One of the following :<\/p>\n * <p>\n * <\/p>\n * @return void\n *\/"
            },
            {
                "name": "deleteById",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "id",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Delete by Id\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.deletebyid.php\n * @param id string <p>\n * The value of the uniqueKey field declared in the schema\n * <\/p>\n * @return SolrUpdateResponse a SolrUpdateResponse on success and throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "deleteByIds",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "ids",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Deletes by Ids\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.deletebyids.php\n * @param ids array <p>\n * An array of IDs representing the uniqueKey field declared in the schema for each document to be deleted. This must be an actual php variable.\n * <\/p>\n * @return SolrUpdateResponse a SolrUpdateResponse on success and throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "deleteByQuery",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "query",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Deletes all documents matching the given query\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.deletebyquery.php\n * @param query string <p>\n * The query\n * <\/p>\n * @return SolrUpdateResponse a SolrUpdateResponse on success and throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "deleteByQueries",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "queries",
                        "type": "array",
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes all documents matching any of the queries\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.deletebyqueries.php\n * @param queries array <p>\n * The array of queries. This must be an actual php variable.\n * <\/p>\n * @return SolrUpdateResponse a SolrUpdateResponse on success and throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "commit",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "maxSegments",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "waitFlush",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "waitSearcher",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Finalizes all add\/deletes made to the index\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.commit.php\n * @param maxSegments int[optional] <p>\n * Optimizes down to at most this number of segments. Since Solr 1.3\n * <\/p>\n * @param waitFlush bool[optional] <p>\n * Block until index changes are flushed to disk.\n * <\/p>\n * @param waitSearcher bool[optional] <p>\n * Block until a new searcher is opened and registered as the main query searcher, making the changes visible.\n * <\/p>\n * @return SolrUpdateResponse a SolrUpdateResponse object on success or throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "optimize",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "maxSegments",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "waitFlush",
                        "type": null,
                        "byRef": false,
                        "default": null
                    },
                    {
                        "name": "waitSearcher",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Defragments the index\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.optimize.php\n * @param maxSegments int[optional] <p>\n * Optimizes down to at most this number of segments. Since Solr 1.3\n * <\/p>\n * @param waitFlush bool[optional] <p>\n * Block until index changes are flushed to disk.\n * <\/p>\n * @param waitSearcher bool[optional] <p>\n * Block until a new searcher is opened and registered as the main query searcher, making the changes visible.\n * <\/p>\n * @return SolrUpdateResponse a SolrUpdateResponse on success or throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "rollback",
                "type": 1,
                "byRef": true,
                "params": [

                ],
                "doc": "\/**\n * Rollbacks all add\/deletes made to the index since the last commit\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.rollback.php\n * @return SolrUpdateResponse a SolrUpdateResponse on success or throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "ping",
                "type": 1,
                "byRef": true,
                "params": [

                ],
                "doc": "\/**\n * Checks if Solr server is still up\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.ping.php\n * @return SolrPingResponse a SolrPingResponse object on success and throws a SolrClientException on failure.\n *\/"
            },
            {
                "name": "threads",
                "type": 1,
                "byRef": true,
                "params": [

                ],
                "doc": "\/**\n * Checks the threads status\n * @link http:\/\/www.php.net\/manual\/en\/solrclient.threads.php\n * @return void a SolrGenericResponse object.\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "SEARCH_SERVLET_TYPE",
                "value": 1,
                "doc": null
            },
            {
                "name": "UPDATE_SERVLET_TYPE",
                "value": 2,
                "doc": null
            },
            {
                "name": "THREADS_SERVLET_TYPE",
                "value": 4,
                "doc": null
            },
            {
                "name": "PING_SERVLET_TYPE",
                "value": 8,
                "doc": null
            },
            {
                "name": "TERMS_SERVLET_TYPE",
                "value": 16,
                "doc": null
            },
            {
                "name": "DEFAULT_SEARCH_SERVLET",
                "value": "select",
                "doc": null
            },
            {
                "name": "DEFAULT_UPDATE_SERVLET",
                "value": "update",
                "doc": null
            },
            {
                "name": "DEFAULT_THREADS_SERVLET",
                "value": "admin\/threads",
                "doc": null
            },
            {
                "name": "DEFAULT_PING_SERVLET",
                "value": "admin\/ping",
                "doc": null
            },
            {
                "name": "DEFAULT_TERMS_SERVLET",
                "value": "terms",
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrParams",
        "fqn": "\\SolrParams",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "setParam",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the parameter to the specified value\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.setparam.php\n * @param name string <p>\n * Name of the parameter\n * <\/p>\n * @param value string <p>\n * Value of the parameter\n * <\/p>\n * @return SolrParams a SolrParam object on success and false on value.\n *\/"
            },
            {
                "name": "addParam",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a parameter to the object\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.addparam.php\n * @param name string <p>\n * Name of parameter\n * <\/p>\n * @param value string <p>\n * Value of parameter\n * <\/p>\n * @return SolrParams a SolrParam object on success and false on failure.\n *\/"
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "toString",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "url_encode",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns all the name-value pair parameters in the object\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.tostring.php\n * @param url_encode bool[optional] <p>\n * Whether to return URL-encoded values\n * <\/p>\n * @return string a string on success and false on failure.\n *\/"
            },
            {
                "name": "getParams",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array of non URL-encoded parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.getparams.php\n * @return array an array of non URL-encoded parameters\n *\/"
            },
            {
                "name": "getParam",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "param_name",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns a parameter value\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.getparam.php\n * @param param_name string[optional] <p>\n * The name of the parameter\n * <\/p>\n * @return mixed a string or an array depending on the type of the parameter\n *\/"
            },
            {
                "name": "getPreparedParams",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array of URL-encoded parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.getpreparedparams.php\n * @return array an array on URL-encoded parameters\n *\/"
            },
            {
                "name": "__clone",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "serialize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Used for custom serialization\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.serialize.php\n * @return string Used for custom serialization\n *\/"
            },
            {
                "name": "unserialize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "serialized",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Used for custom serialization\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.unserialize.php\n * @param serialized string <p>\n * The serialized representation of the object\n * <\/p>\n * @return void None\n *\/"
            },
            {
                "name": "add",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * This is an alias for SolrParams::addParam\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.add.php\n * @param name string <p>\n * The name of the parameter\n * <\/p>\n * @param value string <p>\n * The value of the parameter\n * <\/p>\n * @return SolrParams a SolrParams instance on success\n *\/"
            },
            {
                "name": "set",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * An alias of SolrParams::setParam\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.set.php\n * @param name string <p>\n * Then name of the parameter\n * <\/p>\n * @param value string <p>\n * The parameter value\n * <\/p>\n * @return void an instance of the SolrParams object on success\n *\/"
            },
            {
                "name": "get",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "param_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * This is an alias for SolrParams::getParam\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.get.php\n * @param param_name string <p>\n * Then name of the parameter\n * <\/p>\n * @return mixed an array or string depending on the type of parameter\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrModifiableParams",
        "fqn": "\\SolrModifiableParams",
        "type": 0,
        "extends": "SolrParams",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Constructor\n * @link http:\/\/www.php.net\/manual\/en\/solrmodifiableparams.construct.php\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor\n * @link http:\/\/www.php.net\/manual\/en\/solrmodifiableparams.destruct.php\n * @return void None\n *\/"
            },
            {
                "name": "setParam",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the parameter to the specified value\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.setparam.php\n * @param name string <p>\n * Name of the parameter\n * <\/p>\n * @param value string <p>\n * Value of the parameter\n * <\/p>\n * @return SolrParams a SolrParam object on success and false on value.\n *\/"
            },
            {
                "name": "addParam",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a parameter to the object\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.addparam.php\n * @param name string <p>\n * Name of parameter\n * <\/p>\n * @param value string <p>\n * Value of parameter\n * <\/p>\n * @return SolrParams a SolrParam object on success and false on failure.\n *\/"
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "toString",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "url_encode",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns all the name-value pair parameters in the object\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.tostring.php\n * @param url_encode bool[optional] <p>\n * Whether to return URL-encoded values\n * <\/p>\n * @return string a string on success and false on failure.\n *\/"
            },
            {
                "name": "getParams",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array of non URL-encoded parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.getparams.php\n * @return array an array of non URL-encoded parameters\n *\/"
            },
            {
                "name": "getParam",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "param_name",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns a parameter value\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.getparam.php\n * @param param_name string[optional] <p>\n * The name of the parameter\n * <\/p>\n * @return mixed a string or an array depending on the type of the parameter\n *\/"
            },
            {
                "name": "getPreparedParams",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array of URL-encoded parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.getpreparedparams.php\n * @return array an array on URL-encoded parameters\n *\/"
            },
            {
                "name": "__clone",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "serialize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Used for custom serialization\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.serialize.php\n * @return string Used for custom serialization\n *\/"
            },
            {
                "name": "unserialize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "serialized",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Used for custom serialization\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.unserialize.php\n * @param serialized string <p>\n * The serialized representation of the object\n * <\/p>\n * @return void None\n *\/"
            },
            {
                "name": "add",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * This is an alias for SolrParams::addParam\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.add.php\n * @param name string <p>\n * The name of the parameter\n * <\/p>\n * @param value string <p>\n * The value of the parameter\n * <\/p>\n * @return SolrParams a SolrParams instance on success\n *\/"
            },
            {
                "name": "set",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * An alias of SolrParams::setParam\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.set.php\n * @param name string <p>\n * Then name of the parameter\n * <\/p>\n * @param value string <p>\n * The parameter value\n * <\/p>\n * @return void an instance of the SolrParams object on success\n *\/"
            },
            {
                "name": "get",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "param_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * This is an alias for SolrParams::getParam\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.get.php\n * @param param_name string <p>\n * Then name of the parameter\n * <\/p>\n * @return mixed an array or string depending on the type of parameter\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrQuery",
        "fqn": "\\SolrQuery",
        "type": 0,
        "extends": "SolrModifiableParams",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "q",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Constructor\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.construct.php\n * @param q[optional]\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.destruct.php\n * @return void None.\n *\/"
            },
            {
                "name": "setQuery",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "query",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the search query\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setquery.php\n * @param query string <p>\n * The search query\n * <\/p>\n * @return SolrQuery the current SolrQuery object\n *\/"
            },
            {
                "name": "getQuery",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the main query\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getquery.php\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setStart",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "start",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the number of rows to skip\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setstart.php\n * @param start int <p>\n * The number of rows to skip.\n * <\/p>\n * @return SolrQuery the current SolrQuery object.\n *\/"
            },
            {
                "name": "getStart",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the offset in the complete result set\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getstart.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setRows",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "rows",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the maximum number of rows to return in the result\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setrows.php\n * @param rows int <p>\n * The maximum number of rows to return\n * <\/p>\n * @return SolrQuery the current SolrQuery object.\n *\/"
            },
            {
                "name": "getRows",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the maximum number of documents\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getrows.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "addField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies which fields to return in the result\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addfield.php\n * @param field string <p>\n * The name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object\n *\/"
            },
            {
                "name": "removeField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes a field from the list of fields\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removefield.php\n * @param field string <p>\n * Name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFields",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the list of fields that will be returned in the response\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfields.php\n * @return array an array on success and &null; if not set.\n *\/"
            },
            {
                "name": "addSortField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "order",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Used to control how the results should be sorted\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addsortfield.php\n * @param field string <p>\n * The name of the field\n * <\/p>\n * @param order int[optional] <p>\n * The sort direction. This should be either SolrQuery::ORDER_ASC or SolrQuery::ORDER_DESC.\n * <\/p>\n * @return SolrQuery the current SolrQuery object.\n *\/"
            },
            {
                "name": "removeSortField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes one of the sort fields\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removesortfield.php\n * @param field string <p>\n * The name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getSortFields",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns all the sort fields\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getsortfields.php\n * @return array an array on success and &null; if none of the parameters was set.\n *\/"
            },
            {
                "name": "addFilterQuery",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "fq",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies a filter query\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addfilterquery.php\n * @param fq string <p>\n * The filter query\n * <\/p>\n * @return SolrQuery the current SolrQuery object.\n *\/"
            },
            {
                "name": "removeFilterQuery",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "fq",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes a filter query\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removefilterquery.php\n * @param fq string <p>\n * The filter query to remove\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFilterQueries",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array of filter queries\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfilterqueries.php\n * @return array an array on success and &null; if not set.\n *\/"
            },
            {
                "name": "setShowDebugInfo",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Flag to show debug information\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setshowdebuginfo.php\n * @param flag bool <p>\n * Whether to show debug info. true or false\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "setExplainOther",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "query",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the explainOther common query parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setexplainother.php\n * @param query string <p>\n * The Lucene query to identify a set of documents\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "setTimeAllowed",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "timeAllowed",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * The time allowed for search to finish\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settimeallowed.php\n * @param timeAllowed int <p>\n * The time allowed for a search to finish.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTimeAllowed",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the time in milliseconds allowed for the query to finish\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettimeallowed.php\n * @return int and integer on success and &null; if it is not set.\n *\/"
            },
            {
                "name": "setOmitHeader",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Exclude the header from the returned results\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setomitheader.php\n * @param flag bool <p>\n * true excludes the header from the result.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "setEchoHandler",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Toggles the echoHandler parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setechohandler.php\n * @param flag bool <p>\n * true or false\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "setEchoParams",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "type",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Determines what kind of parameters to include in the response\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setechoparams.php\n * @param type string <p>\n * The type of parameters to include\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "setFacet",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Maps to the facet parameter. Enables or disables facetting\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacet.php\n * @param flag bool\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacet",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the value of the facet parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacet.php\n * @return bool a boolean on success and &null; if not set\n *\/"
            },
            {
                "name": "addFacetField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds another field to the facet\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addfacetfield.php\n * @param field string <p>\n * The name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "removeFacetField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes one of the facet.date parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removefacetfield.php\n * @param field string <p>\n * The name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetFields",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns all the facet fields\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetfields.php\n * @return array an array of all the fields and &null; if none was set\n *\/"
            },
            {
                "name": "addFacetQuery",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "facetQuery",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a facet query\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addfacetquery.php\n * @param facetQuery string <p>\n * The facet query\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "removeFacetQuery",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes one of the facet.query parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removefacetquery.php\n * @param value string <p>\n * The value\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetQueries",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns all the facet queries\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetqueries.php\n * @return array an array on success and &null; if not set.\n *\/"
            },
            {
                "name": "setFacetPrefix",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "prefix",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Specifies a string prefix with which to limits the terms on which to facet\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetprefix.php\n * @param prefix string <p>\n * The prefix string\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetPrefix",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the facet prefix\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetprefix.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setFacetSort",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "facetSort",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Determines the ordering of the facet field constraints\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetsort.php\n * @param facetSort int <p>\n * Use SolrQuery::FACET_SORT_INDEX for sorting by index order or SolrQuery::FACET_SORT_COUNT for sorting by count.\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetSort",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the facet sort type\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetsort.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return int an integer (SolrQuery::FACET_SORT_INDEX or SolrQuery::FACET_SORT_COUNT) on success or &null; if not set.\n *\/"
            },
            {
                "name": "setFacetLimit",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "limit",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Maps to facet.limit\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetlimit.php\n * @param limit int <p>\n * The maximum number of constraint counts\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetLimit",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the maximum number of constraint counts that should be returned for the facet fields\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetlimit.php\n * @param field_override string[optional] <p>\n * The name of the field to override for\n * <\/p>\n * @return int an integer on success and &null; if not set\n *\/"
            },
            {
                "name": "setFacetOffset",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "offset",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the offset into the list of constraints to allow for pagination\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetoffset.php\n * @param offset int <p>\n * The offset\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetOffset",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns an offset into the list of constraints to be used for pagination\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetoffset.php\n * @param field_override string[optional] <p>\n * The name of the field to override for.\n * <\/p>\n * @return int an integer on success and &null; if not set\n *\/"
            },
            {
                "name": "setFacetMinCount",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "mincount",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Maps to facet.mincount\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetmincount.php\n * @param mincount int <p>\n * The minimum count\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetMinCount",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the minimum counts for facet fields should be included in the response\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetmincount.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return int an integer on success and &null; if not set\n *\/"
            },
            {
                "name": "setFacetMissing",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Maps to facet.missing\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetmissing.php\n * @param flag bool <p>\n * true turns this feature on. false disables it.\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetMissing",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the current state of the facet.missing parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetmissing.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return bool a boolean on success and &null; if not set\n *\/"
            },
            {
                "name": "setFacetMethod",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "method",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Specifies the type of algorithm to use when faceting a field\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetmethod.php\n * @param method string <p>\n * The method to use.\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetMethod",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the value of the facet.method parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetmethod.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set\n *\/"
            },
            {
                "name": "setFacetEnumCacheMinDefaultFrequency",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "frequency",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the minimum document frequency used for determining term count\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetenumcachemindefaultfrequency.php\n * @param frequency int\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "addFacetDateField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "dateField",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Maps to facet.date\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addfacetdatefield.php\n * @param dateField string <p>\n * The name of the date field.\n * <\/p>\n * @return SolrQuery a SolrQuery object.\n *\/"
            },
            {
                "name": "removeFacetDateField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes one of the facet date fields\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removefacetdatefield.php\n * @param field string <p>\n * The name of the date field to remove\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetDateFields",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns all the facet.date fields\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetdatefields.php\n * @return array all the facet.date fields as an array or &null; if none was set\n *\/"
            },
            {
                "name": "setFacetDateStart",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Maps to facet.date.start\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetdatestart.php\n * @param value string <p>\n * See facet.date.start\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetDateStart",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the  lower bound for the first date range for all date faceting on this field\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetdatestart.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set\n *\/"
            },
            {
                "name": "setFacetDateEnd",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Maps to facet.date.end\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetdateend.php\n * @param value string <p>\n * See facet.date.end\n * <\/p>\n * @param field_override string[optional] <p>\n * Name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetDateEnd",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the value for the facet.date.end parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetdateend.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set\n *\/"
            },
            {
                "name": "setFacetDateGap",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Maps to facet.date.gap\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetdategap.php\n * @param value string <p>\n * See facet.date.gap\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetDateGap",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the value of the facet.date.gap parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetdategap.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set\n *\/"
            },
            {
                "name": "setFacetDateHardEnd",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Maps to facet.date.hardend\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setfacetdatehardend.php\n * @param value bool <p>\n * See facet.date.hardend\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetDateHardEnd",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the value of the facet.date.hardend parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetdatehardend.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set\n *\/"
            },
            {
                "name": "addFacetDateOther",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Adds another facet.date.other parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addfacetdateother.php\n * @param value string <p>\n * The value to use.\n * <\/p>\n * @param field_override string[optional] <p>\n * The field name for the override.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "removeFacetDateOther",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Removes one of the facet.date.other parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removefacetdateother.php\n * @param value string <p>\n * The value\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getFacetDateOther",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the value for the facet.date.other parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getfacetdateother.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return array a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlight",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Enables or disables highlighting\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlight.php\n * @param flag bool <p>\n * Enable or disable highlighting\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlight",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the state of the hl parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlight.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "addHighlightField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Maps to hl.fl\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addhighlightfield.php\n * @param field string <p>\n * Name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "removeHighlightField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes one of the fields used for highlighting\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removehighlightfield.php\n * @param field string <p>\n * The name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightFields",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns all the fields that Solr should generate highlighted snippets for\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightfields.php\n * @return array an array on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightSnippets",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the maximum number of highlighted snippets to generate per field\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightsnippets.php\n * @param value int <p>\n * The maximum number of highlighted snippets to generate per field\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightSnippets",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the maximum number of highlighted snippets to generate per field\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightsnippets.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightFragsize",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "size",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * The size of fragments to consider for highlighting\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightfragsize.php\n * @param size int <p>\n * The size, in characters, of fragments to consider for highlighting\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightFragsize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the number of characters of fragments to consider for highlighting\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightfragsize.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return int an integer on success or &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightMergeContiguous",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Whether or not to collapse contiguous fragments into a single fragment\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightmergecontiguous.php\n * @param flag bool\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightMergeContiguous",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns whether or not the collapse contiguous fragments into a single fragment\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightmergecontiguous.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightRequireFieldMatch",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Require field matching during highlighting\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightrequirefieldmatch.php\n * @param flag bool <p>\n * true or false\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightRequireFieldMatch",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns if a field will only be highlighted if the query matched in this particular field\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightrequirefieldmatch.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightMaxAnalyzedChars",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the number of characters into a document to look for suitable snippets\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightmaxanalyzedchars.php\n * @param value int <p>\n * The number of characters into a document to look for suitable snippets\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightMaxAnalyzedChars",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the maximum number of characters into a document to look for suitable snippets\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightmaxanalyzedchars.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightAlternateField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Specifies the backup field to use\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightalternatefield.php\n * @param field string <p>\n * The name of the backup field\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field we are overriding this setting for.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightAlternateField",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the highlight field to use as backup or default\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightalternatefield.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightMaxAlternateFieldLength",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "fieldLength",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the maximum number of characters of the field to return\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightmaxalternatefieldlength.php\n * @param fieldLength int <p>\n * The length of the field\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightMaxAlternateFieldLength",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the maximum number of characters of the field to return\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightmaxalternatefieldlength.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightFormatter",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "formatter",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Specify a formatter for the highlight output\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightformatter.php\n * @param formatter string <p>\n * Currently the only legal value is \"simple\"\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery\n *\/"
            },
            {
                "name": "getHighlightFormatter",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the formatter for the highlighted output\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightformatter.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightSimplePre",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "simplePre",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the text which appears before a highlighted term\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightsimplepre.php\n * @param simplePre string <p>\n * The text which appears before a highlighted term\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightSimplePre",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the text which appears before a highlighted term\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightsimplepre.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightSimplePost",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "simplePost",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the text which appears after a highlighted term\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightsimplepost.php\n * @param simplePost string <p>\n * Sets the text which appears after a highlighted term\n * <\/p>\n * <p> ]]><\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery\n *\/"
            },
            {
                "name": "getHighlightSimplePost",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the text which appears after a highlighted term\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightsimplepost.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightFragmenter",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "fragmenter",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets a text snippet generator for highlighted text\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightfragmenter.php\n * @param fragmenter string <p>\n * The standard fragmenter is gap. Another option is regex, which tries to create fragments that resembles a certain regular expression\n * <\/p>\n * @param field_override string[optional] <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightFragmenter",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "field_override",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns the text snippet generator for highlighted text\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightfragmenter.php\n * @param field_override string[optional] <p>\n * The name of the field\n * <\/p>\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightUsePhraseHighlighter",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Whether to highlight phrase terms only when they appear within the query phrase\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightusephrasehighlighter.php\n * @param flag bool\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightUsePhraseHighlighter",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the state of the hl.usePhraseHighlighter parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightusephrasehighlighter.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightHighlightMultiTerm",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Use SpanScorer to highlight phrase terms\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlighthighlightmultiterm.php\n * @param flag bool <p>\n * Whether or not to use SpanScorer to highlight phrase terms only when they appear within the query phrase in the document.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightHighlightMultiTerm",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns whether or not to enable highlighting for range\/wildcard\/fuzzy\/prefix queries\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlighthighlightmultiterm.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightRegexSlop",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "factor",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the factor by which the regex fragmenter can stray from the ideal fragment size\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightregexslop.php\n * @param factor float <p>\n * The factor by which the regex fragmenter can stray from the ideal fragment size\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightRegexSlop",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the deviation factor from the ideal fragment size\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightregexslop.php\n * @return float a double on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightRegexPattern",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specify the regular expression for fragmenting\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightregexpattern.php\n * @param value string <p>\n * The regular expression for fragmenting. This could be used to extract sentences\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightRegexPattern",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the regular expression for fragmenting\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightregexpattern.php\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setHighlightRegexMaxAnalyzedChars",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "maxAnalyzedChars",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specify the maximum number of characters to analyze\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.sethighlightregexmaxanalyzedchars.php\n * @param maxAnalyzedChars int <p>\n * The maximum number of characters to analyze from a field when using the regex fragmenter\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getHighlightRegexMaxAnalyzedChars",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the maximum number of characters from a field when using the regex fragmenter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gethighlightregexmaxanalyzedchars.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setStats",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Enables or disables the Stats component\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setstats.php\n * @param flag bool <p>\n * true turns on the stats component and false disables it.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getStats",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns whether or not stats is enabled\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getstats.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "addStatsField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Maps to stats.field parameter\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addstatsfield.php\n * @param field string <p>\n * The name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "removeStatsField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes one of the stats.field parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removestatsfield.php\n * @param field string <p>\n * The name of the field.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getStatsFields",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns all the statistics fields\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getstatsfields.php\n * @return array an array on success and &null; if not set.\n *\/"
            },
            {
                "name": "addStatsFacet",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Requests a return of sub results for values within the given facet\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addstatsfacet.php\n * @param field string <p>\n * The name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "removeStatsFacet",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes one of the stats.facet parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removestatsfacet.php\n * @param value string <p>\n * The value\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getStatsFacets",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns all the stats facets that were set\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getstatsfacets.php\n * @return array an array on success and &null; if not set.\n *\/"
            },
            {
                "name": "setMlt",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Enables or disables moreLikeThis\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setmlt.php\n * @param flag bool <p>\n * true enables it and false turns it off.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMlt",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns whether or not MoreLikeThis results should be enabled\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmlt.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "setMltCount",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "count",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Set the number of similar documents to return for each result\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setmltcount.php\n * @param count int <p>\n * The number of similar documents to return for each result\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMltCount",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the number of similar documents to return for each result\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmltcount.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "addMltField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets a field to use for similarity\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addmltfield.php\n * @param field string <p>\n * The name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "removeMltField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes one of the moreLikeThis fields\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removemltfield.php\n * @param field string <p>\n * Name of the field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMltFields",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns all the fields to use for similarity\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmltfields.php\n * @return array an array on success and &null; if not set.\n *\/"
            },
            {
                "name": "addMltQueryField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "field",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "boost",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Maps to mlt.qf\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.addmltqueryfield.php\n * @param field string <p>\n * The name of the field\n * <\/p>\n * @param boost float <p>\n * Its boost value\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "removeMltQueryField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "queryField",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Removes one of the moreLikeThis query fields\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.removemltqueryfield.php\n * @param queryField string <p>\n * The query field\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMltQueryFields",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the query fields and their boosts\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmltqueryfields.php\n * @return array an array on success and &null; if not set.\n *\/"
            },
            {
                "name": "setMltMinTermFrequency",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "minTermFrequency",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the frequency below which terms will be ignored in the source docs\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setmltmintermfrequency.php\n * @param minTermFrequency int <p>\n * The frequency below which terms will be ignored in the source docs\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMltMinTermFrequency",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the frequency below which terms will be ignored in the source document\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmltmintermfrequency.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setMltMinDocFrequency",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "minDocFrequency",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the mltMinDoc frequency\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setmltmindocfrequency.php\n * @param minDocFrequency int <p>\n * Sets the frequency at which words will be ignored which do not occur in at least this many docs.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMltMinDocFrequency",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the treshold frequency at which words will be ignored which do not occur in at least this many docs\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmltmindocfrequency.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setMltMinWordLength",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "minWordLength",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the minimum word length\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setmltminwordlength.php\n * @param minWordLength int <p>\n * The minimum word length below which words will be ignored\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMltMinWordLength",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the minimum word length below which words will be ignored\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmltminwordlength.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setMltMaxWordLength",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "maxWordLength",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the maximum word length\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setmltmaxwordlength.php\n * @param maxWordLength int <p>\n * The maximum word length above which words will be ignored\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMltMaxWordLength",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the maximum word length above which words will be ignored\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmltmaxwordlength.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setMltMaxNumTokens",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the maximum number of tokens to parse\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setmltmaxnumtokens.php\n * @param value int <p>\n * The maximum number of tokens to parse\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMltMaxNumTokens",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the maximum number of tokens to parse in each document field that is not stored with TermVector support\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmltmaxnumtokens.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setMltMaxNumQueryTerms",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the maximum number of query terms included\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setmltmaxnumqueryterms.php\n * @param value int <p>\n * The maximum number of query terms that will be included in any generated query\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMltMaxNumQueryTerms",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the maximum number of query terms that will be included in any generated query\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmltmaxnumqueryterms.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setMltBoost",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Set if the query will be boosted by the interesting term relevance\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setmltboost.php\n * @param flag bool\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getMltBoost",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns whether or not the query will be boosted by the interesting term relevance\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getmltboost.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTerms",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Enables or disables the TermsComponent\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.setterms.php\n * @param flag bool <p>\n * true enables it. false turns it off\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTerms",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns whether or not the TermsComponent is enabled\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.getterms.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsField",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "fieldname",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the name of the field to get the Terms from\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermsfield.php\n * @param fieldname string <p>\n * The field name\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsField",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the field from which the terms are retrieved\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermsfield.php\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsLowerBound",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "lowerBound",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies the Term to start from\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermslowerbound.php\n * @param lowerBound string <p>\n * The lower bound Term\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsLowerBound",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the term to start at\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermslowerbound.php\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsUpperBound",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "upperBound",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the term to stop at\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermsupperbound.php\n * @param upperBound string <p>\n * The term to stop at\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsUpperBound",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the term to stop at\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermsupperbound.php\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsIncludeLowerBound",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Include the lower bound term in the result set\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermsincludelowerbound.php\n * @param flag bool <p>\n * Include the lower bound term in the result set\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsIncludeLowerBound",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns whether or not to include the lower bound in the result set\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermsincludelowerbound.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsIncludeUpperBound",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Include the upper bound term in the result set\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermsincludeupperbound.php\n * @param flag bool <p>\n * true or false\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsIncludeUpperBound",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns whether or not to include the upper bound term in the result set\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermsincludeupperbound.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsMinCount",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "frequency",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the minimum document frequency\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermsmincount.php\n * @param frequency int <p>\n * The minimum frequency\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsMinCount",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the minimum document frequency to return in order to be included\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermsmincount.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsMaxCount",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "frequency",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the maximum document frequency\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermsmaxcount.php\n * @param frequency int <p>\n * The maximum document frequency.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsMaxCount",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the maximum document frequency\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermsmaxcount.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsPrefix",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "prefix",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Restrict matches to terms that start with the prefix\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermsprefix.php\n * @param prefix string <p>\n * Restrict matches to terms that start with the prefix\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsPrefix",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the term prefix\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermsprefix.php\n * @return string a string on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsLimit",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "limit",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the maximum number of terms to return\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermslimit.php\n * @param limit int <p>\n * The maximum number of terms to return. All the terms will be returned if the limit is negative.\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsLimit",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the maximum number of terms Solr should return\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermslimit.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsReturnRaw",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "flag",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Return the raw characters of the indexed term\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermsreturnraw.php\n * @param flag bool\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsReturnRaw",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Whether or not to return raw characters\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermsreturnraw.php\n * @return bool a boolean on success and &null; if not set.\n *\/"
            },
            {
                "name": "setTermsSort",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "sortType",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Specifies how to sort the returned terms\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.settermssort.php\n * @param sortType int <p>\n * SolrQuery::TERMS_SORT_INDEX or SolrQuery::TERMS_SORT_COUNT\n * <\/p>\n * @return SolrQuery the current SolrQuery object, if the return value is used.\n *\/"
            },
            {
                "name": "getTermsSort",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an integer indicating how terms are sorted\n * @link http:\/\/www.php.net\/manual\/en\/solrquery.gettermssort.php\n * @return int an integer on success and &null; if not set.\n *\/"
            },
            {
                "name": "setParam",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Sets the parameter to the specified value\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.setparam.php\n * @param name string <p>\n * Name of the parameter\n * <\/p>\n * @param value string <p>\n * Value of the parameter\n * <\/p>\n * @return SolrParams a SolrParam object on success and false on value.\n *\/"
            },
            {
                "name": "addParam",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Adds a parameter to the object\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.addparam.php\n * @param name string <p>\n * Name of parameter\n * <\/p>\n * @param value string <p>\n * Value of parameter\n * <\/p>\n * @return SolrParams a SolrParam object on success and false on failure.\n *\/"
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "toString",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "url_encode",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns all the name-value pair parameters in the object\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.tostring.php\n * @param url_encode bool[optional] <p>\n * Whether to return URL-encoded values\n * <\/p>\n * @return string a string on success and false on failure.\n *\/"
            },
            {
                "name": "getParams",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array of non URL-encoded parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.getparams.php\n * @return array an array of non URL-encoded parameters\n *\/"
            },
            {
                "name": "getParam",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "param_name",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Returns a parameter value\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.getparam.php\n * @param param_name string[optional] <p>\n * The name of the parameter\n * <\/p>\n * @return mixed a string or an array depending on the type of the parameter\n *\/"
            },
            {
                "name": "getPreparedParams",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns an array of URL-encoded parameters\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.getpreparedparams.php\n * @return array an array on URL-encoded parameters\n *\/"
            },
            {
                "name": "__clone",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "serialize",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Used for custom serialization\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.serialize.php\n * @return string Used for custom serialization\n *\/"
            },
            {
                "name": "unserialize",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "serialized",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Used for custom serialization\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.unserialize.php\n * @param serialized string <p>\n * The serialized representation of the object\n * <\/p>\n * @return void None\n *\/"
            },
            {
                "name": "add",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * This is an alias for SolrParams::addParam\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.add.php\n * @param name string <p>\n * The name of the parameter\n * <\/p>\n * @param value string <p>\n * The value of the parameter\n * <\/p>\n * @return SolrParams a SolrParams instance on success\n *\/"
            },
            {
                "name": "set",
                "type": 1,
                "byRef": true,
                "params": [
                    {
                        "name": "name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "value",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * An alias of SolrParams::setParam\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.set.php\n * @param name string <p>\n * Then name of the parameter\n * <\/p>\n * @param value string <p>\n * The parameter value\n * <\/p>\n * @return void an instance of the SolrParams object on success\n *\/"
            },
            {
                "name": "get",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "param_name",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * This is an alias for SolrParams::getParam\n * @link http:\/\/www.php.net\/manual\/en\/solrparams.get.php\n * @param param_name string <p>\n * Then name of the parameter\n * <\/p>\n * @return mixed an array or string depending on the type of parameter\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "ORDER_ASC",
                "value": 0,
                "doc": null
            },
            {
                "name": "ORDER_DESC",
                "value": 1,
                "doc": null
            },
            {
                "name": "FACET_SORT_INDEX",
                "value": 0,
                "doc": null
            },
            {
                "name": "FACET_SORT_COUNT",
                "value": 1,
                "doc": null
            },
            {
                "name": "TERMS_SORT_INDEX",
                "value": 0,
                "doc": null
            },
            {
                "name": "TERMS_SORT_COUNT",
                "value": 1,
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrResponse",
        "fqn": "\\SolrResponse",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "getHttpStatus",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the HTTP status of the response\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.gethttpstatus.php\n * @return int the HTTP status of the response.\n *\/"
            },
            {
                "name": "getHttpStatusMessage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns more details on the HTTP status\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.gethttpstatusmessage.php\n * @return string more details on the HTTP status\n *\/"
            },
            {
                "name": "success",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Was the request a success\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.success.php\n * @return bool true if it was successful and false if it was not.\n *\/"
            },
            {
                "name": "getRequestUrl",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the full URL the request was sent to\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrequesturl.php\n * @return string the full URL the request was sent to\n *\/"
            },
            {
                "name": "getRawRequestHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw request headers sent to the Solr server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawrequestheaders.php\n * @return string the raw request headers sent to the Solr server\n *\/"
            },
            {
                "name": "getRawRequest",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw request sent to the Solr server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawrequest.php\n * @return string the raw request sent to the Solr server\n *\/"
            },
            {
                "name": "getRawResponseHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw response headers from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawresponseheaders.php\n * @return string the raw response headers from the server.\n *\/"
            },
            {
                "name": "getRawResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw response from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawresponse.php\n * @return string the raw response from the server.\n *\/"
            },
            {
                "name": "getDigestedResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the XML response as serialized PHP data\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getdigestedresponse.php\n * @return string the XML response as serialized PHP data\n *\/"
            },
            {
                "name": "setParseMode",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "parser_mode",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the parse mode\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.setparsemode.php\n * @param parser_mode int[optional] <p>\n * SolrResponse::PARSE_SOLR_DOC parses documents in SolrDocument instances. SolrResponse::PARSE_SOLR_OBJ parses document into SolrObjects.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "getResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns a SolrObject representing the XML response from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getresponse.php\n * @return SolrObject a SolrObject representing the XML response from the server\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "PARSE_SOLR_OBJ",
                "value": 0,
                "doc": null
            },
            {
                "name": "PARSE_SOLR_DOC",
                "value": 1,
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrQueryResponse",
        "fqn": "\\SolrQueryResponse",
        "type": 0,
        "extends": "SolrResponse",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Constructor\n * @link http:\/\/www.php.net\/manual\/en\/solrqueryresponse.construct.php\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor\n * @link http:\/\/www.php.net\/manual\/en\/solrqueryresponse.destruct.php\n * @return void None\n *\/"
            },
            {
                "name": "getHttpStatus",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the HTTP status of the response\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.gethttpstatus.php\n * @return int the HTTP status of the response.\n *\/"
            },
            {
                "name": "getHttpStatusMessage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns more details on the HTTP status\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.gethttpstatusmessage.php\n * @return string more details on the HTTP status\n *\/"
            },
            {
                "name": "success",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Was the request a success\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.success.php\n * @return bool true if it was successful and false if it was not.\n *\/"
            },
            {
                "name": "getRequestUrl",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the full URL the request was sent to\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrequesturl.php\n * @return string the full URL the request was sent to\n *\/"
            },
            {
                "name": "getRawRequestHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw request headers sent to the Solr server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawrequestheaders.php\n * @return string the raw request headers sent to the Solr server\n *\/"
            },
            {
                "name": "getRawRequest",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw request sent to the Solr server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawrequest.php\n * @return string the raw request sent to the Solr server\n *\/"
            },
            {
                "name": "getRawResponseHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw response headers from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawresponseheaders.php\n * @return string the raw response headers from the server.\n *\/"
            },
            {
                "name": "getRawResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw response from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawresponse.php\n * @return string the raw response from the server.\n *\/"
            },
            {
                "name": "getDigestedResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the XML response as serialized PHP data\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getdigestedresponse.php\n * @return string the XML response as serialized PHP data\n *\/"
            },
            {
                "name": "setParseMode",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "parser_mode",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the parse mode\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.setparsemode.php\n * @param parser_mode int[optional] <p>\n * SolrResponse::PARSE_SOLR_DOC parses documents in SolrDocument instances. SolrResponse::PARSE_SOLR_OBJ parses document into SolrObjects.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "getResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns a SolrObject representing the XML response from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getresponse.php\n * @return SolrObject a SolrObject representing the XML response from the server\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "PARSE_SOLR_OBJ",
                "value": 0,
                "doc": null
            },
            {
                "name": "PARSE_SOLR_DOC",
                "value": 1,
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrUpdateResponse",
        "fqn": "\\SolrUpdateResponse",
        "type": 0,
        "extends": "SolrResponse",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Constructor\n * @link http:\/\/www.php.net\/manual\/en\/solrupdateresponse.construct.php\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor\n * @link http:\/\/www.php.net\/manual\/en\/solrupdateresponse.destruct.php\n * @return void None\n *\/"
            },
            {
                "name": "getHttpStatus",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the HTTP status of the response\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.gethttpstatus.php\n * @return int the HTTP status of the response.\n *\/"
            },
            {
                "name": "getHttpStatusMessage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns more details on the HTTP status\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.gethttpstatusmessage.php\n * @return string more details on the HTTP status\n *\/"
            },
            {
                "name": "success",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Was the request a success\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.success.php\n * @return bool true if it was successful and false if it was not.\n *\/"
            },
            {
                "name": "getRequestUrl",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the full URL the request was sent to\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrequesturl.php\n * @return string the full URL the request was sent to\n *\/"
            },
            {
                "name": "getRawRequestHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw request headers sent to the Solr server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawrequestheaders.php\n * @return string the raw request headers sent to the Solr server\n *\/"
            },
            {
                "name": "getRawRequest",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw request sent to the Solr server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawrequest.php\n * @return string the raw request sent to the Solr server\n *\/"
            },
            {
                "name": "getRawResponseHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw response headers from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawresponseheaders.php\n * @return string the raw response headers from the server.\n *\/"
            },
            {
                "name": "getRawResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw response from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawresponse.php\n * @return string the raw response from the server.\n *\/"
            },
            {
                "name": "getDigestedResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the XML response as serialized PHP data\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getdigestedresponse.php\n * @return string the XML response as serialized PHP data\n *\/"
            },
            {
                "name": "setParseMode",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "parser_mode",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the parse mode\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.setparsemode.php\n * @param parser_mode int[optional] <p>\n * SolrResponse::PARSE_SOLR_DOC parses documents in SolrDocument instances. SolrResponse::PARSE_SOLR_OBJ parses document into SolrObjects.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "getResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns a SolrObject representing the XML response from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getresponse.php\n * @return SolrObject a SolrObject representing the XML response from the server\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "PARSE_SOLR_OBJ",
                "value": 0,
                "doc": null
            },
            {
                "name": "PARSE_SOLR_DOC",
                "value": 1,
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrPingResponse",
        "fqn": "\\SolrPingResponse",
        "type": 0,
        "extends": "SolrResponse",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Constructor\n * @link http:\/\/www.php.net\/manual\/en\/solrpingresponse.construct.php\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor\n * @link http:\/\/www.php.net\/manual\/en\/solrpingresponse.destruct.php\n * @return void None\n *\/"
            },
            {
                "name": "getResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the response from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrpingresponse.getresponse.php\n * @return string an empty string.\n *\/"
            },
            {
                "name": "getHttpStatus",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the HTTP status of the response\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.gethttpstatus.php\n * @return int the HTTP status of the response.\n *\/"
            },
            {
                "name": "getHttpStatusMessage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns more details on the HTTP status\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.gethttpstatusmessage.php\n * @return string more details on the HTTP status\n *\/"
            },
            {
                "name": "success",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Was the request a success\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.success.php\n * @return bool true if it was successful and false if it was not.\n *\/"
            },
            {
                "name": "getRequestUrl",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the full URL the request was sent to\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrequesturl.php\n * @return string the full URL the request was sent to\n *\/"
            },
            {
                "name": "getRawRequestHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw request headers sent to the Solr server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawrequestheaders.php\n * @return string the raw request headers sent to the Solr server\n *\/"
            },
            {
                "name": "getRawRequest",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw request sent to the Solr server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawrequest.php\n * @return string the raw request sent to the Solr server\n *\/"
            },
            {
                "name": "getRawResponseHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw response headers from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawresponseheaders.php\n * @return string the raw response headers from the server.\n *\/"
            },
            {
                "name": "getRawResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw response from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawresponse.php\n * @return string the raw response from the server.\n *\/"
            },
            {
                "name": "getDigestedResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the XML response as serialized PHP data\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getdigestedresponse.php\n * @return string the XML response as serialized PHP data\n *\/"
            },
            {
                "name": "setParseMode",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "parser_mode",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the parse mode\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.setparsemode.php\n * @param parser_mode int[optional] <p>\n * SolrResponse::PARSE_SOLR_DOC parses documents in SolrDocument instances. SolrResponse::PARSE_SOLR_OBJ parses document into SolrObjects.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "PARSE_SOLR_OBJ",
                "value": 0,
                "doc": null
            },
            {
                "name": "PARSE_SOLR_DOC",
                "value": 1,
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrGenericResponse",
        "fqn": "\\SolrGenericResponse",
        "type": 0,
        "extends": "SolrResponse",
        "methods": [
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Constructor\n * @link http:\/\/www.php.net\/manual\/en\/solrgenericresponse.construct.php\n *\/"
            },
            {
                "name": "__destruct",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Destructor\n * @link http:\/\/www.php.net\/manual\/en\/solrgenericresponse.destruct.php\n * @return void None\n *\/"
            },
            {
                "name": "getHttpStatus",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the HTTP status of the response\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.gethttpstatus.php\n * @return int the HTTP status of the response.\n *\/"
            },
            {
                "name": "getHttpStatusMessage",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns more details on the HTTP status\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.gethttpstatusmessage.php\n * @return string more details on the HTTP status\n *\/"
            },
            {
                "name": "success",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Was the request a success\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.success.php\n * @return bool true if it was successful and false if it was not.\n *\/"
            },
            {
                "name": "getRequestUrl",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the full URL the request was sent to\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrequesturl.php\n * @return string the full URL the request was sent to\n *\/"
            },
            {
                "name": "getRawRequestHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw request headers sent to the Solr server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawrequestheaders.php\n * @return string the raw request headers sent to the Solr server\n *\/"
            },
            {
                "name": "getRawRequest",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw request sent to the Solr server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawrequest.php\n * @return string the raw request sent to the Solr server\n *\/"
            },
            {
                "name": "getRawResponseHeaders",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw response headers from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawresponseheaders.php\n * @return string the raw response headers from the server.\n *\/"
            },
            {
                "name": "getRawResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the raw response from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getrawresponse.php\n * @return string the raw response from the server.\n *\/"
            },
            {
                "name": "getDigestedResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the XML response as serialized PHP data\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getdigestedresponse.php\n * @return string the XML response as serialized PHP data\n *\/"
            },
            {
                "name": "setParseMode",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "parser_mode",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Sets the parse mode\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.setparsemode.php\n * @param parser_mode int[optional] <p>\n * SolrResponse::PARSE_SOLR_DOC parses documents in SolrDocument instances. SolrResponse::PARSE_SOLR_OBJ parses document into SolrObjects.\n * <\/p>\n * @return bool Returns true on success or false on failure.\n *\/"
            },
            {
                "name": "getResponse",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns a SolrObject representing the XML response from the server\n * @link http:\/\/www.php.net\/manual\/en\/solrresponse.getresponse.php\n * @return SolrObject a SolrObject representing the XML response from the server\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [
            {
                "name": "PARSE_SOLR_OBJ",
                "value": 0,
                "doc": null
            },
            {
                "name": "PARSE_SOLR_DOC",
                "value": 1,
                "doc": null
            }
        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrUtils",
        "fqn": "\\SolrUtils",
        "type": 0,
        "extends": "",
        "methods": [
            {
                "name": "escapeQueryChars",
                "type": 9,
                "byRef": false,
                "params": [
                    {
                        "name": "str",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Escapes a lucene query string\n * @link http:\/\/www.php.net\/manual\/en\/solrutils.escapequerychars.php\n * @param str string <p>\n * This is the query string to be escaped.\n * <\/p>\n * @return string the escaped string or false on failure.\n *\/"
            },
            {
                "name": "queryPhrase",
                "type": 9,
                "byRef": false,
                "params": [
                    {
                        "name": "str",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * Prepares a phrase from an unescaped lucene string\n * @link http:\/\/www.php.net\/manual\/en\/solrutils.queryphrase.php\n * @param str string <p>\n * The lucene phrase.\n * <\/p>\n * @return string the phrase contained in double quotes.\n *\/"
            },
            {
                "name": "digestXmlResponse",
                "type": 9,
                "byRef": false,
                "params": [
                    {
                        "name": "xmlresponse",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "parse_mode",
                        "type": null,
                        "byRef": false,
                        "default": null
                    }
                ],
                "doc": "\/**\n * Parses an response XML string into a SolrObject\n * @link http:\/\/www.php.net\/manual\/en\/solrutils.digestxmlresponse.php\n * @param xmlresponse string <p>\n * The XML response string from the Solr server.\n * <\/p>\n * @param parse_mode int[optional] <p>\n * Use SolrResponse::PARSE_SOLR_OBJ or SolrResponse::PARSE_SOLR_DOC\n * <\/p>\n * @return SolrObject the SolrObject representing the XML response.\n * <\/p>\n * <p>If the parse_mode parameter is set to SolrResponse::PARSE_SOLR_OBJ Solr documents will be parses as SolrObject instances.<\/p>\n * <p>If it is set to SolrResponse::PARSE_SOLR_DOC, they will be parsed as SolrDocument instances.\n *\/"
            },
            {
                "name": "getSolrVersion",
                "type": 9,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns the current version of the Solr extension\n * @link http:\/\/www.php.net\/manual\/en\/solrutils.getsolrversion.php\n * @return string The current version of the Apache Solr extension.\n *\/"
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrException",
        "fqn": "\\SolrException",
        "type": 0,
        "extends": "Exception",
        "methods": [
            {
                "name": "getInternalInfo",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns internal information where the Exception was thrown\n * @link http:\/\/www.php.net\/manual\/en\/solrexception.getinternalinfo.php\n * @return array an array containing internal information where the error was thrown. Used only for debugging by extension developers.\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param message[optional]\n * @param code[optional]\n * @param previous[optional]\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrIllegalOperationException",
        "fqn": "\\SolrIllegalOperationException",
        "type": 0,
        "extends": "SolrException",
        "methods": [
            {
                "name": "getInternalInfo",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns internal information where the Exception was thrown\n * @link http:\/\/www.php.net\/manual\/en\/solrillegaloperationexception.getinternalinfo.php\n * @return array an array containing internal information where the error was thrown. Used only for debugging by extension developers.\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param message[optional]\n * @param code[optional]\n * @param previous[optional]\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrIllegalArgumentException",
        "fqn": "\\SolrIllegalArgumentException",
        "type": 0,
        "extends": "SolrException",
        "methods": [
            {
                "name": "getInternalInfo",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns internal information where the Exception was thrown\n * @link http:\/\/www.php.net\/manual\/en\/solrillegalargumentexception.getinternalinfo.php\n * @return array an array containing internal information where the error was thrown. Used only for debugging by extension developers.\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param message[optional]\n * @param code[optional]\n * @param previous[optional]\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Class",
        "name": "SolrClientException",
        "fqn": "\\SolrClientException",
        "type": 0,
        "extends": "SolrException",
        "methods": [
            {
                "name": "getInternalInfo",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": "\/**\n * Returns internal information where the Exception was thrown\n * @link http:\/\/www.php.net\/manual\/en\/solrclientexception.getinternalinfo.php\n * @return array an array containing internal information where the error was thrown. Used only for debugging by extension developers.\n *\/"
            },
            {
                "name": "__construct",
                "type": 1,
                "byRef": false,
                "params": [
                    {
                        "name": "message",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "code",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    },
                    {
                        "name": "previous",
                        "type": null,
                        "byRef": false,
                        "default": ""
                    }
                ],
                "doc": "\/**\n * @param message[optional]\n * @param code[optional]\n * @param previous[optional]\n *\/"
            },
            {
                "name": "getMessage",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getCode",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getFile",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getLine",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTrace",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getPrevious",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "getTraceAsString",
                "type": 33,
                "byRef": false,
                "params": [

                ],
                "doc": null
            },
            {
                "name": "__toString",
                "type": 1,
                "byRef": false,
                "params": [

                ],
                "doc": null
            }
        ],
        "properties": [

        ],
        "constants": [

        ]
    },
    {
        "stmtType": "Function",
        "name": "solr_get_version",
        "params": [

        ]
    },
    {
        "stmtType": "Constant",
        "name": "SOLR_MAJOR_VERSION",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "SOLR_MINOR_VERSION",
        "value": 0
    },
    {
        "stmtType": "Constant",
        "name": "SOLR_PATCH_VERSION",
        "value": 1
    },
    {
        "stmtType": "Constant",
        "name": "SOLR_EXTENSION_VERSION",
        "value": "1.0.1"
    }
]
